{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/utils/checkbox.vue?vue&type=style&index=0&id=a726461e&lang=scss&scoped=true&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/utils/checkbox.vue","mtime":1579267580672},{"path":"/home/dev/work/client-auth/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$checkbox-color: rgba(0, 0, 0, 0.3);\n\n.checkbox-label {\n    display: flex;\n    align-items: center;\n    position: relative;\n    height: 24px;\n    padding-left: 29px;\n    line-height: 24px;\n    cursor: pointer;\n    user-select: none;\n\n    .label {\n        margin-bottom: 0;\n    }\n\n    /* Hide the browser's default checkbox */\n    input {\n        position: absolute;\n        width: 0;\n        height: 0;\n        cursor: pointer;\n        opacity: 0;\n    }\n\n    /* Create a custom checkbox */\n    .checkbox {\n        position: absolute;\n        left: 0;\n        width: 18px;\n        height: 18px;\n        background: #fff;\n        border: 2px solid $checkbox-color;\n        border-radius: 2px;\n    }\n\n    /* Create the checkmark/indicator (hidden when not checked) */\n    .checkbox:after {\n        content: '';\n        position: absolute;\n        display: none;\n\n\n        /* Style the checkmark/indicator */\n        top: 50%;\n        left: 50%;\n        width: 6px;\n        height: 12px;\n        border: solid $info-color;\n        border-width: 0 2.5px 2.5px 0;\n        transform: translate(-50%, -60%) rotate(45deg);\n\n    }\n\n    input:checked ~ .checkbox {\n        border-color: $info-color;\n    }\n\n    /* Show the checkmark when checked */\n    input:checked ~ .checkbox:after {\n        display: block;\n    }\n\n}\n",{"version":3,"sources":["checkbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"checkbox.vue","sourceRoot":"src/components/utils","sourcesContent":["<template>\n    <label\n            class=\"checkbox-label\"\n           @click.prevent=\"changeValue\"\n    >\n        <input\n                type=\"checkbox\"\n                :checked=\"value\"\n        >\n        <span class=\"checkbox\"></span>\n        <span class=\"label\">{{computeLabel}}</span>\n    </label>\n</template>\n\n<script>\n    export default {\n        name: \"table-checkbox\",\n        props: {\n            value: {\n                type: Boolean,\n                required: true\n            },\n            // may be a string, or object with true/false values\n            label: {},\n        },\n        methods: {\n            changeValue() {\n                // =============================== ATTENTION!!!!!============================================\n                // WE PASS INVERTED CHECKBOX VALUE\n                // BECAUSE CLICK EVENT FIRES BEFORE CHECKBOX CHANGE\n                this.$emit('input', !this.value);\n            }\n        },\n        computed: {\n            computeLabel() {\n                if(this.label) {\n                    return this.label[this.value] || this.label;\n                }\n                return ''\n\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    $checkbox-color: rgba(0, 0, 0, 0.3);\n\n    .checkbox-label {\n        display: flex;\n        align-items: center;\n        position: relative;\n        height: 24px;\n        padding-left: 29px;\n        line-height: 24px;\n        cursor: pointer;\n        user-select: none;\n\n        .label {\n            margin-bottom: 0;\n        }\n\n        /* Hide the browser's default checkbox */\n        input {\n            position: absolute;\n            width: 0;\n            height: 0;\n            cursor: pointer;\n            opacity: 0;\n        }\n\n        /* Create a custom checkbox */\n        .checkbox {\n            position: absolute;\n            left: 0;\n            width: 18px;\n            height: 18px;\n            background: #fff;\n            border: 2px solid $checkbox-color;\n            border-radius: 2px;\n        }\n\n        /* Create the checkmark/indicator (hidden when not checked) */\n        .checkbox:after {\n            content: '';\n            position: absolute;\n            display: none;\n\n\n            /* Style the checkmark/indicator */\n            top: 50%;\n            left: 50%;\n            width: 6px;\n            height: 12px;\n            border: solid $info-color;\n            border-width: 0 2.5px 2.5px 0;\n            transform: translate(-50%, -60%) rotate(45deg);\n\n        }\n\n        input:checked ~ .checkbox {\n            border-color: $info-color;\n        }\n\n        /* Show the checkmark when checked */\n        input:checked ~ .checkbox:after {\n            display: block;\n        }\n\n    }\n</style>"]}]}