{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/node_modules/vuetable-2/src/components/VuetableColGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/node_modules/vuetable-2/src/components/VuetableColGroup.vue","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'vuetable-col-group',\r\n\r\n  props: {\r\n    isHeader: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    vuetable() {\r\n      return this.$parent\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    columnClass (field, fieldIndex) {\r\n      let fieldName = typeof(field.name) === \"object\" && field.name !== null\r\n        ? field.name.name\r\n        : field.name\r\n      fieldName = fieldName.replace(this.fieldPrefix, \"\")\r\n\r\n      return ['vuetable-col-'+fieldName, field.titleClass]\r\n    },\r\n  }\r\n}\r\n",{"version":3,"sources":["VuetableColGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"VuetableColGroup.vue","sourceRoot":"node_modules/vuetable-2/src/components","sourcesContent":["<template>\r\n  <colgroup>\r\n    <template v-for=\"(field, fieldIndex) in vuetable.tableFields\">\r\n      <template v-if=\"field.visible\">\r\n      <col :key=\"fieldIndex\"\r\n          :style=\"{width: field.width}\"\r\n          :class=\"columnClass(field, fieldIndex)\"\r\n      >\r\n      </template>\r\n    </template>\r\n    <col v-if=\"isHeader && vuetable.scrollVisible\" \r\n      :style=\"{width: vuetable.scrollBarWidth}\" \r\n      class=\"vuetable-col-gutter\"\r\n    >\r\n  </colgroup>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'vuetable-col-group',\r\n\r\n  props: {\r\n    isHeader: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    vuetable() {\r\n      return this.$parent\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    columnClass (field, fieldIndex) {\r\n      let fieldName = typeof(field.name) === \"object\" && field.name !== null\r\n        ? field.name.name\r\n        : field.name\r\n      fieldName = fieldName.replace(this.fieldPrefix, \"\")\r\n\r\n      return ['vuetable-col-'+fieldName, field.titleClass]\r\n    },\r\n  }\r\n}\r\n</script>\r\n"]}]}