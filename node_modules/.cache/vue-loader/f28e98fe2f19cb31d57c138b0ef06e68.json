{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/contact-center/agents/agent-history-popup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/contact-center/agents/agent-history-popup.vue","mtime":1580199400969},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport popup from '../../utils/popup';\nimport tableComponentMixin from '../../../mixins/tableComponentMixin';\nimport {mapActions, mapState} from \"vuex\";\nimport datetimePicker from \"../../utils/datetimepicker\";\n\nexport default {\n    name: \"agent-history-popup\",\n    mixins: [tableComponentMixin],\n    components: {\n        datetimePicker,\n        popup,\n    },\n    data() {\n        return {\n            fields: [\n                {name: 'state', title: this.$t('objects.ccenter.agents.historyState')},\n                {name: 'from', title: this.$t('objects.ccenter.agents.historyFrom')},\n                {name: 'to', title: this.$t('objects.ccenter.agents.historyTo')},\n                {name: 'duration', title: this.$t('objects.ccenter.agents.historyDuration')},\n            ],\n        }\n    },\n\n    computed: {\n        ...mapState('ccenter/agents', {\n            dataList: state => state.history.dataList,\n            page: state => state.history.page, // acts like a boolean: if page is 0, there's no back page\n            isNextPage: state => state.history.isNextPage,\n        }),\n\n        size: {\n            get() {return this.$store.state.ccenter.agents.history.size},\n            set(value) {this.setSize(value)}\n        },\n\n        search: {\n            get() {return this.$store.state.ccenter.agents.history.search},\n            set(value) {this.setSearch(value)}\n        },\n\n        date: {\n            get() {return this.$store.state.ccenter.agents.history.date},\n            set(value) {this.setHistoryDate(value)}\n        },\n    },\n\n    methods: {\n        computeOnlineText(state) {\n            return state ? this.$t('objects.online') : this.$t('objects.offline');\n        },\n\n        computeTime(time) {\n            if(isNaN(parseInt(time))) return time;\n            return new Date(+time).toString().split(' ')[4];\n        },\n\n        computeDuration(rowIndex) {\n            const range = (this.dataList[rowIndex].loggedOut || Date.now()) - this.dataList[rowIndex].joinedAt;\n            return new Date(range).toISOString().slice(11, 19);\n        },\n\n        ...mapActions('ccenter/agents', {\n            loadDataList: 'LOAD_HISTORY_DATA_LIST',\n            setSize: 'SET_HISTORY_SIZE',\n            setSearch: 'SET_HISTORY_SEARCH',\n            setHistoryDate: 'SET_HISTORY_DATE',\n            nextPage: 'NEXT_HISTORY_PAGE',\n            prevPage: 'PREV_HISTORY_PAGE',\n        }),\n    },\n}\n",{"version":3,"sources":["agent-history-popup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"agent-history-popup.vue","sourceRoot":"src/components/contact-center/agents","sourcesContent":["<template>\n    <popup\n            :title=\"$t('objects.ccenter.agents.statusHistory')\"\n            :primaryText=\"$t('objects.ok')\"\n            :primaryAction=\"() => $emit('close')\"\n            @close=\"$emit('close')\"\n            overflow\n    >\n        <section class=\"history-popup\">\n            <datetime-picker\n                    class=\"history-popup__datetimepicker datepicker__to-right\"\n                    v-model=\"date\"\n                    hide-label\n                    hide-details\n            ></datetime-picker>\n            <vuetable\n                    :api-mode=\"false\"\n                    :fields=\"fields\"\n                    :data=\"dataList\"\n            >\n                <template slot=\"state\" slot-scope=\"props\">\n<!--                    <status-->\n<!--                            :class=\"{'status__true': dataList[props.rowIndex].state}\"-->\n<!--                            :text=computeOnlineText(dataList[props.rowIndex].state)-->\n<!--                    ></status>-->\n                    <div>\n                        {{dataList[props.rowIndex].state.toUpperCase()}}\n                    </div>\n                </template>\n\n                <template slot=\"from\" slot-scope=\"props\">\n                    <div>\n                        {{computeTime(dataList[props.rowIndex].joinedAt)}}\n                    </div>\n                </template>\n\n                <template slot=\"to\" slot-scope=\"props\">\n                    <div>\n                        {{computeTime(dataList[props.rowIndex].loggedOut) || 'Now'}}\n                    </div>\n                </template>\n\n                <template slot=\"duration\" slot-scope=\"props\">\n                    <div>\n                        {{computeDuration(props.rowIndex)}}\n                    </div>\n                </template>\n            </vuetable>\n            <pagination\n                    v-model=\"size\"\n                    @loadDataList=\"loadDataList\"\n                    @next=\"nextPage\"\n                    @prev=\"prevPage\"\n                    :isNext=\"isNextPage\"\n                    :isPrev=\"!!page\"\n            ></pagination>\n        </section>\n    </popup>\n</template>\n\n<script>\n    import popup from '../../utils/popup';\n    import tableComponentMixin from '../../../mixins/tableComponentMixin';\n    import {mapActions, mapState} from \"vuex\";\n    import datetimePicker from \"../../utils/datetimepicker\";\n\n    export default {\n        name: \"agent-history-popup\",\n        mixins: [tableComponentMixin],\n        components: {\n            datetimePicker,\n            popup,\n        },\n        data() {\n            return {\n                fields: [\n                    {name: 'state', title: this.$t('objects.ccenter.agents.historyState')},\n                    {name: 'from', title: this.$t('objects.ccenter.agents.historyFrom')},\n                    {name: 'to', title: this.$t('objects.ccenter.agents.historyTo')},\n                    {name: 'duration', title: this.$t('objects.ccenter.agents.historyDuration')},\n                ],\n            }\n        },\n\n        computed: {\n            ...mapState('ccenter/agents', {\n                dataList: state => state.history.dataList,\n                page: state => state.history.page, // acts like a boolean: if page is 0, there's no back page\n                isNextPage: state => state.history.isNextPage,\n            }),\n\n            size: {\n                get() {return this.$store.state.ccenter.agents.history.size},\n                set(value) {this.setSize(value)}\n            },\n\n            search: {\n                get() {return this.$store.state.ccenter.agents.history.search},\n                set(value) {this.setSearch(value)}\n            },\n\n            date: {\n                get() {return this.$store.state.ccenter.agents.history.date},\n                set(value) {this.setHistoryDate(value)}\n            },\n        },\n\n        methods: {\n            computeOnlineText(state) {\n                return state ? this.$t('objects.online') : this.$t('objects.offline');\n            },\n\n            computeTime(time) {\n                if(isNaN(parseInt(time))) return time;\n                return new Date(+time).toString().split(' ')[4];\n            },\n\n            computeDuration(rowIndex) {\n                const range = (this.dataList[rowIndex].loggedOut || Date.now()) - this.dataList[rowIndex].joinedAt;\n                return new Date(range).toISOString().slice(11, 19);\n            },\n\n            ...mapActions('ccenter/agents', {\n                loadDataList: 'LOAD_HISTORY_DATA_LIST',\n                setSize: 'SET_HISTORY_SIZE',\n                setSearch: 'SET_HISTORY_SEARCH',\n                setHistoryDate: 'SET_HISTORY_DATE',\n                nextPage: 'NEXT_HISTORY_PAGE',\n                prevPage: 'PREV_HISTORY_PAGE',\n            }),\n        },\n    }\n</script>\n\n<style lang=\"scss\">\n    .history-popup {\n        padding-bottom: 28px;\n\n        .history-popup__datepicker {\n            max-width: 220px;\n        }\n\n        .history-table table {\n            min-width: auto;\n        }\n\n        .pagination {\n            width: fit-content;\n            margin-top: 28px;\n            margin-left: auto;\n        }\n    }\n</style>"]}]}