{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/contact-center/members/opened-queue-member.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/contact-center/members/opened-queue-member.vue","mtime":1578912593885},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport openedQueueMemberGeneral from './opened-queue-member-general';\nimport openedQueueMemberCommunication from './opened-queue-member-communication';\nimport openedQueueMemberVariables from './opened-queue-member-variables';\nimport editComponentMixin from '@/mixins/editComponentMixin';\nimport {mapActions, mapState} from \"vuex\";\nimport {requiredArrayValue} from \"../../../utils/validators\";\nimport required from \"vuelidate/src/validators/required\";\n\nexport default {\n    name: \"opened-queue-member\",\n    mixins: [editComponentMixin],\n    components: {\n        openedQueueMemberGeneral,\n        openedQueueMemberCommunication,\n        openedQueueMemberVariables,\n    },\n\n    data() {\n        return {\n            tabs: [\n                {\n                    text: this.$t('objects.general'),\n                    value: 'general',\n                },\n                {\n                    text: this.$tc('objects.lookups.communications.communications', 1),\n                    value: 'communication',\n                },\n                {\n                    text: this.$tc('objects.ccenter.queues.variables', 2),\n                    value: 'variables',\n                },\n            ],\n        }\n    },\n\n    validations: {\n        itemInstance: {\n            name: {\n                required\n            },\n            communications: {\n                requiredArrayValue\n            }\n        }\n    },\n\n    mounted() {\n        this.setParentId(this.$route.params.queueId);\n        this.id = this.$route.params.id;\n        this.loadItem();\n    },\n\n    computed: {\n        ...mapState('ccenter/queues/members', {\n            itemInstance: state => state.itemInstance,\n        }),\n        id: {\n            get() {return this.$store.state.ccenter.queues.members.itemId},\n            set(value) {this.setId(value)}\n        },\n    },\n\n    methods: {\n        ...mapActions('ccenter/queues/members', {\n            setParentId: 'SET_PARENT_ITEM_ID',\n            setId: 'SET_ITEM_ID',\n            loadItem: 'LOAD_ITEM',\n            addItem: 'ADD_ITEM',\n            updateItem: 'UPDATE_ITEM',\n        }),\n    },\n}\n",{"version":3,"sources":["opened-queue-member.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"opened-queue-member.vue","sourceRoot":"src/components/contact-center/members","sourcesContent":["<template>\n    <div>\n        <object-header\n                :primaryText=\"computePrimaryText\"\n                :primaryAction=\"save\"\n                :primaryDisabled=\"computeDisabled\"\n                close\n        >\n            {{$tc('objects.ccenter.members.members', 1)}} |\n            {{computeTitle}}\n        </object-header>\n        <tabs-component\n                :tabs=\"tabs\"\n                :root=\"$options.name\"\n        >\n            <template slot=\"component\" slot-scope=\"props\">\n                <component\n                        class=\"tabs-inner-component\"\n                        :is=\"props.currentTab\"\n                        :v=\"$v\"\n                ></component>\n            </template>\n        </tabs-component>\n    </div>\n</template>\n\n<script>\n    import openedQueueMemberGeneral from './opened-queue-member-general';\n    import openedQueueMemberCommunication from './opened-queue-member-communication';\n    import openedQueueMemberVariables from './opened-queue-member-variables';\n    import editComponentMixin from '@/mixins/editComponentMixin';\n    import {mapActions, mapState} from \"vuex\";\n    import {requiredArrayValue} from \"../../../utils/validators\";\n    import required from \"vuelidate/src/validators/required\";\n\n    export default {\n        name: \"opened-queue-member\",\n        mixins: [editComponentMixin],\n        components: {\n            openedQueueMemberGeneral,\n            openedQueueMemberCommunication,\n            openedQueueMemberVariables,\n        },\n\n        data() {\n            return {\n                tabs: [\n                    {\n                        text: this.$t('objects.general'),\n                        value: 'general',\n                    },\n                    {\n                        text: this.$tc('objects.lookups.communications.communications', 1),\n                        value: 'communication',\n                    },\n                    {\n                        text: this.$tc('objects.ccenter.queues.variables', 2),\n                        value: 'variables',\n                    },\n                ],\n            }\n        },\n\n        validations: {\n            itemInstance: {\n                name: {\n                    required\n                },\n                communications: {\n                    requiredArrayValue\n                }\n            }\n        },\n\n        mounted() {\n            this.setParentId(this.$route.params.queueId);\n            this.id = this.$route.params.id;\n            this.loadItem();\n        },\n\n        computed: {\n            ...mapState('ccenter/queues/members', {\n                itemInstance: state => state.itemInstance,\n            }),\n            id: {\n                get() {return this.$store.state.ccenter.queues.members.itemId},\n                set(value) {this.setId(value)}\n            },\n        },\n\n        methods: {\n            ...mapActions('ccenter/queues/members', {\n                setParentId: 'SET_PARENT_ITEM_ID',\n                setId: 'SET_ITEM_ID',\n                loadItem: 'LOAD_ITEM',\n                addItem: 'ADD_ITEM',\n                updateItem: 'UPDATE_ITEM',\n            }),\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}