{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/integrations/triggers/the-triggers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/integrations/triggers/the-triggers.vue","mtime":1578657456666},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tableComponentMixin from '@/mixins/tableComponentMixin';\nimport {_checkboxTableField, _actionsTableField_2, _switcherWidth} from \"@/utils/tableFieldPresets\";\nimport triggerPopup from './create-trigger-popup';\n\nexport default {\n    name: \"the-triggers\",\n    mixins: [tableComponentMixin],\n    components: {\n        triggerPopup\n    },\n    data() {\n        return {\n            fields: [\n                _checkboxTableField,\n                {name: 'name', title: this.$t('objects.name')},\n                {name: 'type', title: this.$t('objects.integrations.triggers.type')},\n                {name: 'enabled', title: this.$t('objects.enabled'), width: _switcherWidth},\n                {name: 'schema', title: this.$t('objects.integrations.triggers.schema')},\n                _actionsTableField_2,\n            ],\n        };\n    },\n\n    methods: {\n        create() {\n            this.popupTriggerIf = true;\n        },\n\n        edit(rowId) {\n            this.$router.push({\n                name: 'trigger-edit',\n                params: {id: this.filteredDataList[rowId].id},\n            });\n        },\n\n        async deleteItem(item) {\n            // await deleteCommunication(item.id);\n        },\n\n        async loadDataList() {\n            // this.dataList = await getCommunicationsList();\n            for (let i = 0; i < 10; i++) {\n                this.dataList.push({\n                    name: 'Trigger name ' + i,\n                    type: i%2 ? 'On event' : 'At time',\n                    enabled: !!Math.round(Math.random()),\n                    schema: {\n                        name: 'Schema name',\n                    },\n                    isSelected: false,\n                });\n            }\n\n            this.filterData();\n        }\n    }\n}\n",{"version":3,"sources":["the-triggers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"the-triggers.vue","sourceRoot":"src/components/integrations/triggers","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n\n        <object-header\n                :primaryAction=\"create\"\n        >\n            {{$t('objects.integrations.integrations')}} |\n            {{$tc('objects.integrations.triggers.triggers', 2)}}\n        </object-header>\n\n        <trigger-popup\n                v-if=\"true\"\n                @close=\"popupTriggerIf = false\"\n        >\n        </trigger-popup>\n\n        <section class=\"object-content\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">{{$t('objects.integrations.triggers.allTriggers')}}</h3>\n                <div class=\"content-header__actions-wrap\">\n                    <search\n                            @filterData=\"filterData\"\n                    ></search>\n                    <i\n                            class=\"icon-icon_delete icon-action\"\n                            :class=\"{'hidden': anySelected}\"\n                            @click=\"deleteSelected\"\n                    ></i>\n                </div>\n            </header>\n\n            <vuetable\n                    ref=\"vuetable\"\n                    :api-mode=\"false\"\n                    :fields=\"fields\"\n                    :data=\"filteredDataList\"\n            >\n                <template slot=\"name\" slot-scope=\"props\">\n                    <div class=\"tt-capitalize\">\n                        <span class=\"nameLink\" @click=\"edit(props.rowIndex)\">\n                        {{filteredDataList[props.rowIndex].name}}\n                        </span>\n                    </div>\n                </template>\n\n                <template slot=\"type\" slot-scope=\"props\">\n                    <div>\n                        {{filteredDataList[props.rowIndex].type}}\n                    </div>\n                </template>\n\n                <template slot=\"enabled\" slot-scope=\"props\">\n                    <switcher\n                            v-model=\"filteredDataList[props.rowIndex].enabled\"\n                    ></switcher>\n                </template>\n\n                <template slot=\"schema\" slot-scope=\"props\">\n                    <div>\n                        {{filteredDataList[props.rowIndex].schema.name}}\n                    </div>\n                </template>\n\n                <template slot=\"actions\" slot-scope=\"props\">\n                    <i class=\"vuetable-action icon-icon_edit\"\n                       @click=\"edit(props.rowIndex)\"\n                    ></i>\n                    <i class=\"vuetable-action icon-icon_delete\"\n                       @click=\"remove(props.rowIndex)\"\n                    ></i>\n                </template>\n            </vuetable>\n            <pagination></pagination>\n        </section>\n    </div>\n</template>\n\n<script>\n    import tableComponentMixin from '@/mixins/tableComponentMixin';\n    import {_checkboxTableField, _actionsTableField_2, _switcherWidth} from \"@/utils/tableFieldPresets\";\n    import triggerPopup from './create-trigger-popup';\n\n    export default {\n        name: \"the-triggers\",\n        mixins: [tableComponentMixin],\n        components: {\n            triggerPopup\n        },\n        data() {\n            return {\n                fields: [\n                    _checkboxTableField,\n                    {name: 'name', title: this.$t('objects.name')},\n                    {name: 'type', title: this.$t('objects.integrations.triggers.type')},\n                    {name: 'enabled', title: this.$t('objects.enabled'), width: _switcherWidth},\n                    {name: 'schema', title: this.$t('objects.integrations.triggers.schema')},\n                    _actionsTableField_2,\n                ],\n            };\n        },\n\n        methods: {\n            create() {\n                this.popupTriggerIf = true;\n            },\n\n            edit(rowId) {\n                this.$router.push({\n                    name: 'trigger-edit',\n                    params: {id: this.filteredDataList[rowId].id},\n                });\n            },\n\n            async deleteItem(item) {\n                // await deleteCommunication(item.id);\n            },\n\n            async loadDataList() {\n                // this.dataList = await getCommunicationsList();\n                for (let i = 0; i < 10; i++) {\n                    this.dataList.push({\n                        name: 'Trigger name ' + i,\n                        type: i%2 ? 'On event' : 'At time',\n                        enabled: !!Math.round(Math.random()),\n                        schema: {\n                            name: 'Schema name',\n                        },\n                        isSelected: false,\n                    });\n                }\n\n                this.filterData();\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]}]}