{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/contact-center/queues/inbound-queue/opened-queue-inbound-queue-general.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/contact-center/queues/inbound-queue/opened-queue-inbound-queue-general.vue","mtime":1579708130967},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\nimport {mapActions} from \"vuex\";\nimport {getCalendarList} from \"../../../../api/lookups/calendars/calendars\";\nimport {getTeamsList} from \"../../../../api/contact-center/teams/teams\";\nimport {getFlowList} from \"../../../../api/routing/flow/flow\";\nimport {getBlacklistList} from \"../../../../api/lookups/blacklists/blacklists\";\n\nexport default {\n    name: \"opened-queue-inbound-queue-general\",\n    mixins: [openedTabComponentMixin],\n    data() {\n        return {\n            dropdownOptionsCalendarList: [],\n            dropdownOptionsBlacklistList: [],\n            dropdownOptionsPriorityList: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n            dropdownOptionsSchemaList: [],\n            dropdownOptionsTeamList: [],\n        }\n    },\n\n    mounted() {\n        this.loadDropdownOptionsCalendarList();\n        this.loadDropdownOptionsBlacklistList();\n        this.loadDropdownOptionsSchemaList();\n        this.loadDropdownOptionsTeamList();\n    },\n\n    computed: {\n        name: {\n            get() {\n                return this.$store.state.ccenter.queues.itemInstance.name\n            },\n            set(value) {\n                this.setItemProp({prop: 'name', value})\n            }\n        },\n\n        calendar: {\n            get() {\n                return this.$store.state.ccenter.queues.itemInstance.calendar\n            },\n            set(value) {\n                this.setItemProp({prop: 'calendar', value})\n            }\n        },\n\n        dncList: {\n            get() {\n                return this.$store.state.ccenter.queues.itemInstance.dncList\n            },\n            set(value) {\n                this.setItemProp({prop: 'dncList', value})\n            }\n        },\n\n        priority: {\n            get() {\n                return this.$store.state.ccenter.queues.itemInstance.priority\n            },\n            set(value) {\n                this.setItemProp({prop: 'priority', value})\n            }\n        },\n\n        schema: {\n            get() {\n                return this.$store.state.ccenter.queues.itemInstance.schema\n            },\n            set(value) {\n                this.setItemProp({prop: 'schema', value})\n            }\n        },\n\n        team: {\n            get() {\n                return this.$store.state.ccenter.queues.itemInstance.team\n            },\n            set(value) {\n                this.setItemProp({prop: 'team', value})\n            }\n        },\n\n        description: {\n            get() {\n                return this.$store.state.ccenter.queues.itemInstance.description\n            },\n            set(value) {\n                this.setItemProp({prop: 'description', value})\n            }\n        },\n    },\n\n    methods: {\n        async loadDropdownOptionsCalendarList(search) {\n            const response = await getCalendarList(0, 10, search);\n            this.dropdownOptionsCalendarList = response.map(item => {\n                return {\n                    name: item.name,\n                    id: item.id,\n                }\n            });\n        },\n\n        async loadDropdownOptionsBlacklistList(search) {\n            const response = await getBlacklistList(0, 10, search);\n            this.dropdownOptionsBlacklistList = response.map(item => {\n                return {\n                    name: item.name,\n                    id: item.id,\n                }\n            });\n        },\n\n        async loadDropdownOptionsSchemaList(search) {\n            const response = await getFlowList(0, 10, search);\n            this.dropdownOptionsSchemaList = response.map(item => {\n                return {\n                    name: item.name,\n                    id: item.id,\n                }\n            });\n        },\n\n        async loadDropdownOptionsTeamList(search) {\n            const response = await getTeamsList(0, 10, search);\n            this.dropdownOptionsTeamList = response.map(item => {\n                return {\n                    name: item.name,\n                    id: item.id,\n                }\n            });\n        },\n\n        ...mapActions('ccenter/queues', {\n            setItemProp: 'SET_ITEM_PROPERTY',\n        }),\n    },\n}\n",{"version":3,"sources":["opened-queue-inbound-queue-general.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"opened-queue-inbound-queue-general.vue","sourceRoot":"src/components/contact-center/queues/inbound-queue","sourcesContent":["<template>\n    <section>\n        <header class=\"content-header\">\n            <h3 class=\"content-title\">{{$t('objects.generalInfo')}}</h3>\n        </header>\n        <form class=\"object-input-grid\">\n            <form-input\n                    v-model=\"name\"\n                    :v=\"v.itemInstance.name\"\n                    :label=\"$t('objects.name')\"\n                    required\n            ></form-input>\n\n            <dropdown-select\n                    v-model=\"calendar\"\n                    :v=\"v.itemInstance.calendar\"\n                    :options=\"dropdownOptionsCalendarList\"\n                    :label=\"$tc('objects.lookups.calendars.calendars', 1)\"\n                    @search=\"loadDropdownOptionsCalendarList\"\n                    required\n            ></dropdown-select>\n\n            <dropdown-select\n                    v-model=\"dncList\"\n                    :options=\"dropdownOptionsBlacklistList\"\n                    :label=\"$tc('objects.lookups.blacklist.blacklist', 1)\"\n                    @search=\"loadDropdownOptionsBlacklistList\"\n            ></dropdown-select>\n\n            <dropdown-select\n                    v-model=\"priority\"\n                    :options=\"dropdownOptionsPriorityList\"\n                    :label=\"$t('objects.ccenter.queues.priority')\"\n            ></dropdown-select>\n\n            <dropdown-select\n                    v-model=\"schema\"\n                    :v=\"v.itemInstance.schema\"\n                    :options=\"dropdownOptionsSchemaList\"\n                    :label=\"$t('objects.routing.schema')\"\n                    @search=\"loadDropdownOptionsSchemaList\"\n                    required\n            ></dropdown-select>\n\n            <dropdown-select\n                    v-model=\"team\"\n                    :v=\"v.itemInstance.team\"\n                    :options=\"dropdownOptionsTeamList\"\n                    :label=\"$tc('objects.ccenter.teams.teams', 1)\"\n                    @search=\"loadDropdownOptionsTeamList\"\n                    required\n            ></dropdown-select>\n\n            <form-input\n                    v-model=\"description\"\n                    :label=\"$t('objects.description')\"\n                    textarea\n            ></form-input>\n        </form>\n    </section>\n</template>\n\n<script>\n    import openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\n    import {mapActions} from \"vuex\";\n    import {getCalendarList} from \"../../../../api/lookups/calendars/calendars\";\n    import {getTeamsList} from \"../../../../api/contact-center/teams/teams\";\n    import {getFlowList} from \"../../../../api/routing/flow/flow\";\n    import {getBlacklistList} from \"../../../../api/lookups/blacklists/blacklists\";\n\n    export default {\n        name: \"opened-queue-inbound-queue-general\",\n        mixins: [openedTabComponentMixin],\n        data() {\n            return {\n                dropdownOptionsCalendarList: [],\n                dropdownOptionsBlacklistList: [],\n                dropdownOptionsPriorityList: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n                dropdownOptionsSchemaList: [],\n                dropdownOptionsTeamList: [],\n            }\n        },\n\n        mounted() {\n            this.loadDropdownOptionsCalendarList();\n            this.loadDropdownOptionsBlacklistList();\n            this.loadDropdownOptionsSchemaList();\n            this.loadDropdownOptionsTeamList();\n        },\n\n        computed: {\n            name: {\n                get() {\n                    return this.$store.state.ccenter.queues.itemInstance.name\n                },\n                set(value) {\n                    this.setItemProp({prop: 'name', value})\n                }\n            },\n\n            calendar: {\n                get() {\n                    return this.$store.state.ccenter.queues.itemInstance.calendar\n                },\n                set(value) {\n                    this.setItemProp({prop: 'calendar', value})\n                }\n            },\n\n            dncList: {\n                get() {\n                    return this.$store.state.ccenter.queues.itemInstance.dncList\n                },\n                set(value) {\n                    this.setItemProp({prop: 'dncList', value})\n                }\n            },\n\n            priority: {\n                get() {\n                    return this.$store.state.ccenter.queues.itemInstance.priority\n                },\n                set(value) {\n                    this.setItemProp({prop: 'priority', value})\n                }\n            },\n\n            schema: {\n                get() {\n                    return this.$store.state.ccenter.queues.itemInstance.schema\n                },\n                set(value) {\n                    this.setItemProp({prop: 'schema', value})\n                }\n            },\n\n            team: {\n                get() {\n                    return this.$store.state.ccenter.queues.itemInstance.team\n                },\n                set(value) {\n                    this.setItemProp({prop: 'team', value})\n                }\n            },\n\n            description: {\n                get() {\n                    return this.$store.state.ccenter.queues.itemInstance.description\n                },\n                set(value) {\n                    this.setItemProp({prop: 'description', value})\n                }\n            },\n        },\n\n        methods: {\n            async loadDropdownOptionsCalendarList(search) {\n                const response = await getCalendarList(0, 10, search);\n                this.dropdownOptionsCalendarList = response.map(item => {\n                    return {\n                        name: item.name,\n                        id: item.id,\n                    }\n                });\n            },\n\n            async loadDropdownOptionsBlacklistList(search) {\n                const response = await getBlacklistList(0, 10, search);\n                this.dropdownOptionsBlacklistList = response.map(item => {\n                    return {\n                        name: item.name,\n                        id: item.id,\n                    }\n                });\n            },\n\n            async loadDropdownOptionsSchemaList(search) {\n                const response = await getFlowList(0, 10, search);\n                this.dropdownOptionsSchemaList = response.map(item => {\n                    return {\n                        name: item.name,\n                        id: item.id,\n                    }\n                });\n            },\n\n            async loadDropdownOptionsTeamList(search) {\n                const response = await getTeamsList(0, 10, search);\n                this.dropdownOptionsTeamList = response.map(item => {\n                    return {\n                        name: item.name,\n                        id: item.id,\n                    }\n                });\n            },\n\n            ...mapActions('ccenter/queues', {\n                setItemProp: 'SET_ITEM_PROPERTY',\n            }),\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]}]}