{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/directory/devices/upload-devices-popup.vue?vue&type=template&id=55651354&scoped=true&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/directory/devices/upload-devices-popup.vue","mtime":1579614161366},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"popup\",\n    {\n      staticClass: \"upload-popup\",\n      attrs: {\n        title: _vm.$t(\"objects.importCSV\"),\n        primaryAction: _vm.save,\n        primaryDisabled: _vm.computeDisabledSave\n      },\n      on: {\n        close: function($event) {\n          return _vm.$emit(\"close\")\n        }\n      }\n    },\n    [\n      _c(\n        \"section\",\n        { staticClass: \"upload-popup__info\" },\n        [\n          _c(\"checkbox\", {\n            staticClass: \"upload-popup__info-headers\",\n            attrs: { label: _vm.$t(\"objects.CSV.skipHeaders\") },\n            model: {\n              value: _vm.skipHeaders,\n              callback: function($$v) {\n                _vm.skipHeaders = $$v\n              },\n              expression: \"skipHeaders\"\n            }\n          }),\n          _c(\n            \"form\",\n            [\n              _c(\"dropdown-select\", {\n                attrs: {\n                  options: _vm.charsetOptions,\n                  label: _vm.$t(\"objects.CSV.charSet\")\n                },\n                model: {\n                  value: _vm.charset,\n                  callback: function($$v) {\n                    _vm.charset = $$v\n                  },\n                  expression: \"charset\"\n                }\n              }),\n              _c(\"form-input\", {\n                attrs: { label: _vm.$t(\"objects.CSV.separator\") },\n                model: {\n                  value: _vm.separator,\n                  callback: function($$v) {\n                    _vm.separator = $$v\n                  },\n                  expression: \"separator\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"section\", { staticClass: \"CSV-column-match\" }, [\n        _c(\"header\", { staticClass: \"column-headers\" }, [\n          _c(\"div\", [_vm._v(_vm._s(_vm.$t(\"objects.CSV.fieldName\")))]),\n          _c(\"div\", [_vm._v(_vm._s(_vm.$t(\"objects.CSV.CSVColumn\")))])\n        ]),\n        _c(\"div\", { staticClass: \"column-rows\" }, [\n          _c(\n            \"ul\",\n            _vm._l(_vm.mappingFields, function(field, key) {\n              return _c(\n                \"li\",\n                { key: key },\n                [\n                  _c(\"div\", [\n                    _vm._v(_vm._s(field.name)),\n                    field.required ? _c(\"span\", [_vm._v(\"*\")]) : _vm._e()\n                  ]),\n                  _c(\"dropdown-select\", {\n                    attrs: {\n                      placeholder: field.name,\n                      options: _vm.computeHeaders,\n                      \"hide-label\": \"\",\n                      \"hide-details\": \"\"\n                    },\n                    model: {\n                      value: field.csv,\n                      callback: function($$v) {\n                        _vm.$set(field, \"csv\", $$v)\n                      },\n                      expression: \"field.csv\"\n                    }\n                  }),\n                  field.tooltip\n                    ? _c(\"div\", { staticClass: \"upload-tooltip\" }, [\n                        _vm._v(_vm._s(field.tooltip))\n                      ])\n                    : _vm._e()\n                ],\n                1\n              )\n            }),\n            0\n          )\n        ])\n      ])\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}