{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/contact-center/queues/predictive-dialer/opened-queue-predictive-dialer-timing.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/contact-center/queues/predictive-dialer/opened-queue-predictive-dialer-timing.vue","mtime":1579018365119},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport timepicker from '@/components/utils/timepicker';\nimport openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\nimport {mapActions} from \"vuex\";\n\nexport default {\n    name: \"opened-queue-outbound-ivr-timing\",\n    mixins: [openedTabComponentMixin],\n    components: {timepicker},\n    data() {\n        return {}\n    },\n\n    computed: {\n        originateTimeout: {\n            get() {\n                return this.$store.state.ccenter.queues.itemInstance.payload.originateTimeout\n            },\n            set(value) {\n                this.setPayloadItemProp({prop: 'name', value})\n            }\n        },\n\n        secBetweenRetries: {\n            get() {\n                return this.$store.state.ccenter.queues.itemInstance.payload.secBetweenRetries\n            },\n            set(value) {\n                this.setPayloadItemProp({prop: 'secBetweenRetries', value})\n            }\n        },\n\n        maxOfRetry: {\n            get() {\n                return this.$store.state.ccenter.queues.itemInstance.payload.maxOfRetry\n            },\n            set(value) {\n                this.setPayloadItemProp({prop: 'maxOfRetry', value})\n            }\n        },\n\n        timeout: {\n            get() {\n                return this.$store.state.ccenter.queues.itemInstance.timeout\n            },\n            set(value) {\n                this.setItemProp({prop: 'timeout', value})\n            }\n        },\n\n        waitForResultStatus: {\n            get() {\n                return this.$store.state.ccenter.queues.itemInstance.payload.waitForResultStatus\n            },\n            set(value) {\n                this.setPayloadItemProp({prop: 'waitForResultStatus', value})\n            }\n        },\n    },\n\n    methods: {\n        ...mapActions('ccenter/queues', {\n            setItemProp: 'SET_ITEM_PROPERTY',\n            setPayloadItemProp: 'SET_PAYLOAD_ITEM_PROPERTY',\n        }),\n    },\n}\n",{"version":3,"sources":["opened-queue-predictive-dialer-timing.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"opened-queue-predictive-dialer-timing.vue","sourceRoot":"src/components/contact-center/queues/predictive-dialer","sourcesContent":["<template>\n    <section>\n        <header class=\"content-header\">\n            <h3 class=\"content-title\">{{$t('objects.ccenter.queues.timing')}}</h3>\n        </header>\n        <form class=\"object-input-grid\">\n            <div class=\"timings\">\n                <timepicker\n                        v-model=\"originateTimeout\"\n                        :label=\"$t('objects.ccenter.queues.originateTimeout')\"\n                ></timepicker>\n                <timepicker\n                        v-model=\"secBetweenRetries\"\n                        :label=\"$t('objects.ccenter.queues.waitBetweenRetries')\"\n                ></timepicker>\n                <timepicker\n                        v-model=\"timeout\"\n                        :label=\"$t('objects.ccenter.queues.timeout')\"\n                ></timepicker>\n            </div>\n            <div>\n                <form-input\n                        v-model=\"maxOfRetry\"\n                        :label=\"$t('objects.ccenter.queues.maxNumberOfRetry')\"\n                ></form-input>\n\n                <div>\n                    <div class=\"label\">{{$t('objects.ccenter.queues.waitForResultStatus')}}</div>\n                    <switcher\n                            v-model=\"waitForResultStatus\"\n                    ></switcher>\n                </div>\n            </div>\n        </form>\n    </section>\n</template>\n\n<script>\n    import timepicker from '@/components/utils/timepicker';\n    import openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\n    import {mapActions} from \"vuex\";\n\n    export default {\n        name: \"opened-queue-outbound-ivr-timing\",\n        mixins: [openedTabComponentMixin],\n        components: {timepicker},\n        data() {\n            return {}\n        },\n\n        computed: {\n            originateTimeout: {\n                get() {\n                    return this.$store.state.ccenter.queues.itemInstance.payload.originateTimeout\n                },\n                set(value) {\n                    this.setPayloadItemProp({prop: 'name', value})\n                }\n            },\n\n            secBetweenRetries: {\n                get() {\n                    return this.$store.state.ccenter.queues.itemInstance.payload.secBetweenRetries\n                },\n                set(value) {\n                    this.setPayloadItemProp({prop: 'secBetweenRetries', value})\n                }\n            },\n\n            maxOfRetry: {\n                get() {\n                    return this.$store.state.ccenter.queues.itemInstance.payload.maxOfRetry\n                },\n                set(value) {\n                    this.setPayloadItemProp({prop: 'maxOfRetry', value})\n                }\n            },\n\n            timeout: {\n                get() {\n                    return this.$store.state.ccenter.queues.itemInstance.timeout\n                },\n                set(value) {\n                    this.setItemProp({prop: 'timeout', value})\n                }\n            },\n\n            waitForResultStatus: {\n                get() {\n                    return this.$store.state.ccenter.queues.itemInstance.payload.waitForResultStatus\n                },\n                set(value) {\n                    this.setPayloadItemProp({prop: 'waitForResultStatus', value})\n                }\n            },\n        },\n\n        methods: {\n            ...mapActions('ccenter/queues', {\n                setItemProp: 'SET_ITEM_PROPERTY',\n                setPayloadItemProp: 'SET_PAYLOAD_ITEM_PROPERTY',\n            }),\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .timepicker {\n        margin-bottom: 28px;\n    }\n</style>"]}]}