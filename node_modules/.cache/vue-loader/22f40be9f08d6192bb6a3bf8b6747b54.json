{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/utils/dropdown-select.vue?vue&type=style&index=0&id=005e400c&lang=scss&scoped=true&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/utils/dropdown-select.vue","mtime":1580829195308},{"path":"/home/dev/work/client-auth/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../../assets/css/objects/lib-custom-styling/v-select\";\n",{"version":3,"sources":["dropdown-select.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA","file":"dropdown-select.vue","sourceRoot":"src/components/utils","sourcesContent":["<template>\n    <div class=\"dropdown-select\">\n        <div v-if=\"!hideLabel\" class=\"label\" :class=\"{'invalid': v && v.$error}\">\n            {{computeRequiredLabel}}\n        </div>\n\n        <v-select\n                :value=\"computeDisplayValue\"\n                :options=\"options\"\n                :label=\"displayProperty\"\n                :placeholder=\"placeholder || label\"\n                :clearable=\"false\"\n                :disabled=\"disabled\"\n                :required=\"required\"\n                :taggable=\"taggable\"\n                :width=\"21\"\n                @input=\"setOption\"\n                @search=\"debouncer.call(this, $event)\"\n        ></v-select>\n\n        <validation-message\n                v-if=\"!hideDetails\"\n                :v=\"v\"\n        />\n    </div>\n</template>\n\n<script>\n    import vSelect from 'vue-select';\n    import requiredLabelMixin from '@/mixins/requiredLabelMixin';\n    import validationMessage from './validation-message';\n    import debounce from \"../../utils/debounce\";\n\n    export default {\n        name: \"dropdown-select\",\n        mixins: [requiredLabelMixin],\n        components: {\n            'v-select': vSelect,\n            'validation-message': validationMessage\n        },\n        props: {\n            // options to select\n            options: {\n                type: Array || Object,\n                // required: true,\n                default: () => []\n            },\n\n            displayProperty: {\n                type: String,\n                default: 'name'\n            },\n\n            // label above select itself\n            label: {\n                type: String,\n            },\n\n            placeholder: {\n                type: String\n            },\n\n            // select value\n            value: {\n                // required: true\n            },\n\n            // \"?\" hint text. Also controls \"?\" display\n            hintText: {\n                type: String,\n            },\n\n            // disables selection\n            disabled: {\n                type: Boolean\n            },\n\n            required: {\n                type: Boolean\n            },\n\n            hideLabel: {\n                type: Boolean,\n                default: false\n            },\n\n            hideDetails: {\n                type: Boolean,\n                default: false\n            },\n\n            taggable: {\n                type: Boolean,\n                default: false\n            },\n\n            // validation rules\n            v: {\n                type: Object,\n            },\n        },\n\n        created() {\n            this.debouncer = debounce(this.debouncer);\n        },\n\n        computed: {\n            computeDisplayValue() {\n                if (typeof this.value === 'string') return this.value;\n                return this.value[this.displayProperty] || '';\n            }\n        },\n\n        methods: {\n            setOption(option) {\n                if (this.v) this.v.$touch();\n                this.$emit('input', option);\n            },\n\n            debouncer(value) {\n                this.$emit('search', value);\n            },\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"../../assets/css/objects/lib-custom-styling/v-select\";\n</style>"]}]}