{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/directory/users/opened-user-license.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/directory/users/opened-user-license.vue","mtime":1579884343778},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\nimport {mapActions} from \"vuex\";\nimport {getLicenseList} from \"../../../api/directory/license/license\";\n\nexport default {\n    name: \"opened-user-license\",\n    mixins: [openedTabComponentMixin],\n\n    mounted() {\n        this.loadDropdownOptionsList();\n    },\n\n    computed: {\n        license: {\n            get() {\n                return this.$store.state.directory.users.itemInstance.license\n            },\n            set(value) {\n                this.setItemProp({prop: 'license', value})\n            }\n        },\n    },\n\n    methods: {\n        async loadDropdownOptionsList(search) {\n            const response = await getLicenseList(0, 10, search);\n            this.dropdownOptionsList = response.map(item => {\n                return {\n                    name: item.product,\n                    id: item.id,\n                }\n            });\n        },\n        ...mapActions('directory/users', {\n            setItemProp: 'SET_ITEM_PROPERTY',\n        }),\n    }\n}\n",{"version":3,"sources":["opened-user-license.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"opened-user-license.vue","sourceRoot":"src/components/directory/users","sourcesContent":["<template>\n    <section>\n        <header class=\"content-header\">\n            <h3 class=\"content-title\">{{$t('objects.directory.license.license')}}</h3>\n        </header>\n        <form class=\"object-input-grid\">\n            <tags-input\n                    v-model=\"license\"\n                    :options=\"dropdownOptionsList\"\n                    :label=\"$t('objects.directory.license.license')\"\n                    @search=\"loadDropdownOptionsList\"\n            ></tags-input>\n        </form>\n    </section>\n</template>\n\n<script>\n    import openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\n    import {mapActions} from \"vuex\";\n    import {getLicenseList} from \"../../../api/directory/license/license\";\n\n    export default {\n        name: \"opened-user-license\",\n        mixins: [openedTabComponentMixin],\n\n        mounted() {\n            this.loadDropdownOptionsList();\n        },\n\n        computed: {\n            license: {\n                get() {\n                    return this.$store.state.directory.users.itemInstance.license\n                },\n                set(value) {\n                    this.setItemProp({prop: 'license', value})\n                }\n            },\n        },\n\n        methods: {\n            async loadDropdownOptionsList(search) {\n                const response = await getLicenseList(0, 10, search);\n                this.dropdownOptionsList = response.map(item => {\n                    return {\n                        name: item.product,\n                        id: item.id,\n                    }\n                });\n            },\n            ...mapActions('directory/users', {\n                setItemProp: 'SET_ITEM_PROPERTY',\n            }),\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}