{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/integrations/storage/opened-storage-s3.vue?vue&type=template&id=391c3422&scoped=true&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/integrations/storage/opened-storage-s3.vue","mtime":1580975580542},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"section\", [\n    _c(\"header\", { staticClass: \"content-header\" }, [\n      _c(\"h3\", { staticClass: \"content-title\" }, [\n        _vm._v(_vm._s(_vm.$t(\"objects.integrations.storage.s3\")))\n      ])\n    ]),\n    _c(\n      \"form\",\n      { staticClass: \"object-input-grid\" },\n      [\n        _c(\"form-input\", {\n          attrs: {\n            v: _vm.v.itemInstance.properties.keyId,\n            label: _vm.$t(\"objects.integrations.storage.s3Key\"),\n            required: \"\"\n          },\n          model: {\n            value: _vm.keyId,\n            callback: function($$v) {\n              _vm.keyId = $$v\n            },\n            expression: \"keyId\"\n          }\n        }),\n        _c(\"form-input\", {\n          attrs: {\n            v: _vm.v.itemInstance.properties.accessKey,\n            label: _vm.$t(\"objects.integrations.storage.s3Access\"),\n            required: \"\"\n          },\n          model: {\n            value: _vm.accessKey,\n            callback: function($$v) {\n              _vm.accessKey = $$v\n            },\n            expression: \"accessKey\"\n          }\n        }),\n        _c(\"form-input\", {\n          attrs: {\n            v: _vm.v.itemInstance.properties.bucketName,\n            label: _vm.$t(\"objects.integrations.storage.bucket\"),\n            required: \"\"\n          },\n          model: {\n            value: _vm.bucketName,\n            callback: function($$v) {\n              _vm.bucketName = $$v\n            },\n            expression: \"bucketName\"\n          }\n        }),\n        !this.id\n          ? _c(\"dropdown-select\", {\n              attrs: {\n                value: _vm.service,\n                options: _vm.serviceOptions,\n                label: _vm.$t(\"objects.integrations.storage.service\")\n              },\n              on: { input: _vm.setService }\n            })\n          : _vm._e(),\n        _c(\"dropdown-select\", {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.service.value !== \"custom\",\n              expression: \"service.value !== 'custom'\"\n            }\n          ],\n          attrs: {\n            v: _vm.v.itemInstance.properties.region,\n            options: _vm.computeRegionOptions,\n            label: _vm.$t(\"objects.integrations.storage.region\"),\n            required: \"\"\n          },\n          model: {\n            value: _vm.region,\n            callback: function($$v) {\n              _vm.region = $$v\n            },\n            expression: \"region\"\n          }\n        }),\n        _c(\"form-input\", {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.service.value === \"custom\",\n              expression: \"service.value === 'custom'\"\n            }\n          ],\n          attrs: {\n            v: _vm.v.itemInstance.properties.endpoint,\n            label: _vm.$t(\"objects.integrations.storage.s3Endpoint\"),\n            required: \"\"\n          },\n          model: {\n            value: _vm.endpoint,\n            callback: function($$v) {\n              _vm.endpoint = $$v\n            },\n            expression: \"endpoint\"\n          }\n        }),\n        _c(\"form-input\", {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.service.value === \"custom\",\n              expression: \"service.value === 'custom'\"\n            }\n          ],\n          attrs: {\n            v: _vm.v.itemInstance.properties.region,\n            label: _vm.$t(\"objects.integrations.storage.region\"),\n            required: \"\"\n          },\n          model: {\n            value: _vm.region,\n            callback: function($$v) {\n              _vm.region = $$v\n            },\n            expression: \"region\"\n          }\n        })\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}