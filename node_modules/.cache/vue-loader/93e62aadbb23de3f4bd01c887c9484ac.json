{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/directory/devices/opened-device.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/directory/devices/opened-device.vue","mtime":1580199400965},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport openedDeviceGeneral from './opened-device-general';\nimport openedDeviceHotdesking from './opened-device-hotdesking';\nimport openedDevicePhoneInfo from './opened-device-phone-info';\nimport {required} from 'vuelidate/lib/validators';\nimport datepicker from 'vuejs-datepicker';\nimport editComponentMixin from '@/mixins/editComponentMixin';\nimport {ipValidator, macValidator} from \"../../../utils/validators\";\nimport {mapActions, mapState} from \"vuex\";\n\nexport default {\n    name: 'opened-device',\n    mixins: [editComponentMixin],\n    components: {\n        openedDeviceGeneral,\n        openedDeviceHotdesking,\n        openedDevicePhoneInfo,\n        datepicker,\n    },\n\n    data() {\n        return {\n            tabs: [\n                {\n                    text: this.$t('objects.general'),\n                    value: 'general',\n                },\n                // {\n                //     text: this.$t('objects.directory.devices.hotDesking'),\n                //     value: 'hotdesking',\n                // },\n                // {\n                //     text: this.$t('objects.directory.devices.phoneInfo'),\n                //     value: 'phoneInfo',\n                // },\n            ],\n        }\n    },\n\n    validations: {\n        itemInstance: {\n            name: {\n                required,\n            },\n            account: {\n                required\n            },\n            password: {\n                required,\n            },\n            mac: {\n                macValidator\n            },\n            ip: {\n                ipValidator\n            }\n        },\n    },\n\n    mounted() {\n        this.id = this.$route.params.id;\n        this.loadItem();\n    },\n\n    computed: {\n        ...mapState('directory/devices', {\n            itemInstance: state => state.itemInstance,\n        }),\n        id: {\n            get() {return this.$store.state.directory.devices.itemId},\n            set(value) {this.setId(value)}\n        }\n    },\n\n    methods: {\n        ...mapActions('directory/devices', {\n            setId: 'SET_ITEM_ID',\n            loadItem: 'LOAD_ITEM',\n            addItem: 'ADD_ITEM',\n            updateItem: 'UPDATE_ITEM',\n        }),\n    },\n}\n",{"version":3,"sources":["opened-device.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"opened-device.vue","sourceRoot":"src/components/directory/devices","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryText=\"computePrimaryText\"\n                :primaryAction=\"save\"\n                :primaryDisabled=\"computeDisabled\"\n                close\n        >\n            <span>{{$tc('objects.directory.devices.devices', 1)}}</span> | {{computeTitle}}\n        </object-header>\n        <tabs-component\n                :tabs=\"tabs\"\n                :root=\"$options.name\"\n        >\n            <template slot=\"component\" slot-scope=\"props\">\n                <component\n                        class=\"tabs-inner-component\"\n                        :is=\"props.currentTab\"\n                        :v=\"$v\"\n                ></component>\n            </template>\n        </tabs-component>\n    </div>\n</template>\n\n<script>\n    import openedDeviceGeneral from './opened-device-general';\n    import openedDeviceHotdesking from './opened-device-hotdesking';\n    import openedDevicePhoneInfo from './opened-device-phone-info';\n    import {required} from 'vuelidate/lib/validators';\n    import datepicker from 'vuejs-datepicker';\n    import editComponentMixin from '@/mixins/editComponentMixin';\n    import {ipValidator, macValidator} from \"../../../utils/validators\";\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: 'opened-device',\n        mixins: [editComponentMixin],\n        components: {\n            openedDeviceGeneral,\n            openedDeviceHotdesking,\n            openedDevicePhoneInfo,\n            datepicker,\n        },\n\n        data() {\n            return {\n                tabs: [\n                    {\n                        text: this.$t('objects.general'),\n                        value: 'general',\n                    },\n                    // {\n                    //     text: this.$t('objects.directory.devices.hotDesking'),\n                    //     value: 'hotdesking',\n                    // },\n                    // {\n                    //     text: this.$t('objects.directory.devices.phoneInfo'),\n                    //     value: 'phoneInfo',\n                    // },\n                ],\n            }\n        },\n\n        validations: {\n            itemInstance: {\n                name: {\n                    required,\n                },\n                account: {\n                    required\n                },\n                password: {\n                    required,\n                },\n                mac: {\n                    macValidator\n                },\n                ip: {\n                    ipValidator\n                }\n            },\n        },\n\n        mounted() {\n            this.id = this.$route.params.id;\n            this.loadItem();\n        },\n\n        computed: {\n            ...mapState('directory/devices', {\n                itemInstance: state => state.itemInstance,\n            }),\n            id: {\n                get() {return this.$store.state.directory.devices.itemId},\n                set(value) {this.setId(value)}\n            }\n        },\n\n        methods: {\n            ...mapActions('directory/devices', {\n                setId: 'SET_ITEM_ID',\n                loadItem: 'LOAD_ITEM',\n                addItem: 'ADD_ITEM',\n                updateItem: 'UPDATE_ITEM',\n            }),\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n"]}]}