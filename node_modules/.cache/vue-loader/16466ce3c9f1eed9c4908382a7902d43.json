{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/lookups/calendars/opened-calendar-general.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/lookups/calendars/opened-calendar-general.vue","mtime":1580829046913},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport datepicker from '@/components/utils/datepicker';\nimport openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\nimport {getCalendarTimezones} from \"../../../api/lookups/calendars/calendars\";\nimport {mapActions} from \"vuex\";\n\nexport default {\n    name: \"opened-calendar-general\",\n    mixins: [openedTabComponentMixin],\n    components: {\n        datepicker,\n    },\n\n    data() {\n        return {\n            dropdownOptionsList: [],\n        }\n    },\n\n    mounted() {\n        this.loadDropdownOptionsList();\n    },\n\n    computed: {\n        name: {\n            get() {return this.$store.state.lookups.calendars.itemInstance.name},\n            set(value) {this.setItemProp({prop: 'name', value})}\n        },\n        timezone: {\n            get() {return this.$store.state.lookups.calendars.itemInstance.timezone},\n            set(value) {this.setItemProp({prop: 'timezone', value})}\n        },\n        description: {\n            get() {return this.$store.state.lookups.calendars.itemInstance.description},\n            set(value) {this.setItemProp({prop: 'description', value})}\n        },\n        expires: {\n            get() {return this.$store.state.lookups.calendars.itemInstance.expires},\n            set(value) {this.setItemProp({prop: 'expires', value})}\n        },\n        startAt: {\n            get() {return this.$store.state.lookups.calendars.itemInstance.startAt},\n            set(value) {this.setItemProp({prop: 'startAt', value})}\n        },\n        endAt: {\n            get() {return this.$store.state.lookups.calendars.itemInstance.endAt},\n            set(value) {this.setItemProp({prop: 'endAt', value})}\n        },\n    },\n\n    methods: {\n        async loadDropdownOptionsList(search) {\n            this.dropdownOptionsList = await getCalendarTimezones(0, 10, search);\n        },\n\n        ...mapActions('lookups/calendars', {\n            setItemProp: 'SET_ITEM_PROPERTY',\n        }),\n    }\n}\n",{"version":3,"sources":["opened-calendar-general.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"opened-calendar-general.vue","sourceRoot":"src/components/lookups/calendars","sourcesContent":["<template>\n    <section>\n        <header class=\"content-header\">\n            <h3 class=\"content-title\">{{$t('objects.generalInfo')}}</h3>\n        </header>\n        <form class=\"object-input-grid\">\n            <form-input\n                    v-model.trim=\"name\"\n                    :v=\"v.itemInstance.name\"\n                    :label=\"$t('objects.name')\"\n                    required\n            ></form-input>\n\n            <dropdown-select\n                    v-model=\"timezone\"\n                    :options=\"dropdownOptionsList\"\n                    :label=\"$t('objects.lookups.calendars.timezone')\"\n                    @search=\"loadDropdownOptionsList\"\n                    required\n            ></dropdown-select>\n\n            <form-input\n                    v-model.trim=\"description\"\n                    :label=\"$t('objects.description')\"\n                    textarea\n            ></form-input>\n\n            <div class=\"calendars__dates\">\n                <div class=\"switcher-label-wrap\">\n                    <div class=\"label\">{{$t('objects.lookups.calendars.fulltime')}}</div>\n                    <switcher\n                            v-model=\"expires\"\n                    ></switcher>\n                </div>\n                <div class=\"calendars__date-wrap\">\n                    <datepicker\n                            v-model=\"startAt\"\n                            :label=\"$t('objects.lookups.calendars.start')\"\n                            :disabled=\"!expires\"\n                    ></datepicker>\n                    <datepicker\n                            v-model=\"endAt\"\n                            :label=\"$t('objects.lookups.calendars.end')\"\n                            :disabled=\"!expires\"\n                    ></datepicker>\n                </div>\n            </div>\n        </form>\n    </section>\n</template>\n\n<script>\n    import datepicker from '@/components/utils/datepicker';\n    import openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\n    import {getCalendarTimezones} from \"../../../api/lookups/calendars/calendars\";\n    import {mapActions} from \"vuex\";\n\n    export default {\n        name: \"opened-calendar-general\",\n        mixins: [openedTabComponentMixin],\n        components: {\n            datepicker,\n        },\n\n        data() {\n            return {\n                dropdownOptionsList: [],\n            }\n        },\n\n        mounted() {\n            this.loadDropdownOptionsList();\n        },\n\n        computed: {\n            name: {\n                get() {return this.$store.state.lookups.calendars.itemInstance.name},\n                set(value) {this.setItemProp({prop: 'name', value})}\n            },\n            timezone: {\n                get() {return this.$store.state.lookups.calendars.itemInstance.timezone},\n                set(value) {this.setItemProp({prop: 'timezone', value})}\n            },\n            description: {\n                get() {return this.$store.state.lookups.calendars.itemInstance.description},\n                set(value) {this.setItemProp({prop: 'description', value})}\n            },\n            expires: {\n                get() {return this.$store.state.lookups.calendars.itemInstance.expires},\n                set(value) {this.setItemProp({prop: 'expires', value})}\n            },\n            startAt: {\n                get() {return this.$store.state.lookups.calendars.itemInstance.startAt},\n                set(value) {this.setItemProp({prop: 'startAt', value})}\n            },\n            endAt: {\n                get() {return this.$store.state.lookups.calendars.itemInstance.endAt},\n                set(value) {this.setItemProp({prop: 'endAt', value})}\n            },\n        },\n\n        methods: {\n            async loadDropdownOptionsList(search) {\n                this.dropdownOptionsList = await getCalendarTimezones(0, 10, search);\n            },\n\n            ...mapActions('lookups/calendars', {\n                setItemProp: 'SET_ITEM_PROPERTY',\n            }),\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .switcher-label-wrap {\n        margin: 0 0 28px;\n\n        .switcher {\n            margin-top: 7px;\n        }\n    }\n\n    .calendars__date-wrap {\n        display: flex;\n        align-items: center;\n\n        .datepicker:first-child {\n            margin-right: 28px;\n        }\n    }\n</style>"]}]}