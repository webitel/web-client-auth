{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/auth/the-login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/auth/the-login.vue","mtime":1580908448979},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport formInput from '../utils/form-input';\nimport btn from '../utils/btn';\n\nimport {login} from '../../api/auth/auth';\nimport {mapActions, mapState} from \"vuex\";\n\nexport default {\n    name: 'the-login',\n    components: {\n        formInput,\n        btn,\n    },\n\n    props: {\n        v: {\n            type: Object,\n        }\n    },\n\n    data() {\n        return {};\n    },\n\n    mounted() {\n        this.resetState();\n    },\n\n    computed: {\n        username: {\n            get() {\n                return this.$store.state.auth.username\n            },\n            set(value) {\n                this.setProp({prop: 'username', value})\n            }\n        },\n        password: {\n            get() {\n                return this.$store.state.auth.password\n            },\n            set(value) {\n                this.setProp({prop: 'password', value})\n            }\n        },\n        computeDisabled() {\n            return this.checkValidations();\n        }\n    },\n\n    methods: {\n        checkValidations() {\n            this.v.$touch();\n            // if its still pending or an error is returned do not submit\n            return this.v.$pending ||\n                this.v.$error;\n        },\n\n        submit() {\n            const invalid = this.checkValidations();\n            if (!invalid) this.login();\n\n        },\n\n        ...mapActions('auth', {\n            login: 'LOGIN',\n            setProp: 'SET_PROPERTY',\n            resetState: 'RESET_STATE',\n        }),\n    },\n};\n",{"version":3,"sources":["the-login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"the-login.vue","sourceRoot":"src/components/auth","sourcesContent":["<template>\n    <form\n            class=\"auth__form\"\n            @submit.prevent=\"submit\"\n    >\n        <form-input\n                v-model.trim=\"username\"\n                :label=\"$t('auth.user')\"\n                :v=\"v.username\"\n                :autofocus=\"true\"\n        ></form-input>\n\n        <form-input\n                v-model.trim=\"password\"\n                :label=\"$t('auth.password')\"\n                :v=\"v.password\"\n                :type=\"'password'\"\n        ></form-input>\n\n<!--        <router-link-->\n<!--                class=\"form__reset-password\"-->\n<!--                :to=\"{ path: '/auth', query: { reset: true }}\">-->\n<!--            {{$t('auth.resetPasswordLink')}}-->\n<!--        </router-link>-->\n\n        <btn\n                class=\"btn form__button\"\n                type=\"submit\"\n                :disabled=\"computeDisabled\"\n        >\n            {{$t('auth.loginSubmit')}}\n        </btn>\n    </form>\n</template>\n\n<script>\n    import formInput from '../utils/form-input';\n    import btn from '../utils/btn';\n\n    import {login} from '../../api/auth/auth';\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: 'the-login',\n        components: {\n            formInput,\n            btn,\n        },\n\n        props: {\n            v: {\n                type: Object,\n            }\n        },\n\n        data() {\n            return {};\n        },\n\n        mounted() {\n            this.resetState();\n        },\n\n        computed: {\n            username: {\n                get() {\n                    return this.$store.state.auth.username\n                },\n                set(value) {\n                    this.setProp({prop: 'username', value})\n                }\n            },\n            password: {\n                get() {\n                    return this.$store.state.auth.password\n                },\n                set(value) {\n                    this.setProp({prop: 'password', value})\n                }\n            },\n            computeDisabled() {\n                return this.checkValidations();\n            }\n        },\n\n        methods: {\n            checkValidations() {\n                this.v.$touch();\n                // if its still pending or an error is returned do not submit\n                return this.v.$pending ||\n                    this.v.$error;\n            },\n\n            submit() {\n                const invalid = this.checkValidations();\n                if (!invalid) this.login();\n\n            },\n\n            ...mapActions('auth', {\n                login: 'LOGIN',\n                setProp: 'SET_PROPERTY',\n                resetState: 'RESET_STATE',\n            }),\n        },\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"../../assets/css/auth/auth\";\n\n    .form__reset-password {\n        @extend .typo-input-label;\n\n        display: block;\n        text-align: right;\n        margin: 14px 0 28px;\n        color: #000;\n        text-decoration: none;\n    }\n</style>\n"]}]}