{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/lookups/blacklists/the-blacklists.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/lookups/blacklists/the-blacklists.vue","mtime":1581335923978},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tableComponentMixin from '@/mixins/tableComponentMixin';\nimport {_checkboxTableField, _actionsTableField_3} from \"@/utils/tableFieldPresets\";\nimport {mapActions, mapState} from \"vuex\";\nimport {downloadAsCSV} from \"../../../utils/download\";\nimport {getBlacklistCommunicationList} from \"../../../api/lookups/blacklists/blacklistNumbers\";\n\nexport default {\n    name: \"the-blacklists\",\n    mixins: [tableComponentMixin],\n    data() {\n        return {\n            fields: [\n                _checkboxTableField,\n                {name: 'name', title: this.$t('objects.name')},\n                {name: 'numbers', title: this.$t('objects.lookups.blacklist.numbersCount')},\n                _actionsTableField_3,\n            ],\n        };\n    },\n\n    computed: {\n        ...mapState('lookups/blacklists', {\n            dataList: state => state.dataList,\n            page: state => state.page, // acts like a boolean: if page is 0, there's no back page\n            isNextPage: state => state.isNextPage,\n        }),\n\n        size: {\n            get() {\n                return this.$store.state.lookups.blacklists.size\n            },\n            set(value) {\n                this.setSize(value)\n            }\n        },\n\n        search: {\n            get() {\n                return this.$store.state.lookups.blacklists.search\n            },\n            set(value) {\n                this.setSearch(value)\n            }\n        },\n    },\n\n    methods: {\n        create() {\n            this.$router.push('/lookups/blacklist/new');\n        },\n\n        edit(rowId) {\n            this.$router.push({\n                name: 'blacklist-edit',\n                params: {id: this.dataList[rowId].id},\n            });\n        },\n\n        async download(rowId) {\n            const list = this.dataList[rowId];\n            const listNumbers = await getBlacklistCommunicationList(list.id, 0, 100);\n\n            let dataStr = \"data:text/csv;charset=utf-8,\";\n            dataStr += 'number,description\\n';\n            listNumbers.forEach(item => {\n                dataStr += encodeURIComponent(\n                    item.number + ',' + (item.description || 'aa') + '\\n'\n                )\n            });\n            downloadAsCSV(dataStr, list.name + '-numbers.csv');\n        },\n\n        ...mapActions('lookups/blacklists', {\n            loadDataList: 'LOAD_DATA_LIST',\n            setSize: 'SET_SIZE',\n            setSearch: 'SET_SEARCH',\n            nextPage: 'NEXT_PAGE',\n            prevPage: 'PREV_PAGE',\n            removeItem: 'REMOVE_ITEM',\n        }),\n    }\n}\n",{"version":3,"sources":["the-blacklists.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"the-blacklists.vue","sourceRoot":"src/components/lookups/blacklists","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryAction=\"create\"\n        >\n            {{$t('objects.lookups.lookups')}} |\n            {{$tc('objects.lookups.blacklist.blacklist', 2)}}\n        </object-header>\n\n        <section class=\"object-content\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">{{$t('objects.lookups.blacklist.allBlacklists')}}</h3>\n                <div class=\"content-header__actions-wrap\">\n                    <search\n                            v-model=\"search\"\n                            @filterData=\"loadList\"\n                    ></search>\n                    <i\n                            class=\"icon-icon_delete icon-action\"\n                            :class=\"{'hidden': anySelected}\"\n                            :title=\"$t('iconHints.deleteSelected')\"\n                            @click=\"deleteSelected\"\n                    ></i>\n                    <i\n                            class=\"icon-icon_reload icon-action\"\n                            :title=\"$t('iconHints.reload')\"\n                            @click=\"loadList\"\n                    ></i>\n                </div>\n            </header>\n\n            <loader v-show=\"!isLoaded\"></loader>\n\n            <vuetable\n                    v-show=\"isLoaded\"\n                    :api-mode=\"false\"\n                    :fields=\"fields\"\n                    :data=\"dataList\"\n            >\n                <template slot=\"name\" slot-scope=\"props\">\n                    <div class=\"tt-capitalize\">\n                        <span class=\"nameLink\" @click=\"edit(props.rowIndex)\">\n                          {{dataList[props.rowIndex].name}}\n                        </span>\n                    </div>\n                </template>\n\n                <template slot=\"numbers\" slot-scope=\"props\">\n                    <div>\n                        {{dataList[props.rowIndex].numbers || 'number count is undefined'}}\n                    </div>\n                </template>\n\n                <template slot=\"actions\" slot-scope=\"props\">\n                    <i class=\"vuetable-action icon-icon_download\"\n                       :title=\"$t('iconHints.download')\"\n                       @click=\"download(props.rowIndex)\"\n                    ></i>\n                    <i class=\"vuetable-action icon-icon_edit\"\n                       :title=\"$t('iconHints.edit')\"\n                       @click=\"edit(props.rowIndex)\"\n                    ></i>\n                    <i class=\"vuetable-action icon-icon_delete\"\n                       :title=\"$t('iconHints.delete')\"\n                       @click=\"remove(props.rowIndex)\"\n                    ></i>\n                </template>\n            </vuetable>\n            <pagination\n                    v-show=\"isLoaded\"\n                    v-model=\"size\"\n                    @loadDataList=\"loadList\"\n                    @next=\"nextPage\"\n                    @prev=\"prevPage\"\n                    :isNext=\"isNextPage\"\n                    :isPrev=\"!!page\"\n            ></pagination>\n        </section>\n    </div>\n</template>\n\n<script>\n    import tableComponentMixin from '@/mixins/tableComponentMixin';\n    import {_checkboxTableField, _actionsTableField_3} from \"@/utils/tableFieldPresets\";\n    import {mapActions, mapState} from \"vuex\";\n    import {downloadAsCSV} from \"../../../utils/download\";\n    import {getBlacklistCommunicationList} from \"../../../api/lookups/blacklists/blacklistNumbers\";\n\n    export default {\n        name: \"the-blacklists\",\n        mixins: [tableComponentMixin],\n        data() {\n            return {\n                fields: [\n                    _checkboxTableField,\n                    {name: 'name', title: this.$t('objects.name')},\n                    {name: 'numbers', title: this.$t('objects.lookups.blacklist.numbersCount')},\n                    _actionsTableField_3,\n                ],\n            };\n        },\n\n        computed: {\n            ...mapState('lookups/blacklists', {\n                dataList: state => state.dataList,\n                page: state => state.page, // acts like a boolean: if page is 0, there's no back page\n                isNextPage: state => state.isNextPage,\n            }),\n\n            size: {\n                get() {\n                    return this.$store.state.lookups.blacklists.size\n                },\n                set(value) {\n                    this.setSize(value)\n                }\n            },\n\n            search: {\n                get() {\n                    return this.$store.state.lookups.blacklists.search\n                },\n                set(value) {\n                    this.setSearch(value)\n                }\n            },\n        },\n\n        methods: {\n            create() {\n                this.$router.push('/lookups/blacklist/new');\n            },\n\n            edit(rowId) {\n                this.$router.push({\n                    name: 'blacklist-edit',\n                    params: {id: this.dataList[rowId].id},\n                });\n            },\n\n            async download(rowId) {\n                const list = this.dataList[rowId];\n                const listNumbers = await getBlacklistCommunicationList(list.id, 0, 100);\n\n                let dataStr = \"data:text/csv;charset=utf-8,\";\n                dataStr += 'number,description\\n';\n                listNumbers.forEach(item => {\n                    dataStr += encodeURIComponent(\n                        item.number + ',' + (item.description || 'aa') + '\\n'\n                    )\n                });\n                downloadAsCSV(dataStr, list.name + '-numbers.csv');\n            },\n\n            ...mapActions('lookups/blacklists', {\n                loadDataList: 'LOAD_DATA_LIST',\n                setSize: 'SET_SIZE',\n                setSearch: 'SET_SEARCH',\n                nextPage: 'NEXT_PAGE',\n                prevPage: 'PREV_PAGE',\n                removeItem: 'REMOVE_ITEM',\n            }),\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]}]}