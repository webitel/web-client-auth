{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/directory/users/opened-user-general.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/directory/users/opened-user-general.vue","mtime":1581330903340},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\nimport eventBus from '@/utils/eventBus';\nimport {mapActions, mapState} from \"vuex\";\n\nexport default {\n    name: \"opened-user-general\",\n    mixins: [openedTabComponentMixin],\n    data() {\n        return {\n            copyMessage: '',\n            copyTriggerShow: false,\n        }\n    },\n\n    computed: {\n        ...mapState('directory/users', {\n            id: state => state.itemId,\n        }),\n        name: {\n            get() {return this.$store.state.directory.users.itemInstance.name},\n            set(value) {this.setItemProp({prop: 'name', value})}\n        },\n        username: {\n            get() {return this.$store.state.directory.users.itemInstance.username},\n            set(value) {this.setItemProp({prop: 'username', value})}\n        },\n        password: {\n            get() {return this.$store.state.directory.users.itemInstance.password},\n            set(value) {this.setItemProp({prop: 'password', value})}\n        },\n        extension: {\n            get() {return this.$store.state.directory.users.itemInstance.extension},\n            set(value) {this.setItemProp({prop: 'extension', value})}\n        },\n\n        computePasswordRepresentation() {\n            return this.password.length <= 12 ? this.password : this.password.slice(0, 12);\n        }\n    },\n\n    methods: {\n        generatePassword() {\n            const length = 12;\n            const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n            let result = '';\n            for (let i = 0; i < length; i++) {\n                result += charset.charAt(Math.floor(Math.random() * charset.length));\n            }\n           this.password = result;\n            this.copyTriggerShow = true;\n        },\n\n        copyToClipboard() {\n            if (this.password) {\n                eventBus.$emit('copyToClipboard', this.password);\n                this.copyMessage = this.$t('objects.copied');\n                setTimeout(() => this.copyMessage = '', 2000);\n            }\n        },\n\n        ...mapActions('directory/users', {\n            setItemProp: 'SET_ITEM_PROPERTY',\n        }),\n    }\n}\n",{"version":3,"sources":["opened-user-general.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"opened-user-general.vue","sourceRoot":"src/components/directory/users","sourcesContent":["<template>\n    <section>\n        <header class=\"content-header\">\n            <h3 class=\"content-title\">{{$t('objects.generalInfo')}}</h3>\n        </header>\n        <form class=\"object-input-grid\">\n            <form-input\n                    v-model.trim=\"name\"\n                    :label=\"$t('objects.name')\"\n            ></form-input>\n            <form-input\n                    v-model.trim=\"username\"\n                    :v=\"v.itemInstance.username\"\n                    :label=\"$t('objects.directory.users.login')\"\n                    required\n            ></form-input>\n\n            <div class=\"input-extension-wrap\">\n                <form-input\n                        ref=\"input-password\"\n                        :value=\"computePasswordRepresentation\"\n                        :label=\"$t('objects.password')\"\n                        :type=\"'password'\"\n                        @input=\"password = $event\"\n                ></form-input>\n\n                <div class=\"input-extension\">\n                    <div class=\"input-extension__copy\" v-show=\"copyTriggerShow\" @click=\"copyToClipboard\">\n                        <span>{{$t('objects.copy')}}</span>\n\n                        <div class=\"hint\" v-if=\"copyMessage\">\n                            <div class=\"tooltip-top active\">\n<!--                                <i class=\"icon-icon_approve\"></i>-->\n                                <span>{{this.copyMessage}}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <i\n                            class=\"input-extension__generate icon-icon_generate\"\n                            :title=\"$t('iconHints.generate')\"\n                            @click=\"generatePassword\"\n                    ></i>\n                </div>\n            </div>\n\n            <form-input\n                    v-model=\"extension\"\n                    :label=\"$t('objects.directory.users.extensions')\"\n            ></form-input>\n        </form>\n    </section>\n</template>\n\n<script>\n    import openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\n    import eventBus from '@/utils/eventBus';\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: \"opened-user-general\",\n        mixins: [openedTabComponentMixin],\n        data() {\n            return {\n                copyMessage: '',\n                copyTriggerShow: false,\n            }\n        },\n\n        computed: {\n            ...mapState('directory/users', {\n                id: state => state.itemId,\n            }),\n            name: {\n                get() {return this.$store.state.directory.users.itemInstance.name},\n                set(value) {this.setItemProp({prop: 'name', value})}\n            },\n            username: {\n                get() {return this.$store.state.directory.users.itemInstance.username},\n                set(value) {this.setItemProp({prop: 'username', value})}\n            },\n            password: {\n                get() {return this.$store.state.directory.users.itemInstance.password},\n                set(value) {this.setItemProp({prop: 'password', value})}\n            },\n            extension: {\n                get() {return this.$store.state.directory.users.itemInstance.extension},\n                set(value) {this.setItemProp({prop: 'extension', value})}\n            },\n\n            computePasswordRepresentation() {\n                return this.password.length <= 12 ? this.password : this.password.slice(0, 12);\n            }\n        },\n\n        methods: {\n            generatePassword() {\n                const length = 12;\n                const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n                let result = '';\n                for (let i = 0; i < length; i++) {\n                    result += charset.charAt(Math.floor(Math.random() * charset.length));\n                }\n               this.password = result;\n                this.copyTriggerShow = true;\n            },\n\n            copyToClipboard() {\n                if (this.password) {\n                    eventBus.$emit('copyToClipboard', this.password);\n                    this.copyMessage = this.$t('objects.copied');\n                    setTimeout(() => this.copyMessage = '', 2000);\n                }\n            },\n\n            ...mapActions('directory/users', {\n                setItemProp: 'SET_ITEM_PROPERTY',\n            }),\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}