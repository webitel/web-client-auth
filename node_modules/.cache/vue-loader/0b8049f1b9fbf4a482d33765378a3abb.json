{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/contact-center/teams/opened-team.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/contact-center/teams/opened-team.vue","mtime":1579703984175},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport openedTeamGeneral from './opened-team-general';\nimport openedTeamSupervisors from './opened-team-supervisors';\nimport openedTeamAgents from './opened-team-agents';\nimport openedTeamSkills from './opened-team-skills';\nimport openedTeamTiming from './opened-team-timing';\nimport openedTeamPermissions from './opened-team-permissions';\nimport editComponentMixin from '@/mixins/editComponentMixin';\nimport {required, numeric} from 'vuelidate/lib/validators';\nimport {mapActions, mapState} from \"vuex\";\n\nexport default {\n    name: 'opened-team',\n    components: {\n        openedTeamGeneral,\n        openedTeamSupervisors,\n        openedTeamAgents,\n        openedTeamSkills,\n        openedTeamTiming,\n        openedTeamPermissions\n    },\n    mixins: [editComponentMixin],\n\n    data() {\n        return {};\n    },\n\n    // by vuelidate\n    validations: {\n        itemInstance: {\n            name: {\n                required\n            },\n            strategy: {\n                required\n            },\n            maxNoAnswer: {\n                numeric,\n                required\n            },\n            wrapUpTime: {\n                numeric,\n                required\n            },\n            rejectDelayTime: {\n                numeric,\n                required\n            },\n            busyDelayTime: {\n                numeric,\n                required\n            },\n            noAnswerDelayTime: {\n                numeric,\n                required\n            },\n            callTimeout: {\n                numeric,\n                required\n            },\n        }\n    },\n\n    mounted() {\n        this.id = this.$route.params.id;\n        this.loadItem();\n    },\n\n    computed: {\n        ...mapState('ccenter/teams', {\n            itemInstance: state => state.itemInstance,\n        }),\n        id: {\n            get() {\n                return this.$store.state.ccenter.teams.itemId\n            },\n            set(value) {\n                this.setId(value)\n            }\n        },\n\n        tabs() {\n            const tabs = [{\n                text: this.$t('objects.general'),\n                value: 'general',\n            }, {\n                text: this.$t('objects.ccenter.teams.timing'),\n                value: 'timing',\n            }, {\n                text: this.$tc('objects.ccenter.teams.supervisors', 2),\n                value: 'supervisors',\n            }, {\n                text: this.$tc('objects.ccenter.agents.agents', 2),\n                value: 'agents',\n            }, {\n                text: this.$tc('objects.ccenter.skills.skills', 2),\n                value: 'skills',\n            },];\n\n            const permissions = {\n                text: this.$tc('objects.permissions.permissions', 2),\n                value: 'permissions',\n            };\n\n            if (this.id) tabs.push(permissions);\n            return tabs;\n        }\n    },\n\n    methods: {\n        ...mapActions('ccenter/teams', {\n            setId: 'SET_ITEM_ID',\n            loadItem: 'LOAD_ITEM',\n            addItem: 'ADD_ITEM',\n            updateItem: 'UPDATE_ITEM',\n        }),\n    },\n};\n",{"version":3,"sources":["opened-team.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"opened-team.vue","sourceRoot":"src/components/contact-center/teams","sourcesContent":["<template>\n    <div>\n        <object-header\n                :primaryText=\"computePrimaryText\"\n                :primaryAction=\"save\"\n                :primaryDisabled=\"computeDisabled\"\n                close\n        >\n            {{$tc('objects.ccenter.teams.teams', 1)}} |\n            {{computeTitle}}\n        </object-header>\n        <tabs-component\n                :tabs=\"tabs\"\n                :root=\"$options.name\"\n        >\n            <template slot=\"component\" slot-scope=\"props\">\n                <component\n                        class=\"tabs-inner-component\"\n                        :is=\"props.currentTab\"\n                        :v=\"$v\"\n                ></component>\n            </template>\n        </tabs-component>\n        </section>\n    </div>\n</template>\n\n<script>\n    import openedTeamGeneral from './opened-team-general';\n    import openedTeamSupervisors from './opened-team-supervisors';\n    import openedTeamAgents from './opened-team-agents';\n    import openedTeamSkills from './opened-team-skills';\n    import openedTeamTiming from './opened-team-timing';\n    import openedTeamPermissions from './opened-team-permissions';\n    import editComponentMixin from '@/mixins/editComponentMixin';\n    import {required, numeric} from 'vuelidate/lib/validators';\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: 'opened-team',\n        components: {\n            openedTeamGeneral,\n            openedTeamSupervisors,\n            openedTeamAgents,\n            openedTeamSkills,\n            openedTeamTiming,\n            openedTeamPermissions\n        },\n        mixins: [editComponentMixin],\n\n        data() {\n            return {};\n        },\n\n        // by vuelidate\n        validations: {\n            itemInstance: {\n                name: {\n                    required\n                },\n                strategy: {\n                    required\n                },\n                maxNoAnswer: {\n                    numeric,\n                    required\n                },\n                wrapUpTime: {\n                    numeric,\n                    required\n                },\n                rejectDelayTime: {\n                    numeric,\n                    required\n                },\n                busyDelayTime: {\n                    numeric,\n                    required\n                },\n                noAnswerDelayTime: {\n                    numeric,\n                    required\n                },\n                callTimeout: {\n                    numeric,\n                    required\n                },\n            }\n        },\n\n        mounted() {\n            this.id = this.$route.params.id;\n            this.loadItem();\n        },\n\n        computed: {\n            ...mapState('ccenter/teams', {\n                itemInstance: state => state.itemInstance,\n            }),\n            id: {\n                get() {\n                    return this.$store.state.ccenter.teams.itemId\n                },\n                set(value) {\n                    this.setId(value)\n                }\n            },\n\n            tabs() {\n                const tabs = [{\n                    text: this.$t('objects.general'),\n                    value: 'general',\n                }, {\n                    text: this.$t('objects.ccenter.teams.timing'),\n                    value: 'timing',\n                }, {\n                    text: this.$tc('objects.ccenter.teams.supervisors', 2),\n                    value: 'supervisors',\n                }, {\n                    text: this.$tc('objects.ccenter.agents.agents', 2),\n                    value: 'agents',\n                }, {\n                    text: this.$tc('objects.ccenter.skills.skills', 2),\n                    value: 'skills',\n                },];\n\n                const permissions = {\n                    text: this.$tc('objects.permissions.permissions', 2),\n                    value: 'permissions',\n                };\n\n                if (this.id) tabs.push(permissions);\n                return tabs;\n            }\n        },\n\n        methods: {\n            ...mapActions('ccenter/teams', {\n                setId: 'SET_ITEM_ID',\n                loadItem: 'LOAD_ITEM',\n                addItem: 'ADD_ITEM',\n                updateItem: 'UPDATE_ITEM',\n            }),\n        },\n    };\n</script>\n\n\n<style lang=\"scss\" scoped>\n\n</style>\n"]}]}