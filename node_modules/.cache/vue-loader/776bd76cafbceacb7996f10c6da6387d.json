{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/the-settings.vue?vue&type=style&index=0&id=6a89a68f&lang=scss&scoped=true&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/the-settings.vue","mtime":1581340388169},{"path":"/home/dev/work/client-auth/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.settings-section {\n    margin-bottom: 28px;\n\n    .btn {\n        display: block;\n        margin: 3px 0 0 auto;\n    }\n}\n",{"version":3,"sources":["the-settings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"the-settings.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header hide-primary-action>\n            {{$t('settings.settings')}}\n        </object-header>\n\n        <section class=\"object-content\">\n            <section class=\"settings-section\">\n                <header class=\"content-header\">\n                    <h3 class=\"content-title\">{{$t('settings.changePassword')}}</h3>\n                </header>\n                <form class=\"object-input-grid grid-w50\">\n                    <div>\n                        <form-input\n                                v-model=\"password\"\n                                :v=\"$v.password\"\n                                :label=\"$t('auth.password')\"\n                                required\n                        ></form-input>\n                        <form-input\n                                v-model=\"confirmPassword\"\n                                :v=\"$v.confirmPassword\"\n                                :label=\"$t('auth.confirmPassword')\"\n                                required\n                        ></form-input>\n                        <btn\n                                :disabled=\"computeDisabled\"\n                            @click=\"changePassword\"\n                        >{{$t('objects.save')}}</btn>\n                    </div>\n                </form>\n            </section>\n\n            <section class=\"settings-section\">\n                <header class=\"content-header\">\n                    <h3 class=\"content-title\">{{$t('settings.language')}}</h3>\n                </header>\n                <form class=\"object-input-grid grid-w50\">\n                    <dropdown-select\n                        class=\"language-list\"\n                        :value=\"language\"\n                        :options=\"languageOptions\"\n                        :label=\"$t('settings.language')\"\n                        @input=\"changeLanguage\"\n                    ></dropdown-select>\n                </form>\n            </section>\n        </section>\n    </div>\n</template>\n\n<script>\n    import objectHeader from './object-utils/the-object-header';\n    import DropdownSelect from \"./utils/dropdown-select\";\n    import btn from \"./utils/btn\";\n    import formInput from \"./utils/form-input\";\n    import {sameAs, required} from 'vuelidate/lib/validators';\n\n    export default {\n        name: \"the-settings\",\n        components: {DropdownSelect, objectHeader, btn, formInput, },\n        data: () => ({\n            password: '',\n            confirmPassword: '',\n            language: {name: 'English', id: 'en'},\n            languageOptions: [\n                {name: 'English', id: 'en'},\n                {name: 'Русский', id: 'ru'},\n            ]\n        }),\n\n        validations: {\n            password: {\n                required\n            },\n            confirmPassword: {\n                sameAs: sameAs('password'),\n            },\n        },\n\n        mounted() {\n            const lang = localStorage.getItem('lang'); // get default lang\n            // if there's a previously set lang, set it\n            if(lang) this.language = this.languageOptions.find(item => item.id === lang);\n        },\n\n        computed: {\n            computeDisabled() {\n                this.$v.$touch();\n                return this.$v.$pending || this.$v.$error;\n            }\n        },\n\n        methods: {\n            changePassword() {},\n\n            changeLanguage(value) {\n                localStorage.setItem('lang', value.id);\n                this.language = value;\n                this.$i18n.locale = value.id;\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .settings-section {\n        margin-bottom: 28px;\n\n        .btn {\n            display: block;\n            margin: 3px 0 0 auto;\n        }\n    }\n</style>"]}]}