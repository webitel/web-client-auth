{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/integrations/tokens/the-tokens.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/integrations/tokens/the-tokens.vue","mtime":1578657456666},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tableComponentMixin from '@/mixins/tableComponentMixin';\nimport {_checkboxTableField, _actionsTableField_1} from \"@/utils/tableFieldPresets\";\n\nexport default {\n    name: \"the-tokens\",\n    mixins: [tableComponentMixin],\n    data() {\n        return {\n            fields: [\n                _checkboxTableField,\n                {name: 'name', title: this.$t('objects.name')},\n                {name: 'role', title: this.$tc('objects.permissions.permissionsRole', 1)},\n                {name: 'expires', title: this.$t('objects.integrations.tokens.expires')},\n                _actionsTableField_1,\n            ],\n        };\n    },\n\n    methods: {\n        create() {\n            this.$router.push('/integrations/tokens/new');\n        },\n\n        async deleteItem(item) {\n            // await deleteCommunication(item.id);\n        },\n\n        async loadDataList() {\n            // this.dataList = await getCommunicationsList();\n            for(let i = 0; i < 10; i++) {\n                this.dataList.push({\n                    name: 'Token name '+i,\n                    role: {name: 'Role name'},\n                    expires: Date.now().toLocaleString(),\n                    isSelected: false,\n                });\n            }\n            this.filterData();\n        }\n    }\n}\n",{"version":3,"sources":["the-tokens.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"the-tokens.vue","sourceRoot":"src/components/integrations/tokens","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryAction=\"create\"\n        >\n            {{$t('objects.integrations.integrations')}} |\n            {{$tc('objects.integrations.tokens.tokens', 2)}}\n        </object-header>\n\n        <section class=\"object-content\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">{{$t('objects.integrations.tokens.allTokens')}}</h3>\n                <div class=\"content-header__actions-wrap\">\n                    <search\n                            @filterData=\"filterData\"\n                    ></search>\n                    <i\n                            class=\"icon-icon_delete icon-action\"\n                            :class=\"{'hidden': anySelected}\"\n                            @click=\"deleteSelected\"\n                    ></i>\n                </div>\n            </header>\n\n            <vuetable\n                    :api-mode=\"false\"\n                    :fields=\"fields\"\n                    :data=\"filteredDataList\"\n            >\n                <template slot=\"name\" slot-scope=\"props\">\n                    <div class=\"tt-capitalize\">\n                        <span class=\"nameLink\" @click=\"edit(props.rowIndex)\">\n                        {{filteredDataList[props.rowIndex].name}}\n                        </span>\n                    </div>\n                </template>\n\n                <template slot=\"role\" slot-scope=\"props\">\n                    <div>\n                        {{filteredDataList[props.rowIndex].role.name}}\n                    </div>\n                </template>\n\n                <template slot=\"expires\" slot-scope=\"props\">\n                    <div>\n                        {{filteredDataList[props.rowIndex].expires}}\n                    </div>\n                </template>\n\n                <template slot=\"actions\" slot-scope=\"props\">\n                    <i class=\"vuetable-action icon-icon_delete\"\n                       @click=\"remove(props.rowIndex)\"\n                    ></i>\n                </template>\n            </vuetable>\n            <pagination></pagination>\n        </section>\n    </div>\n</template>\n\n<script>\n    import tableComponentMixin from '@/mixins/tableComponentMixin';\n    import {_checkboxTableField, _actionsTableField_1} from \"@/utils/tableFieldPresets\";\n\n    export default {\n        name: \"the-tokens\",\n        mixins: [tableComponentMixin],\n        data() {\n            return {\n                fields: [\n                    _checkboxTableField,\n                    {name: 'name', title: this.$t('objects.name')},\n                    {name: 'role', title: this.$tc('objects.permissions.permissionsRole', 1)},\n                    {name: 'expires', title: this.$t('objects.integrations.tokens.expires')},\n                    _actionsTableField_1,\n                ],\n            };\n        },\n\n        methods: {\n            create() {\n                this.$router.push('/integrations/tokens/new');\n            },\n\n            async deleteItem(item) {\n                // await deleteCommunication(item.id);\n            },\n\n            async loadDataList() {\n                // this.dataList = await getCommunicationsList();\n                for(let i = 0; i < 10; i++) {\n                    this.dataList.push({\n                        name: 'Token name '+i,\n                        role: {name: 'Role name'},\n                        expires: Date.now().toLocaleString(),\n                        isSelected: false,\n                    });\n                }\n                this.filterData();\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]}]}