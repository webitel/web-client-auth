{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/integrations/tokens/opened-token.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/integrations/tokens/opened-token.vue","mtime":1578657456666},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tokenPopup from './copy-token-popup';\nimport openedTokenGeneral from './opened-token-general';\nimport editComponentMixin from '@/mixins/editComponentMixin';\nimport {required} from 'vuelidate/lib/validators';\n\nexport default {\n    name: \"opened-token\",\n    mixins: [editComponentMixin],\n    components: {\n        tokenPopup,\n        openedTokenGeneral,\n    },\n    data() {\n        return {\n            itemInstance: {\n                name: 'Trigger name',\n                role: {name: 'Role name'},\n                expires: Date.now().toLocaleString()\n            },\n            tabs: [{\n                    text: this.$t('objects.general'),\n                    value: 'general',\n                }],\n            popupTriggerIf: false,\n        };\n    },\n\n    // by vuelidate\n    validations: {\n        itemInstance: {\n            name: {\n                required\n            },\n        }\n    },\n\n    methods: {\n        async save() {\n            if (this.id) {\n                // upd\n            } else {\n                //add\n            }\n            this.close();\n        },\n    }\n}\n",{"version":3,"sources":["opened-token.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"opened-token.vue","sourceRoot":"src/components/integrations/tokens","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryText=\"$t('objects.save')\"\n                :primaryAction=\"() => {this.popupTriggerIf = true}\"\n                close\n        >\n            <span>{{$tc('objects.integrations.tokens.tokens', 1)}}</span> | {{computeTitle}}\n        </object-header>\n        <token-popup v-if=\"popupTriggerIf\" @close=\"popupTriggerIf = false\"></token-popup>\n        <tabs-component\n                :tabs=\"tabs\"\n                :itemInstance=\"itemInstance\"\n                :v=\"$v\"\n                :root=\"$options.name\"\n        >\n            <template slot=\"component\" slot-scope=\"props\">\n                <component\n                        class=\"tabs-inner-component\"\n                        :is=\"props.currentTab\"\n                        :itemInstanceProp=\"itemInstance\"\n                        :v=\"$v\"\n                ></component>\n            </template>\n        </tabs-component>\n    </div>\n</template>\n\n<script>\n    import tokenPopup from './copy-token-popup';\n    import openedTokenGeneral from './opened-token-general';\n    import editComponentMixin from '@/mixins/editComponentMixin';\n    import {required} from 'vuelidate/lib/validators';\n\n    export default {\n        name: \"opened-token\",\n        mixins: [editComponentMixin],\n        components: {\n            tokenPopup,\n            openedTokenGeneral,\n        },\n        data() {\n            return {\n                itemInstance: {\n                    name: 'Trigger name',\n                    role: {name: 'Role name'},\n                    expires: Date.now().toLocaleString()\n                },\n                tabs: [{\n                        text: this.$t('objects.general'),\n                        value: 'general',\n                    }],\n                popupTriggerIf: false,\n            };\n        },\n\n        // by vuelidate\n        validations: {\n            itemInstance: {\n                name: {\n                    required\n                },\n            }\n        },\n\n        methods: {\n            async save() {\n                if (this.id) {\n                    // upd\n                } else {\n                    //add\n                }\n                this.close();\n            },\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]}]}