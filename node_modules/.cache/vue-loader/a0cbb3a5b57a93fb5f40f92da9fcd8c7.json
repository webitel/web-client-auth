{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/contact-center/resource-groups/opened-resource-group-permissions-role-popup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/contact-center/resource-groups/opened-resource-group-permissions-role-popup.vue","mtime":1579704812364},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport popup from '../../utils/popup';\nimport dropdownSelect from '../../utils/dropdown-select';\nimport {getRoleList} from \"../../../api/permissions/roles/roles\";\nimport {mapActions, mapState} from \"vuex\";\n\nexport default {\n    name: \"opened-resource-groups-permissions-role-popup\",\n    components: {popup, dropdownSelect},\n    data() {\n        return {\n            newGrantee: '',\n            dropdownOptionsList: [], // list of all roles to add new. retrieves from roles GET request\n        }\n    },\n\n    mounted() {\n        this.loadDropdownOptionsList();\n    },\n\n    computed: {\n        ...mapState('ccenter/resGroups/permissions', {\n            dataList: state => state.dataList,\n        }),\n\n        computeAvailableGrantees() {\n            // filter available grantees:\n            return this.dropdownOptionsList.filter(grantee => {\n                return !this.dataList.some(usedGrantee => {\n                    return grantee.id === usedGrantee.grantee.id;\n                });\n            });\n        }\n    },\n\n    methods: {\n        async save() {\n            try {\n                await this.addRole(this.newGrantee);\n                this.$emit('close');\n            } catch {}\n        },\n\n        // get all roles to choose which to add\n        async loadDropdownOptionsList(search) {\n            const response = await getRoleList(10, search);\n            this.dropdownOptionsList = [...response];\n        },\n\n        ...mapActions('ccenter/resGroups/permissions', {\n            addRole: 'ADD_ITEM_ROLE',\n        }),\n    }\n}\n",{"version":3,"sources":["opened-resource-group-permissions-role-popup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"opened-resource-group-permissions-role-popup.vue","sourceRoot":"src/components/contact-center/resource-groups","sourcesContent":["<template>\n    <popup\n            :title=\"$t('objects.permissions.object.newPermissionRole')\"\n            :primaryText=\"$t('objects.add')\"\n            :primaryAction=\"save\"\n            @close=\"$emit('close')\"\n            overflow\n    >\n        <section>\n            <dropdown-select\n                v-model=\"newGrantee\"\n                :options=\"computeAvailableGrantees\"\n                :placeholder=\"$tc('objects.permissions.permissionsRole', 1)\"\n                @search=\"loadDropdownOptionsList\"\n            ></dropdown-select>\n        </section>\n    </popup>\n</template>\n\n<script>\n    import popup from '../../utils/popup';\n    import dropdownSelect from '../../utils/dropdown-select';\n    import {getRoleList} from \"../../../api/permissions/roles/roles\";\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: \"opened-resource-groups-permissions-role-popup\",\n        components: {popup, dropdownSelect},\n        data() {\n            return {\n                newGrantee: '',\n                dropdownOptionsList: [], // list of all roles to add new. retrieves from roles GET request\n            }\n        },\n\n        mounted() {\n            this.loadDropdownOptionsList();\n        },\n\n        computed: {\n            ...mapState('ccenter/resGroups/permissions', {\n                dataList: state => state.dataList,\n            }),\n\n            computeAvailableGrantees() {\n                // filter available grantees:\n                return this.dropdownOptionsList.filter(grantee => {\n                    return !this.dataList.some(usedGrantee => {\n                        return grantee.id === usedGrantee.grantee.id;\n                    });\n                });\n            }\n        },\n\n        methods: {\n            async save() {\n                try {\n                    await this.addRole(this.newGrantee);\n                    this.$emit('close');\n                } catch {}\n            },\n\n            // get all roles to choose which to add\n            async loadDropdownOptionsList(search) {\n                const response = await getRoleList(10, search);\n                this.dropdownOptionsList = [...response];\n            },\n\n            ...mapActions('ccenter/resGroups/permissions', {\n                addRole: 'ADD_ITEM_ROLE',\n            }),\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]}]}