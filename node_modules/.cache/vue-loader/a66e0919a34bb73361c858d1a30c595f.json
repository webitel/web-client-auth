{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/directory/users/opened-user.vue?vue&type=style&index=0&id=d56dfdb4&lang=scss&scoped=true&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/directory/users/opened-user.vue","mtime":1578657456666},{"path":"/home/dev/work/client-auth/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.value-pair {\n    @extend .object-input-grid;\n\n    align-items: center;\n    grid-template-columns: 1fr 1fr 24px;\n\n    .icon-icon_delete {\n        margin-bottom: 10px;\n        cursor: pointer;\n\n        &:hover {\n            color: #000;\n        }\n    }\n}\n\n.variables .icon-icon_plus {\n    cursor: pointer;\n\n    &:hover {\n        color: #000;\n    }\n}\n",{"version":3,"sources":["opened-user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"opened-user.vue","sourceRoot":"src/components/directory/users","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryText=\"computePrimaryText\"\n                :primaryAction=\"save\"\n                :primaryDisabled=\"computeDisabled\"\n                close\n        >\n            {{$tc('objects.directory.users.users', 1)}} |\n            {{computeTitle}}\n        </object-header>\n        <tabs-component\n                :tabs=\"tabs\"\n                :root=\"$options.name\"\n        >\n            <template slot=\"component\" slot-scope=\"props\">\n                <component\n                        class=\"tabs-inner-component\"\n                        :is=\"props.currentTab\"\n                        :v=\"$v\"\n                ></component>\n            </template>\n        </tabs-component>\n    </div>\n</template>\n\n<script>\n    import openedUserGeneral from './opened-user-general';\n    import openedUserRoles from './opened-user-roles';\n    import openedUserLicense from './opened-user-license';\n    import openedUserDevices from './opened-user-devices';\n    import openedUserVariables from './opened-user-variables';\n    import {required} from 'vuelidate/lib/validators';\n    import editComponentMixin from '@/mixins/editComponentMixin';\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: \"opened-user\",\n        mixins: [editComponentMixin],\n        components: {\n            openedUserGeneral,\n            openedUserRoles,\n            openedUserLicense,\n            openedUserDevices,\n            openedUserVariables,\n        },\n        data() {\n            return {\n                tabs: [\n                    {\n                        text: this.$t('objects.general'),\n                        value: 'general',\n                    },\n                    {\n                        text: this.$t('objects.directory.users.roles'),\n                        value: 'roles',\n                    },\n                    {\n                        text: this.$t('objects.directory.users.license'),\n                        value: 'license',\n                    },\n                    {\n                        text: this.$t('objects.directory.users.devices'),\n                        value: 'devices',\n                    },\n                    {\n                        text: this.$t('objects.directory.users.variables'),\n                        value: 'variables',\n                    }\n                ],\n            }\n        },\n\n        validations: {\n            itemInstance: {\n                username: {\n                    required\n                },\n            },\n        },\n\n        mounted() {\n            this.id = this.$route.params.id;\n            this.loadItem();\n        },\n\n        computed: {\n            ...mapState('directory/users', {\n                itemInstance: state => state.itemInstance,\n            }),\n            id: {\n                get() {return this.$store.state.directory.users.itemId},\n                set(value) {this.setId(value)}\n            }\n        },\n\n        methods: {\n            ...mapActions('directory/users', {\n                setId: 'SET_ITEM_ID',\n                loadItem: 'LOAD_ITEM',\n                addItem: 'ADD_ITEM',\n                updateItem: 'UPDATE_ITEM',\n            }),\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .value-pair {\n        @extend .object-input-grid;\n\n        align-items: center;\n        grid-template-columns: 1fr 1fr 24px;\n\n        .icon-icon_delete {\n            margin-bottom: 10px;\n            cursor: pointer;\n\n            &:hover {\n                color: #000;\n            }\n        }\n    }\n\n    .variables .icon-icon_plus {\n        cursor: pointer;\n\n        &:hover {\n            color: #000;\n        }\n    }\n</style>"]}]}