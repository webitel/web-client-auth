{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/utils/code-editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/utils/code-editor.vue","mtime":1581320164433},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nimport {Monaco} from '../../utils/monacoSingleton';\nconst monaco = Monaco.getInstance();\n\nimport {editor} from 'monaco-editor';\n//https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html\nconst config = {\n    language: 'json',\n    theme: 'vs',\n    wordWrap: 'off',\n    // lineHeight: '28px',\n    autoClosingQuotes: true,\n    autoClosingBrackets: true,\n    automaticLayout: true,\n    autoIndent: true,\n    horizontal: 'scroll',\n};\n\nexport default {\n    name: \"code-editor\",\n    props: {\n        value: {\n            type: [Array, Object, String],\n            required: true\n        },\n        options: Object,\n        label: {\n            type: String,\n            default: ''\n        },\n        proposals: Function,\n    },\n\n    model: {\n        event: 'change'\n    },\n\n    data() {\n        return {\n            editor: '',\n            config\n        }\n    },\n\n    watch: {\n        value: function (value) {\n            if (this.editor) {\n                if (value !== this.editor.getValue()) {\n                    this.editor.setValue(value);\n                }\n            }\n        },\n    },\n\n    mounted() {\n        this.config.value = this.value || '[]';\n        this.editor = editor.create(this.$refs.editor, config);\n\n        this.editor.onDidChangeModelContent(event => {\n            const value = this.editor.getValue();\n            if (this.value !== value) {\n                this.$emit('change', value, event);\n            }\n        });\n\n        this.editor.onDidChangeModelDecorations(event => {\n            this.checkSyntaxError();\n        });\n    },\n\n    methods: {\n        checkSyntaxError() {\n            const errors = editor.getModelMarkers();\n            this.$emit('errorListener', !!errors.length);\n        },\n    },\n\n    beforeDestroy() {\n        this.editor && this.editor.dispose();\n    },\n}\n",{"version":3,"sources":["code-editor.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"code-editor.vue","sourceRoot":"src/components/utils","sourcesContent":["<template>\n    <div class=\"editor-wrap\">\n        <div class=\"label\">{{label}}</div>\n        <div class=\"editor\" ref=\"editor\"></div>\n    </div>\n</template>\n\n<script>\n    import {Monaco} from '../../utils/monacoSingleton';\n    const monaco = Monaco.getInstance();\n\n    import {editor} from 'monaco-editor';\n    //https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html\n    const config = {\n        language: 'json',\n        theme: 'vs',\n        wordWrap: 'off',\n        // lineHeight: '28px',\n        autoClosingQuotes: true,\n        autoClosingBrackets: true,\n        automaticLayout: true,\n        autoIndent: true,\n        horizontal: 'scroll',\n    };\n\n    export default {\n        name: \"code-editor\",\n        props: {\n            value: {\n                type: [Array, Object, String],\n                required: true\n            },\n            options: Object,\n            label: {\n                type: String,\n                default: ''\n            },\n            proposals: Function,\n        },\n\n        model: {\n            event: 'change'\n        },\n\n        data() {\n            return {\n                editor: '',\n                config\n            }\n        },\n\n        watch: {\n            value: function (value) {\n                if (this.editor) {\n                    if (value !== this.editor.getValue()) {\n                        this.editor.setValue(value);\n                    }\n                }\n            },\n        },\n\n        mounted() {\n            this.config.value = this.value || '[]';\n            this.editor = editor.create(this.$refs.editor, config);\n\n            this.editor.onDidChangeModelContent(event => {\n                const value = this.editor.getValue();\n                if (this.value !== value) {\n                    this.$emit('change', value, event);\n                }\n            });\n\n            this.editor.onDidChangeModelDecorations(event => {\n                this.checkSyntaxError();\n            });\n        },\n\n        methods: {\n            checkSyntaxError() {\n                const errors = editor.getModelMarkers();\n                this.$emit('errorListener', !!errors.length);\n            },\n        },\n\n        beforeDestroy() {\n            this.editor && this.editor.dispose();\n        },\n    }\n</script>\n\n<style lang=\"scss\">\n    $line-numbers-current: #E5DBB9;\n    $line-current: rgba(255, 193, 7, 0.2);\n\n    .editor {\n        width: 100%;\n        height: 480px;\n        border: 1px solid #EAE9E9;\n        border-radius: $border-radius;\n\n        .margin {\n            border-right: 1px solid #EAE9E9;\n\n            .margin-view-overlays {\n                // line number\n                .line-numbers {\n                    text-align: center;\n                    color: #000;\n                }\n\n                // line bg\n                .current-line {\n                    background: $line-numbers-current;\n                }\n\n                // collaps arrow\n                .cldr {\n                    height: 16px !important;\n                    left: 34px !important;\n                }\n            }\n        }\n\n        .view-overlays .current-line {\n            background: $line-current;\n            border: none !important;\n        }\n\n        // text code itself\n        .view-lines span {\n            @extend .typo-body-md;\n        }\n\n        // scrollbar hints canvas\n        .decorationsOverviewRuler {\n            display: none;\n        }\n\n        .minimap {\n            left: auto !important;\n            right: 10px;\n        }\n\n        .slider {\n            background-color: $srollbar-thumb-color;\n            border-radius: $border-radius;\n        }\n\n        // scrollbar\n        .vertical {\n            background: #fff;\n\n            &.fade {\n                opacity: 1;\n                visibility: visible !important;\n\n                .slider {\n                    opacity: 0;\n                }\n            }\n\n            .slider {\n                width: 10px !important;\n                left: auto !important;\n                right: 0;\n            }\n        }\n\n        // scrollbar\n        .horizontal {\n            background: #fff;\n            opacity: 1;\n\n            .slider {\n                height: 10px !important;\n            }\n        }\n    }\n</style>1"]}]}