{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/contact-center/resource-groups/opened-resource-group.vue?vue&type=style&index=0&id=167ccbaa&lang=scss&scoped=true&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/contact-center/resource-groups/opened-resource-group.vue","mtime":1579704812276},{"path":"/home/dev/work/client-auth/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.value-pair-wrap {\n    margin-top: 8px;\n}\n\n.value-pair {\n    grid-template-columns: 1fr 24px;\n}\n",{"version":3,"sources":["opened-resource-group.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AACA;AACA;;AAEA;AACA;AACA","file":"opened-resource-group.vue","sourceRoot":"src/components/contact-center/resource-groups","sourcesContent":["<template>\n    <div>\n        <object-header\n                :primaryText=\"computePrimaryText\"\n                :primaryAction=\"save\"\n                :primaryDisabled=\"computeDisabled\"\n                close\n        >\n            {{$tc('objects.ccenter.resGroups.resGroups', 1)}} |\n            {{computeTitle}}\n        </object-header>\n        <tabs-component\n                :tabs=\"tabs\"\n                :itemInstance=\"itemInstance\"\n                :v=\"$v\"\n                :root=\"$options.name\"\n        >\n            <template slot=\"component\" slot-scope=\"props\">\n                <component\n                        class=\"tabs-inner-component\"\n                        :is=\"props.currentTab\"\n                        :itemInstanceProp=\"itemInstance\"\n                        :v=\"$v\"\n                ></component>\n            </template>\n        </tabs-component>\n    </div>\n</template>\n\n<script>\n    import openedResourceGroupGeneral from './opened-resource-group-general';\n    import openedResourceGroupResources from './opened-resource-group-resources';\n    import openedResourceGroupTimerange from './opened-resource-group-timerange';\n    import openedResourceGroupPermissions from './opened-resource-group-permissions';\n    import editComponentMixin from '@/mixins/editComponentMixin';\n    import {required} from 'vuelidate/lib/validators';\n    import {requiredArrayValue, timerangeNotIntersect} from \"@/utils/validators\";\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: 'opened-resource-group',\n        mixins: [editComponentMixin],\n        components: {\n            openedResourceGroupGeneral,\n            openedResourceGroupResources,\n            openedResourceGroupTimerange,\n            openedResourceGroupPermissions,\n        },\n\n        data() {\n            return { };\n        },\n\n        // by vuelidate\n        validations: {\n            itemInstance: {\n                name: {\n                    required\n                },\n                communication: {\n                    required\n                },\n                time: {\n                    requiredArrayValue,\n                    timerangeNotIntersect,\n                }\n                // resList: {\n                //     requiredArrayValue\n                // },\n            }\n        },\n\n        mounted() {\n            this.id = this.$route.params.id;\n            this.loadItem();\n        },\n\n        computed: {\n            ...mapState('ccenter/resGroups', {\n                itemInstance: state => state.itemInstance,\n            }),\n            id: {\n                get() {return this.$store.state.ccenter.resGroups.itemId},\n                set(value) {this.setId(value)}\n            },\n\n            tabs() {\n                const tabs = [{text: this.$t('objects.general'), value: 'general',},\n                    {value: 'resources', text: this.$tc('objects.ccenter.res.res', 2),},\n                    {value: 'timerange', text: this.$t('objects.ccenter.resGroups.timerange'),}\n                ];\n\n                const permissions = {\n                    text: this.$tc('objects.permissions.permissions', 2),\n                    value: 'permissions',\n                };\n\n                if (this.id) tabs.push(permissions);\n                return tabs;\n            }\n        },\n\n        methods: {\n            ...mapActions('ccenter/resGroups', {\n                setId: 'SET_ITEM_ID',\n                loadItem: 'LOAD_ITEM',\n                addItem: 'ADD_ITEM',\n                updateItem: 'UPDATE_ITEM',\n            }),\n        },\n\n    };\n</script>\n\n\n<style lang=\"scss\" scoped>\n    .value-pair-wrap {\n        margin-top: 8px;\n    }\n\n    .value-pair {\n        grid-template-columns: 1fr 24px;\n    }\n</style>\n"]}]}