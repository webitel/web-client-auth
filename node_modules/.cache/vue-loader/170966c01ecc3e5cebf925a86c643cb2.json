{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/directory/users/the-users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/directory/users/the-users.vue","mtime":1581337168847},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tableFilter from '../../object-utils/utils/table-filter';\nimport dropdownSelect from '../../utils/dropdown-select';\nimport uploadPopup from './upload-users-popup';\nimport {_checkboxTableField, _actionsTableField_2} from \"@/utils/tableFieldPresets\";\nimport tableComponentMixin from '@/mixins/tableComponentMixin';\nimport {mapActions, mapState} from \"vuex\";\n\nexport default {\n    name: \"the-users\",\n    components: {\n        uploadPopup,\n        tableFilter,\n        dropdownSelect,\n    },\n    mixins: [tableComponentMixin],\n    data() {\n        return {\n            fields: [\n                _checkboxTableField,\n                {name: 'name', title: this.$t('objects.name')},\n                {name: 'username', title: this.$t('objects.directory.users.login')},\n                {name: 'extensions', title: this.$t('objects.directory.users.extensions')},\n                {name: 'DnD', title: this.$t('objects.directory.users.DnD')},\n                {name: 'status', title: this.$t('objects.directory.users.status')},\n                _actionsTableField_2,\n            ],\n            statusOptions: ['On break', 'Available', 'Chatting'],\n            csvFile: null\n        };\n    },\n\n    computed: {\n        ...mapState('directory/users', {\n            dataList: state => state.dataList,\n            page: state => state.page, // acts like a boolean: if page is 0, there's no back page\n            isNextPage: state => state.isNextPage,\n        }),\n\n        size: {\n            get() {\n                return this.$store.state.directory.users.size\n            },\n            set(value) {\n                this.setSize(value)\n            }\n        },\n\n        search: {\n            get() {\n                return this.$store.state.directory.users.search\n            },\n            set(value) {\n                this.setSearch(value)\n            }\n        }\n    },\n\n    methods: {\n        create() {\n            this.$router.push('/directory/users/new');\n        },\n\n        edit(rowId) {\n            this.$router.push({\n                name: 'directory-users-edit',\n                params: {id: this.dataList[rowId].id},\n            });\n        },\n\n        processCSV(event) {\n            const file = event.target.files[0];\n            if (file) {\n                this.csvFile = file;\n                this.popupTriggerIf = true;\n            }\n        },\n\n        closeCSVPopup() {\n            this.loadList();\n            this.popupTriggerIf = false;\n            this.$refs['file-input'].value = null;\n        },\n\n        ...mapActions('directory/users', {\n            loadDataList: 'LOAD_DATA_LIST',\n            setSize: 'SET_SIZE',\n            setSearch: 'SET_SEARCH',\n            changeStatus: 'PATCH_ITEM_PEROPERTY',\n            toggleSwitchProperty: 'TOGGLE_ITEM_PROPERTY',\n            nextPage: 'NEXT_PAGE',\n            prevPage: 'PREV_PAGE',\n            removeItem: 'REMOVE_ITEM',\n        }),\n    },\n}\n",{"version":3,"sources":["the-users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"the-users.vue","sourceRoot":"src/components/directory/users","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primary-action=\"create\"\n        >\n            {{$t('objects.directory.directory')}} |\n            {{$tc('objects.directory.users.users', 2)}}\n        </object-header>\n\n        <upload-popup\n                v-if=\"popupTriggerIf\"\n                :file=\"csvFile\"\n                @close=\"closeCSVPopup\"\n        ></upload-popup>\n\n        <section class=\"object-content\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">{{$t('objects.directory.users.allUsers')}}</h3>\n                <div class=\"content-header__actions-wrap\">\n                    <search\n                            v-model=\"search\"\n                            @filterData=\"loadList\"\n                    ></search>\n                    <i\n                            class=\"icon-icon_delete icon-action\"\n                            :class=\"{'hidden': anySelected}\"\n                            :title=\"$t('iconHints.deleteSelected')\"\n                            @click=\"deleteSelected\"\n                    ></i>\n                    <div\n                            class=\"upload-csv\"\n                            :title=\"$t('iconHints.upload')\"\n                    >\n                        <i\n                                class=\"icon-action icon-icon_upload\"\n                        ></i>\n                        <input\n                                ref=\"file-input\"\n                                class=\"upload-csv__input\"\n                                type=\"file\"\n                                @change=\"processCSV($event)\"\n                                accept=\".csv\"\n                        >\n                    </div>\n                    <i\n                            class=\"icon-action icon-icon_reload\"\n                            :title=\"$t('iconHints.reload')\"\n                            @click=\"loadList\"\n                    ></i>\n                </div>\n            </header>\n\n            <loader v-show=\"!isLoaded\"></loader>\n\n            <vuetable\n                    v-show=\"isLoaded\"\n                    :api-mode=\"false\"\n                    :fields=\"fields\"\n                    :data=\"dataList\"\n            >\n                <template slot=\"name\" slot-scope=\"props\">\n                    <div class=\"tt-capitalize\">\n                        <span class=\"nameLink\" @click=\"edit(props.rowIndex)\">\n                            {{dataList[props.rowIndex].name}}\n                        </span>\n                    </div>\n                </template>\n\n                <template slot=\"username\" slot-scope=\"props\">\n                    <div>\n                        {{dataList[props.rowIndex].username}}\n                    </div>\n                </template>\n\n                <template slot=\"extensions\" slot-scope=\"props\">\n                    <div>\n                        {{dataList[props.rowIndex].extension}}\n                    </div>\n                </template>\n\n                <template slot=\"DnD\" slot-scope=\"props\">\n                    <switcher\n                            :value=\"dataList[props.rowIndex].dnd\"\n                            @input=\"toggleSwitchProperty(props.rowIndex)\"\n                    ></switcher>\n                </template>\n\n                <template slot=\"status\" slot-scope=\"props\">\n                    <dropdown-select\n                            class=\"inline-dropdown inline-dropdown__options-right\"\n                            :value=\"dataList[props.rowIndex].status\"\n                            :placeholder=\"$t('objects.directory.users.status')\"\n                            :options=\"statusOptions\"\n                            taggable\n                            @input=\"changeStatus({value: $event, index: props.rowIndex})\"\n                    ></dropdown-select>\n                </template>\n\n                <template slot=\"actions\" slot-scope=\"props\">\n                    <i\n                            class=\"vuetable-action icon-icon_edit\"\n                            :title=\"$t('iconHints.edit')\"\n                            @click=\"edit(props.rowIndex)\"\n                    ></i>\n                    <i\n                            class=\"vuetable-action icon-icon_delete\"\n                            :title=\"$t('iconHints.delete')\"\n                            @click=\"remove(props.rowIndex)\"\n                    ></i>\n                </template>\n            </vuetable>\n            <pagination\n                    v-show=\"isLoaded\"\n                    v-model=\"size\"\n                    @loadDataList=\"loadList\"\n                    @next=\"nextPage\"\n                    @prev=\"prevPage\"\n                    :isNext=\"isNextPage\"\n                    :isPrev=\"!!page\"\n            ></pagination>\n        </section>\n    </div>\n</template>\n\n<script>\n    import tableFilter from '../../object-utils/utils/table-filter';\n    import dropdownSelect from '../../utils/dropdown-select';\n    import uploadPopup from './upload-users-popup';\n    import {_checkboxTableField, _actionsTableField_2} from \"@/utils/tableFieldPresets\";\n    import tableComponentMixin from '@/mixins/tableComponentMixin';\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: \"the-users\",\n        components: {\n            uploadPopup,\n            tableFilter,\n            dropdownSelect,\n        },\n        mixins: [tableComponentMixin],\n        data() {\n            return {\n                fields: [\n                    _checkboxTableField,\n                    {name: 'name', title: this.$t('objects.name')},\n                    {name: 'username', title: this.$t('objects.directory.users.login')},\n                    {name: 'extensions', title: this.$t('objects.directory.users.extensions')},\n                    {name: 'DnD', title: this.$t('objects.directory.users.DnD')},\n                    {name: 'status', title: this.$t('objects.directory.users.status')},\n                    _actionsTableField_2,\n                ],\n                statusOptions: ['On break', 'Available', 'Chatting'],\n                csvFile: null\n            };\n        },\n\n        computed: {\n            ...mapState('directory/users', {\n                dataList: state => state.dataList,\n                page: state => state.page, // acts like a boolean: if page is 0, there's no back page\n                isNextPage: state => state.isNextPage,\n            }),\n\n            size: {\n                get() {\n                    return this.$store.state.directory.users.size\n                },\n                set(value) {\n                    this.setSize(value)\n                }\n            },\n\n            search: {\n                get() {\n                    return this.$store.state.directory.users.search\n                },\n                set(value) {\n                    this.setSearch(value)\n                }\n            }\n        },\n\n        methods: {\n            create() {\n                this.$router.push('/directory/users/new');\n            },\n\n            edit(rowId) {\n                this.$router.push({\n                    name: 'directory-users-edit',\n                    params: {id: this.dataList[rowId].id},\n                });\n            },\n\n            processCSV(event) {\n                const file = event.target.files[0];\n                if (file) {\n                    this.csvFile = file;\n                    this.popupTriggerIf = true;\n                }\n            },\n\n            closeCSVPopup() {\n                this.loadList();\n                this.popupTriggerIf = false;\n                this.$refs['file-input'].value = null;\n            },\n\n            ...mapActions('directory/users', {\n                loadDataList: 'LOAD_DATA_LIST',\n                setSize: 'SET_SIZE',\n                setSearch: 'SET_SEARCH',\n                changeStatus: 'PATCH_ITEM_PEROPERTY',\n                toggleSwitchProperty: 'TOGGLE_ITEM_PROPERTY',\n                nextPage: 'NEXT_PAGE',\n                prevPage: 'PREV_PAGE',\n                removeItem: 'REMOVE_ITEM',\n            }),\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]}]}