{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/routing/flow/opened-flow.vue?vue&type=style&index=0&id=311261ea&lang=scss&scoped=true&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/routing/flow/opened-flow.vue","mtime":1581319602552},{"path":"/home/dev/work/client-auth/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.editor-wrap {\n    margin-top: 8px;\n}\n",{"version":3,"sources":["opened-flow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA","file":"opened-flow.vue","sourceRoot":"src/components/routing/flow","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryText=\"computePrimaryText\"\n                :primaryAction=\"save\"\n                :primaryDisabled=\"computeDisabled\"\n                close\n        >\n            {{$t('objects.routing.flow.flowSchema')}} |\n            {{computeTitle}}\n        </object-header>\n        <section class=\"object-content module-new\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">{{$t('objects.generalInfo')}}</h3>\n            </header>\n            <form class=\"object-input-grid\">\n                <form-input\n                        v-model.trim=\"name\"\n                        :v=\"$v.itemInstance.name\"\n                        :label=\"$t('objects.name')\"\n                        required\n                ></form-input>\n            </form>\n            <code-editor\n                    v-model=\"schema\"\n                    :label=\"$t('objects.routing.flow.callflow')\"\n                    @errorListener=\"isSyntaxError = $event\"\n            ></code-editor>\n        </section>\n    </div>\n</template>\n\n<script>\n    import editComponentMixin from '@/mixins/editComponentMixin';\n    import codeEditor from '@/components/utils/code-editor';\n    import {required} from 'vuelidate/lib/validators';\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: \"opened-flow\",\n        mixins: [editComponentMixin],\n        components: {\n            codeEditor\n        },\n        data() {\n            return {\n                options: {\n                    autoClosingBrackets: false\n                },\n                isSyntaxError: true,\n            };\n        },\n\n        // by vuelidate\n        validations: {\n            itemInstance: {\n                name: {\n                    required\n                },\n            },\n        },\n\n        mounted() {\n            this.id = this.$route.params.id;\n            this.loadItem();\n        },\n\n        computed: {\n            ...mapState('routing/flow', {\n                itemInstance: state => state.itemInstance,\n            }),\n            id: {\n                get() {\n                    return this.$store.state.routing.flow.itemId\n                },\n                set(value) {\n                    this.setId(value)\n                }\n            },\n            name: {\n                get() {\n                    return this.$store.state.routing.flow.itemInstance.name\n                },\n                set(value) {\n                    this.setItemProp({prop: 'name', value})\n                }\n            },\n            schema: {\n                get() {\n                    return this.$store.state.routing.flow.itemInstance.schema\n                },\n                set(value) {\n                    this.setItemProp({prop: 'schema', value})\n                }\n            },\n        },\n\n        methods: {\n            // override validations check to compute disabled SAVE properly\n            // can't just add isSyntaxError to validations because checkValidation checks\n            // only itemInstance props\n            checkValidations(validatedInstance = 'itemInstance') {\n                const v = this.$v ? this.$v : this.v;\n                v[validatedInstance].$touch();\n                // if its still pending or an error is returned do not submit\n                return v[validatedInstance].$pending ||\n                    v[validatedInstance].$error || this.isSyntaxError;\n            },\n\n            ...mapActions('routing/flow', {\n                setId: 'SET_ITEM_ID',\n                loadItem: 'LOAD_ITEM',\n                addItem: 'ADD_ITEM',\n                updateItem: 'UPDATE_ITEM',\n                setItemProp: 'SET_ITEM_PROPERTY',\n            }),\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .editor-wrap {\n        margin-top: 8px;\n    }\n</style>"]}]}