{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/integrations/storage/opened-storage-backblaze.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/integrations/storage/opened-storage-backblaze.vue","mtime":1579532845440},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\nimport {mapActions} from \"vuex\";\n\nexport default {\n    name: \"opened-storage-backblaze\",\n    mixins: [openedTabComponentMixin],\n\n    computed: {\n        key: {\n            get() {return this.$store.state.integrations.storage.itemInstance.key},\n            set(value) {this.setItemProp({prop: 'key', value})}\n        },\n        access: {\n            get() {return this.$store.state.integrations.storage.itemInstance.access},\n            set(value) {this.setItemProp({prop: 'access', value})}\n        },\n        bucket: {\n            get() {return this.$store.state.integrations.storage.itemInstance.bucket},\n            set(value) {this.setItemProp({prop: 'bucket', value})}\n        },\n        region: {\n            get() {return this.$store.state.integrations.storage.itemInstance.region},\n            set(value) {this.setItemProp({prop: 'region', value})}\n        },\n    },\n\n    methods: {\n        ...mapActions('integrations/storage', {\n            setItemProp: 'SET_ITEM_PROPERTY',\n        }),\n    },\n}\n",{"version":3,"sources":["opened-storage-backblaze.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"opened-storage-backblaze.vue","sourceRoot":"src/components/integrations/storage","sourcesContent":["<template>\n    <section>\n        <header class=\"content-header\">\n            <h3 class=\"content-title\">{{$t('objects.integrations.storage.backblaze')}}</h3>\n        </header>\n        <form class=\"object-input-grid\">\n            <form-input\n                    v-model=\"account\"\n                    :v=\"v.itemInstance.account\"\n                    :label=\"$t('objects.integrations.storage.backblazeAccount')\"\n                    required\n            ></form-input>\n            <form-input\n                    v-model=\"key\"\n                    :v=\"v.itemInstance.key\"\n                    :label=\"$t('objects.integrations.storage.backblazeKey')\"\n                    required\n            ></form-input>\n            <form-input\n                    v-model=\"bucket\"\n                    :v=\"v.itemInstance.bucket\"\n                    :label=\"$t('objects.integrations.storage.bucket')\"\n                    required\n            ></form-input>\n            <form-input\n                    v-model=\"bucketId\"\n                    :v=\"v.itemInstance.bucketId\"\n                    :label=\"$t('objects.integrations.storage.backblazeBucketId')\"\n                    required\n            ></form-input>\n        </form>\n    </section>\n</template>\n\n<script>\n    import openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\n    import {mapActions} from \"vuex\";\n\n    export default {\n        name: \"opened-storage-backblaze\",\n        mixins: [openedTabComponentMixin],\n\n        computed: {\n            key: {\n                get() {return this.$store.state.integrations.storage.itemInstance.key},\n                set(value) {this.setItemProp({prop: 'key', value})}\n            },\n            access: {\n                get() {return this.$store.state.integrations.storage.itemInstance.access},\n                set(value) {this.setItemProp({prop: 'access', value})}\n            },\n            bucket: {\n                get() {return this.$store.state.integrations.storage.itemInstance.bucket},\n                set(value) {this.setItemProp({prop: 'bucket', value})}\n            },\n            region: {\n                get() {return this.$store.state.integrations.storage.itemInstance.region},\n                set(value) {this.setItemProp({prop: 'region', value})}\n            },\n        },\n\n        methods: {\n            ...mapActions('integrations/storage', {\n                setItemProp: 'SET_ITEM_PROPERTY',\n            }),\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]}]}