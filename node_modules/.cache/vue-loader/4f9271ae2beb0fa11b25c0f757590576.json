{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/node_modules/vuetable-2/src/components/VuetableRowHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/node_modules/vuetable-2/src/components/VuetableRowHeader.vue","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport VuetableFieldCheckbox from './VuetableFieldCheckbox'\r\nimport VuetableFieldHandle from './VuetableFieldHandle'\r\nimport VuetableFieldSequence from './VuetableFieldSequence'\r\nimport VuetableColGutter from './VuetableColGutter'\r\n\r\nexport default {\r\n  components: {\r\n    'vuetable-field-checkbox': VuetableFieldCheckbox, \r\n    'vuetable-field-handle'  : VuetableFieldHandle,\r\n    'vuetable-field-sequence': VuetableFieldSequence,\r\n    VuetableColGutter\r\n  },\r\n\r\n  computed: {\r\n    sortOrder() {\r\n      return this.$parent.sortOrder\r\n    },\r\n\r\n    css() {\r\n      return this.$parent.$_css\r\n    },\r\n\r\n    vuetable() {\r\n      return this.$parent\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    stripPrefix (name) {\r\n      return name.replace(this.vuetable.fieldPrefix, '')\r\n    },\r\n\r\n    headerClass (base, field) {\r\n      return [\r\n        base + '-' + this.toSnakeCase(field.name),\r\n        field.titleClass || '',\r\n        this.sortClass(field),\r\n        {'sortable': this.vuetable.isSortable(field)}\r\n      ]\r\n    },\r\n\r\n    toSnakeCase (str) {\r\n      return typeof(str) === 'string' && str.replace(/([A-Z])/g, (chr) => \"_\"+chr.toLowerCase())\r\n        .replace(' ', '_')\r\n        .replace('.', '_')\r\n    },\r\n\r\n    sortClass (field) {\r\n      let cls = ''\r\n      let i = this.currentSortOrderPosition(field)\r\n\r\n      if (i !== false) {\r\n        cls = (this.sortOrder[i].direction == 'asc') ? this.css.ascendingClass : this.css.descendingClass\r\n      }\r\n\r\n      return cls;\r\n    },\r\n\r\n    sortIcon (field) {\r\n      let cls = this.css.sortableIcon\r\n      let i = this.currentSortOrderPosition(field)\r\n\r\n      if (i !== false) {\r\n        cls = (this.sortOrder[i].direction == 'asc') ? this.css.ascendingIcon : this.css.descendingIcon\r\n      }\r\n\r\n      return cls;\r\n    },\r\n\r\n    isInCurrentSortGroup (field) {\r\n      return this.currentSortOrderPosition(field) !== false;\r\n    },\r\n\r\n    hasSortableIcon (field) {\r\n      return this.vuetable.isSortable(field) && this.css.sortableIcon != ''\r\n    },\r\n\r\n    currentSortOrderPosition (field) {\r\n      if ( ! this.vuetable.isSortable(field)) {\r\n        return false\r\n      }\r\n\r\n      for (let i = 0; i < this.sortOrder.length; i++) {\r\n        if (this.fieldIsInSortOrderPosition(field, i)) {\r\n          return i;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    fieldIsInSortOrderPosition (field, i) {\r\n      return this.sortOrder[i].field === field.name && this.sortOrder[i].sortField === field.sortField\r\n    },\r\n\r\n    renderTitle (field) {\r\n      let title = this.getTitle(field)\r\n\r\n      if (title.length > 0 && this.isInCurrentSortGroup(field) || this.hasSortableIcon(field)) {\r\n        let style = `opacity:${this.sortIconOpacity(field)};position:relative;float:right`\r\n        let iconTag = this.vuetable.showSortIcons ? this.renderIconTag(['sort-icon', this.sortIcon(field)], `style=\"${style}\"`) : ''\r\n        return title + ' ' + iconTag\r\n      }\r\n\r\n      return title\r\n    },\r\n\r\n    getTitle (field) {\r\n      if (typeof(field.title) === 'function') return field.title()\r\n\r\n      return typeof(field.title) === 'undefined'\r\n        ? field.name.replace('.', ' ')\r\n        : field.title\r\n    },\r\n\r\n    sortIconOpacity (field) {\r\n      /*\r\n       * fields with stronger precedence have darker color\r\n       *\r\n       * if there are few fields, we go down by 0.3\r\n       * ex. 2 fields are selected: 1.0, 0.7\r\n       *\r\n       * if there are more we go down evenly on the given spectrum\r\n       * ex. 6 fields are selected: 1.0, 0.86, 0.72, 0.58, 0.44, 0.3\r\n       */\r\n      let max = 1.0,\r\n          min = 0.3,\r\n          step = 0.3\r\n\r\n      let count = this.sortOrder.length;\r\n      let current = this.currentSortOrderPosition(field)\r\n\r\n\r\n      if(max - count * step < min) {\r\n        step = (max - min) / (count-1)\r\n      }\r\n\r\n      let opacity = max - current * step\r\n\r\n      return opacity\r\n    },\r\n\r\n    renderIconTag (classes, options = '') {\r\n      return typeof(this.css.renderIcon) === 'undefined'\r\n        ? `<i class=\"${classes.join(' ')}\" ${options}></i>`\r\n        : this.css.renderIcon(classes, options)\r\n    },\r\n\r\n    onColumnHeaderClicked (field, event) {\r\n      this.vuetable.orderBy(field, event)\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["VuetableRowHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"VuetableRowHeader.vue","sourceRoot":"node_modules/vuetable-2/src/components","sourcesContent":["<template>\r\n  <tr>\r\n    <template v-for=\"(field, fieldIndex) in vuetable.tableFields\">\r\n      <template v-if=\"field.visible\">\r\n        <template v-if=\"vuetable.isFieldComponent(field.name)\">\r\n          <component :is=\"field.name\"\r\n            :row-field=\"field\"\r\n            :is-header=\"true\"\r\n            :title=\"renderTitle(field)\"\r\n            :vuetable=\"vuetable\"\r\n            :key=\"fieldIndex\"\r\n            :class=\"headerClass('vuetable-th-component', field)\"\r\n            :style=\"{width: field.width}\"\r\n            @vuetable:header-event=\"vuetable.onHeaderEvent\"\r\n            @click=\"onColumnHeaderClicked(field, $event)\"\r\n          ></component>\r\n        </template>\r\n        <template v-else-if=\"vuetable.isFieldSlot(field.name)\">\r\n          <th :class=\"headerClass('vuetable-th-slot', field)\"\r\n              :key=\"fieldIndex\"\r\n              :style=\"{width: field.width}\"\r\n              v-html=\"renderTitle(field)\"\r\n              @click=\"onColumnHeaderClicked(field, $event)\"\r\n          ></th>\r\n        </template>\r\n        <template v-else>\r\n          <th @click=\"onColumnHeaderClicked(field, $event)\"\r\n            :key=\"fieldIndex\"\r\n            :id=\"'_' + field.name\"\r\n            :class=\"headerClass('vuetable-th', field)\"\r\n            :style=\"{width: field.width}\"\r\n            v-html=\"renderTitle(field)\"\r\n          ></th>\r\n        </template>\r\n      </template>\r\n    </template>\r\n    <vuetable-col-gutter v-if=\"vuetable.scrollVisible\"/>\r\n  </tr>\r\n</template>\r\n<script>\r\nimport VuetableFieldCheckbox from './VuetableFieldCheckbox'\r\nimport VuetableFieldHandle from './VuetableFieldHandle'\r\nimport VuetableFieldSequence from './VuetableFieldSequence'\r\nimport VuetableColGutter from './VuetableColGutter'\r\n\r\nexport default {\r\n  components: {\r\n    'vuetable-field-checkbox': VuetableFieldCheckbox, \r\n    'vuetable-field-handle'  : VuetableFieldHandle,\r\n    'vuetable-field-sequence': VuetableFieldSequence,\r\n    VuetableColGutter\r\n  },\r\n\r\n  computed: {\r\n    sortOrder() {\r\n      return this.$parent.sortOrder\r\n    },\r\n\r\n    css() {\r\n      return this.$parent.$_css\r\n    },\r\n\r\n    vuetable() {\r\n      return this.$parent\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    stripPrefix (name) {\r\n      return name.replace(this.vuetable.fieldPrefix, '')\r\n    },\r\n\r\n    headerClass (base, field) {\r\n      return [\r\n        base + '-' + this.toSnakeCase(field.name),\r\n        field.titleClass || '',\r\n        this.sortClass(field),\r\n        {'sortable': this.vuetable.isSortable(field)}\r\n      ]\r\n    },\r\n\r\n    toSnakeCase (str) {\r\n      return typeof(str) === 'string' && str.replace(/([A-Z])/g, (chr) => \"_\"+chr.toLowerCase())\r\n        .replace(' ', '_')\r\n        .replace('.', '_')\r\n    },\r\n\r\n    sortClass (field) {\r\n      let cls = ''\r\n      let i = this.currentSortOrderPosition(field)\r\n\r\n      if (i !== false) {\r\n        cls = (this.sortOrder[i].direction == 'asc') ? this.css.ascendingClass : this.css.descendingClass\r\n      }\r\n\r\n      return cls;\r\n    },\r\n\r\n    sortIcon (field) {\r\n      let cls = this.css.sortableIcon\r\n      let i = this.currentSortOrderPosition(field)\r\n\r\n      if (i !== false) {\r\n        cls = (this.sortOrder[i].direction == 'asc') ? this.css.ascendingIcon : this.css.descendingIcon\r\n      }\r\n\r\n      return cls;\r\n    },\r\n\r\n    isInCurrentSortGroup (field) {\r\n      return this.currentSortOrderPosition(field) !== false;\r\n    },\r\n\r\n    hasSortableIcon (field) {\r\n      return this.vuetable.isSortable(field) && this.css.sortableIcon != ''\r\n    },\r\n\r\n    currentSortOrderPosition (field) {\r\n      if ( ! this.vuetable.isSortable(field)) {\r\n        return false\r\n      }\r\n\r\n      for (let i = 0; i < this.sortOrder.length; i++) {\r\n        if (this.fieldIsInSortOrderPosition(field, i)) {\r\n          return i;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    fieldIsInSortOrderPosition (field, i) {\r\n      return this.sortOrder[i].field === field.name && this.sortOrder[i].sortField === field.sortField\r\n    },\r\n\r\n    renderTitle (field) {\r\n      let title = this.getTitle(field)\r\n\r\n      if (title.length > 0 && this.isInCurrentSortGroup(field) || this.hasSortableIcon(field)) {\r\n        let style = `opacity:${this.sortIconOpacity(field)};position:relative;float:right`\r\n        let iconTag = this.vuetable.showSortIcons ? this.renderIconTag(['sort-icon', this.sortIcon(field)], `style=\"${style}\"`) : ''\r\n        return title + ' ' + iconTag\r\n      }\r\n\r\n      return title\r\n    },\r\n\r\n    getTitle (field) {\r\n      if (typeof(field.title) === 'function') return field.title()\r\n\r\n      return typeof(field.title) === 'undefined'\r\n        ? field.name.replace('.', ' ')\r\n        : field.title\r\n    },\r\n\r\n    sortIconOpacity (field) {\r\n      /*\r\n       * fields with stronger precedence have darker color\r\n       *\r\n       * if there are few fields, we go down by 0.3\r\n       * ex. 2 fields are selected: 1.0, 0.7\r\n       *\r\n       * if there are more we go down evenly on the given spectrum\r\n       * ex. 6 fields are selected: 1.0, 0.86, 0.72, 0.58, 0.44, 0.3\r\n       */\r\n      let max = 1.0,\r\n          min = 0.3,\r\n          step = 0.3\r\n\r\n      let count = this.sortOrder.length;\r\n      let current = this.currentSortOrderPosition(field)\r\n\r\n\r\n      if(max - count * step < min) {\r\n        step = (max - min) / (count-1)\r\n      }\r\n\r\n      let opacity = max - current * step\r\n\r\n      return opacity\r\n    },\r\n\r\n    renderIconTag (classes, options = '') {\r\n      return typeof(this.css.renderIcon) === 'undefined'\r\n        ? `<i class=\"${classes.join(' ')}\" ${options}></i>`\r\n        : this.css.renderIcon(classes, options)\r\n    },\r\n\r\n    onColumnHeaderClicked (field, event) {\r\n      this.vuetable.orderBy(field, event)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}