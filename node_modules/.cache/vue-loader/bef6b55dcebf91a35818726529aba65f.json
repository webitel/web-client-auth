{"remainingRequest":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/contact-center/queues/preview-dialer/opened-queue-preview-dialer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/contact-center/queues/preview-dialer/opened-queue-preview-dialer.vue","mtime":1579703984231},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport openedQueuePreviewDialerGeneral from './opened-queue-preview-dialer-general';\nimport openedQueuePreviewDialerResources from '../opened-queue-resources';\nimport openedQueuePreviewDialerVariables from '../opened-queue-variables';\nimport openedQueuePreviewDialerTiming from './opened-queue-preview-dialer-timing';\nimport openedQueuePreviewDialerBuckets from '../opened-queue-buckets';\nimport openedQueuePreviewDialerPermissions from '../opened-queue-permissions';\nimport editComponentMixin from '@/mixins/editComponentMixin';\nimport {required} from 'vuelidate/lib/validators';\nimport {requiredArrayValue} from \"@/utils/validators\";\nimport {mapActions, mapState} from \"vuex\";\n\nexport default {\n    name: 'opened-queue-preview-dialer',\n    components: {\n        openedQueuePreviewDialerGeneral,\n        openedQueuePreviewDialerResources,\n        openedQueuePreviewDialerVariables,\n        openedQueuePreviewDialerTiming,\n        openedQueuePreviewDialerBuckets,\n        openedQueuePreviewDialerPermissions,\n    },\n    mixins: [editComponentMixin],\n\n    data() {\n        return {};\n    },\n\n    // by vuelidate\n    validations: {\n        itemInstance: {\n            name: {\n                required\n            },\n            calendar: {\n                required\n            },\n            strategy: {\n                required\n            },\n            schema: {\n                required\n            },\n        }\n    },\n\n    mounted() {\n        this.id = this.$route.params.id;\n        this.loadItem('preview-dialer');\n    },\n\n    computed: {\n        ...mapState('ccenter/queues', {\n            itemInstance: state => state.itemInstance,\n        }),\n        id: {\n            get() {return this.$store.state.ccenter.queues.itemId},\n            set(value) {this.setId(value)}\n        },\n\n        tabs() {\n            const tabs = [{\n                text: this.$t('objects.general'),\n                value: 'general',\n            }, {\n                text: this.$tc('objects.ccenter.queues.variables', 2),\n                value: 'variables',\n            }, {\n                text: this.$t('objects.ccenter.queues.timing'),\n                value: 'timing',\n            }, {\n                text: this.$tc('objects.ccenter.buckets.buckets', 2),\n                value: 'buckets',\n            }];\n\n            const permissions = {\n                text: this.$tc('objects.permissions.permissions', 2),\n                value: 'permissions',\n            };\n\n            if (this.id) tabs.push(permissions);\n            return tabs;\n        },\n    },\n\n    methods: {\n        ...mapActions('ccenter/queues', {\n            setId: 'SET_ITEM_ID',\n            loadItem: 'LOAD_ITEM',\n            addItem: 'ADD_ITEM',\n            updateItem: 'UPDATE_ITEM',\n        }),\n    },\n};\n",{"version":3,"sources":["opened-queue-preview-dialer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"opened-queue-preview-dialer.vue","sourceRoot":"src/components/contact-center/queues/preview-dialer","sourcesContent":["<template>\n    <div>\n        <object-header\n                :primaryText=\"computePrimaryText\"\n                :primaryAction=\"save\"\n                :primaryDisabled=\"computeDisabled\"\n                close\n        >\n            {{$t('objects.ccenter.queues.previewDialer')}} |\n            {{computeTitle}}\n        </object-header>\n        <tabs-component\n                :tabs=\"tabs\"\n                :root=\"$options.name\"\n        >\n            <template slot=\"component\" slot-scope=\"props\">\n                <component\n                        class=\"tabs-inner-component\"\n                        :is=\"props.currentTab\"\n                        :v=\"$v\"\n                ></component>\n            </template>\n        </tabs-component>\n    </div>\n</template>\n\n<script>\n    import openedQueuePreviewDialerGeneral from './opened-queue-preview-dialer-general';\n    import openedQueuePreviewDialerResources from '../opened-queue-resources';\n    import openedQueuePreviewDialerVariables from '../opened-queue-variables';\n    import openedQueuePreviewDialerTiming from './opened-queue-preview-dialer-timing';\n    import openedQueuePreviewDialerBuckets from '../opened-queue-buckets';\n    import openedQueuePreviewDialerPermissions from '../opened-queue-permissions';\n    import editComponentMixin from '@/mixins/editComponentMixin';\n    import {required} from 'vuelidate/lib/validators';\n    import {requiredArrayValue} from \"@/utils/validators\";\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: 'opened-queue-preview-dialer',\n        components: {\n            openedQueuePreviewDialerGeneral,\n            openedQueuePreviewDialerResources,\n            openedQueuePreviewDialerVariables,\n            openedQueuePreviewDialerTiming,\n            openedQueuePreviewDialerBuckets,\n            openedQueuePreviewDialerPermissions,\n        },\n        mixins: [editComponentMixin],\n\n        data() {\n            return {};\n        },\n\n        // by vuelidate\n        validations: {\n            itemInstance: {\n                name: {\n                    required\n                },\n                calendar: {\n                    required\n                },\n                strategy: {\n                    required\n                },\n                schema: {\n                    required\n                },\n            }\n        },\n\n        mounted() {\n            this.id = this.$route.params.id;\n            this.loadItem('preview-dialer');\n        },\n\n        computed: {\n            ...mapState('ccenter/queues', {\n                itemInstance: state => state.itemInstance,\n            }),\n            id: {\n                get() {return this.$store.state.ccenter.queues.itemId},\n                set(value) {this.setId(value)}\n            },\n\n            tabs() {\n                const tabs = [{\n                    text: this.$t('objects.general'),\n                    value: 'general',\n                }, {\n                    text: this.$tc('objects.ccenter.queues.variables', 2),\n                    value: 'variables',\n                }, {\n                    text: this.$t('objects.ccenter.queues.timing'),\n                    value: 'timing',\n                }, {\n                    text: this.$tc('objects.ccenter.buckets.buckets', 2),\n                    value: 'buckets',\n                }];\n\n                const permissions = {\n                    text: this.$tc('objects.permissions.permissions', 2),\n                    value: 'permissions',\n                };\n\n                if (this.id) tabs.push(permissions);\n                return tabs;\n            },\n        },\n\n        methods: {\n            ...mapActions('ccenter/queues', {\n                setId: 'SET_ITEM_ID',\n                loadItem: 'LOAD_ITEM',\n                addItem: 'ADD_ITEM',\n                updateItem: 'UPDATE_ITEM',\n            }),\n        },\n    };\n</script>\n\n\n<style lang=\"scss\" scoped>\n    .value-pair-wrap {\n        margin-top: 8px;\n    }\n\n    .value-pair {\n        grid-template-columns: 1fr 24px;\n    }\n</style>\n"]}]}