{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/auth/auth.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/auth/auth.js","mtime":1582712541876},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport instance from \"../instance\";\nexport var login =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(credentials) {\n    var url, response, messageData;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = '/login';\n            _context.prev = 1;\n            _context.next = 4;\n            return instance.post(url, credentials);\n\n          case 4:\n            response = _context.sent;\n            localStorage.setItem('access-token', response.authorization.accessToken);\n            messageData = {\n              accessToken: response.authorization.accessToken\n            };\n            parent.postMessage(messageData, '*');\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            throw _context.t0;\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 10]]);\n  }));\n\n  return function login(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var register =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(credentials) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            url = '/signup';\n            _context2.prev = 1;\n            _context2.next = 4;\n            return instance.post(url, credentials);\n\n          case 4:\n            _context2.next = 6;\n            return login({\n              username: credentials.username,\n              password: credentials.password\n            });\n\n          case 6:\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            throw _context2.t0;\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 8]]);\n  }));\n\n  return function register(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/auth/auth.js"],"names":["instance","login","credentials","url","post","response","localStorage","setItem","authorization","accessToken","messageData","parent","postMessage","register","username","password"],"mappings":";;AAAA,OAAOA,QAAP;AAEA,OAAO,IAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,YAAAA,GADW,GACL,QADK;AAAA;AAAA;AAAA,mBAIUH,QAAQ,CAACI,IAAT,CAAcD,GAAd,EAAmBD,WAAnB,CAJV;;AAAA;AAIPG,YAAAA,QAJO;AAKbC,YAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,QAAQ,CAACG,aAAT,CAAuBC,WAA5D;AAEMC,YAAAA,WAPO,GAOO;AAAED,cAAAA,WAAW,EAAEJ,QAAQ,CAACG,aAAT,CAAuBC;AAAtC,aAPP;AAQbE,YAAAA,MAAM,CAACC,WAAP,CAAmBF,WAAnB,EAAgC,GAAhC;AARa;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALT,KAAK;AAAA;AAAA;AAAA,GAAX;AAcP,OAAO,IAAMY,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOX,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,GADc,GACR,SADQ;AAAA;AAAA;AAAA,mBAIVH,QAAQ,CAACI,IAAT,CAAcD,GAAd,EAAmBD,WAAnB,CAJU;;AAAA;AAAA;AAAA,mBAKVD,KAAK,CAAC;AAACa,cAAAA,QAAQ,EAAEZ,WAAW,CAACY,QAAvB;AAAiCC,cAAAA,QAAQ,EAAEb,WAAW,CAACa;AAAvD,aAAD,CALK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARF,QAAQ;AAAA;AAAA;AAAA,GAAd","sourcesContent":["import instance from '../instance';\n\nexport const login = async (credentials) => {\n    const url = '/login';\n\n    try {\n        const response = await instance.post(url, credentials);\n        localStorage.setItem('access-token', response.authorization.accessToken);\n\n        const messageData = { accessToken: response.authorization.accessToken };\n        parent.postMessage(messageData, '*');\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const register = async (credentials) => {\n    const url = '/signup';\n\n    try {\n        await instance.post(url, credentials);\n        await login({username: credentials.username, password: credentials.password});\n    } catch (error) {\n        throw error;\n    }\n};\n"]}]}