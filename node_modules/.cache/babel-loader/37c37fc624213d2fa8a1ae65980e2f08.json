{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/directory/users/opened-user.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/directory/users/opened-user.vue","mtime":1578657456666},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport openedUserGeneral from \"./opened-user-general\";\nimport openedUserRoles from \"./opened-user-roles\";\nimport openedUserLicense from \"./opened-user-license\";\nimport openedUserDevices from \"./opened-user-devices\";\nimport openedUserVariables from \"./opened-user-variables\";\nimport { required } from 'vuelidate/lib/validators';\nimport editComponentMixin from '@/mixins/editComponentMixin';\nimport { mapActions, mapState } from \"vuex\";\nexport default {\n  name: \"opened-user\",\n  mixins: [editComponentMixin],\n  components: {\n    openedUserGeneral: openedUserGeneral,\n    openedUserRoles: openedUserRoles,\n    openedUserLicense: openedUserLicense,\n    openedUserDevices: openedUserDevices,\n    openedUserVariables: openedUserVariables\n  },\n  data: function data() {\n    return {\n      tabs: [{\n        text: this.$t('objects.general'),\n        value: 'general'\n      }, {\n        text: this.$t('objects.directory.users.roles'),\n        value: 'roles'\n      }, {\n        text: this.$t('objects.directory.users.license'),\n        value: 'license'\n      }, {\n        text: this.$t('objects.directory.users.devices'),\n        value: 'devices'\n      }, {\n        text: this.$t('objects.directory.users.variables'),\n        value: 'variables'\n      }]\n    };\n  },\n  validations: {\n    itemInstance: {\n      username: {\n        required: required\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.id = this.$route.params.id;\n    this.loadItem();\n  },\n  computed: _objectSpread({}, mapState('directory/users', {\n    itemInstance: function itemInstance(state) {\n      return state.itemInstance;\n    }\n  }), {\n    id: {\n      get: function get() {\n        return this.$store.state.directory.users.itemId;\n      },\n      set: function set(value) {\n        this.setId(value);\n      }\n    }\n  }),\n  methods: _objectSpread({}, mapActions('directory/users', {\n    setId: 'SET_ITEM_ID',\n    loadItem: 'LOAD_ITEM',\n    addItem: 'ADD_ITEM',\n    updateItem: 'UPDATE_ITEM'\n  }))\n};",{"version":3,"sources":["opened-user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAA,iBAAA;AACA,OAAA,eAAA;AACA,OAAA,iBAAA;AACA,OAAA,iBAAA;AACA,OAAA,mBAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AACA,OAAA,kBAAA,MAAA,6BAAA;AACA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,MAAA,EAAA,CAAA,kBAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,iBAAA,EAAA,iBADA;AAEA,IAAA,eAAA,EAAA,eAFA;AAGA,IAAA,iBAAA,EAAA,iBAHA;AAIA,IAAA,iBAAA,EAAA,iBAJA;AAKA,IAAA,mBAAA,EAAA;AALA,GAHA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,iBAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,+BAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,iCAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OATA,EAaA;AACA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,iCAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAbA,EAiBA;AACA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,mCAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAjBA;AADA,KAAA;AAwBA,GAnCA;AAqCA,EAAA,WAAA,EAAA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,QAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA;AADA;AADA,GArCA;AA6CA,EAAA,OA7CA,qBA6CA;AACA,SAAA,EAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,SAAA,QAAA;AACA,GAhDA;AAkDA,EAAA,QAAA,oBACA,QAAA,CAAA,iBAAA,EAAA;AACA,IAAA,YAAA,EAAA,sBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,YAAA;AAAA;AADA,GAAA,CADA;AAIA,IAAA,EAAA,EAAA;AACA,MAAA,GADA,iBACA;AAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,MAAA;AAAA,OADA;AAEA,MAAA,GAFA,eAEA,KAFA,EAEA;AAAA,aAAA,KAAA,CAAA,KAAA;AAAA;AAFA;AAJA,IAlDA;AA4DA,EAAA,OAAA,oBACA,UAAA,CAAA,iBAAA,EAAA;AACA,IAAA,KAAA,EAAA,aADA;AAEA,IAAA,QAAA,EAAA,WAFA;AAGA,IAAA,OAAA,EAAA,UAHA;AAIA,IAAA,UAAA,EAAA;AAJA,GAAA,CADA;AA5DA,CAAA","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryText=\"computePrimaryText\"\n                :primaryAction=\"save\"\n                :primaryDisabled=\"computeDisabled\"\n                close\n        >\n            {{$tc('objects.directory.users.users', 1)}} |\n            {{computeTitle}}\n        </object-header>\n        <tabs-component\n                :tabs=\"tabs\"\n                :root=\"$options.name\"\n        >\n            <template slot=\"component\" slot-scope=\"props\">\n                <component\n                        class=\"tabs-inner-component\"\n                        :is=\"props.currentTab\"\n                        :v=\"$v\"\n                ></component>\n            </template>\n        </tabs-component>\n    </div>\n</template>\n\n<script>\n    import openedUserGeneral from './opened-user-general';\n    import openedUserRoles from './opened-user-roles';\n    import openedUserLicense from './opened-user-license';\n    import openedUserDevices from './opened-user-devices';\n    import openedUserVariables from './opened-user-variables';\n    import {required} from 'vuelidate/lib/validators';\n    import editComponentMixin from '@/mixins/editComponentMixin';\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: \"opened-user\",\n        mixins: [editComponentMixin],\n        components: {\n            openedUserGeneral,\n            openedUserRoles,\n            openedUserLicense,\n            openedUserDevices,\n            openedUserVariables,\n        },\n        data() {\n            return {\n                tabs: [\n                    {\n                        text: this.$t('objects.general'),\n                        value: 'general',\n                    },\n                    {\n                        text: this.$t('objects.directory.users.roles'),\n                        value: 'roles',\n                    },\n                    {\n                        text: this.$t('objects.directory.users.license'),\n                        value: 'license',\n                    },\n                    {\n                        text: this.$t('objects.directory.users.devices'),\n                        value: 'devices',\n                    },\n                    {\n                        text: this.$t('objects.directory.users.variables'),\n                        value: 'variables',\n                    }\n                ],\n            }\n        },\n\n        validations: {\n            itemInstance: {\n                username: {\n                    required\n                },\n            },\n        },\n\n        mounted() {\n            this.id = this.$route.params.id;\n            this.loadItem();\n        },\n\n        computed: {\n            ...mapState('directory/users', {\n                itemInstance: state => state.itemInstance,\n            }),\n            id: {\n                get() {return this.$store.state.directory.users.itemId},\n                set(value) {this.setId(value)}\n            }\n        },\n\n        methods: {\n            ...mapActions('directory/users', {\n                setId: 'SET_ITEM_ID',\n                loadItem: 'LOAD_ITEM',\n                addItem: 'ADD_ITEM',\n                updateItem: 'UPDATE_ITEM',\n            }),\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .value-pair {\n        @extend .object-input-grid;\n\n        align-items: center;\n        grid-template-columns: 1fr 1fr 24px;\n\n        .icon-icon_delete {\n            margin-bottom: 10px;\n            cursor: pointer;\n\n            &:hover {\n                color: #000;\n            }\n        }\n    }\n\n    .variables .icon-icon_plus {\n        cursor: pointer;\n\n        &:hover {\n            color: #000;\n        }\n    }\n</style>"],"sourceRoot":"src/components/directory/users"}]}