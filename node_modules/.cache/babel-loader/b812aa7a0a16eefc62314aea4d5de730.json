{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/contact-center/members/opened-queue-member.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/contact-center/members/opened-queue-member.vue","mtime":1578912593885},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport openedQueueMemberGeneral from \"./opened-queue-member-general\";\nimport openedQueueMemberCommunication from \"./opened-queue-member-communication\";\nimport openedQueueMemberVariables from \"./opened-queue-member-variables\";\nimport editComponentMixin from '@/mixins/editComponentMixin';\nimport { mapActions, mapState } from \"vuex\";\nimport { requiredArrayValue } from \"../../../utils/validators\";\nimport required from \"vuelidate/src/validators/required\";\nexport default {\n  name: \"opened-queue-member\",\n  mixins: [editComponentMixin],\n  components: {\n    openedQueueMemberGeneral: openedQueueMemberGeneral,\n    openedQueueMemberCommunication: openedQueueMemberCommunication,\n    openedQueueMemberVariables: openedQueueMemberVariables\n  },\n  data: function data() {\n    return {\n      tabs: [{\n        text: this.$t('objects.general'),\n        value: 'general'\n      }, {\n        text: this.$tc('objects.lookups.communications.communications', 1),\n        value: 'communication'\n      }, {\n        text: this.$tc('objects.ccenter.queues.variables', 2),\n        value: 'variables'\n      }]\n    };\n  },\n  validations: {\n    itemInstance: {\n      name: {\n        required: required\n      },\n      communications: {\n        requiredArrayValue: requiredArrayValue\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.setParentId(this.$route.params.queueId);\n    this.id = this.$route.params.id;\n    this.loadItem();\n  },\n  computed: _objectSpread({}, mapState('ccenter/queues/members', {\n    itemInstance: function itemInstance(state) {\n      return state.itemInstance;\n    }\n  }), {\n    id: {\n      get: function get() {\n        return this.$store.state.ccenter.queues.members.itemId;\n      },\n      set: function set(value) {\n        this.setId(value);\n      }\n    }\n  }),\n  methods: _objectSpread({}, mapActions('ccenter/queues/members', {\n    setParentId: 'SET_PARENT_ITEM_ID',\n    setId: 'SET_ITEM_ID',\n    loadItem: 'LOAD_ITEM',\n    addItem: 'ADD_ITEM',\n    updateItem: 'UPDATE_ITEM'\n  }))\n};",{"version":3,"sources":["opened-queue-member.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAA,wBAAA;AACA,OAAA,8BAAA;AACA,OAAA,0BAAA;AACA,OAAA,kBAAA,MAAA,6BAAA;AACA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AACA,SAAA,kBAAA;AACA,OAAA,QAAA,MAAA,mCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAEA,EAAA,MAAA,EAAA,CAAA,kBAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,wBAAA,EAAA,wBADA;AAEA,IAAA,8BAAA,EAAA,8BAFA;AAGA,IAAA,0BAAA,EAAA;AAHA,GAHA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,iBAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,IAAA,EAAA,KAAA,GAAA,CAAA,+CAAA,EAAA,CAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,IAAA,EAAA,KAAA,GAAA,CAAA,kCAAA,EAAA,CAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OATA;AADA,KAAA;AAgBA,GA1BA;AA4BA,EAAA,WAAA,EAAA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA,OADA;AAIA,MAAA,cAAA,EAAA;AACA,QAAA,kBAAA,EAAA;AADA;AAJA;AADA,GA5BA;AAuCA,EAAA,OAvCA,qBAuCA;AACA,SAAA,WAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,OAAA;AACA,SAAA,EAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,SAAA,QAAA;AACA,GA3CA;AA6CA,EAAA,QAAA,oBACA,QAAA,CAAA,wBAAA,EAAA;AACA,IAAA,YAAA,EAAA,sBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,YAAA;AAAA;AADA,GAAA,CADA;AAIA,IAAA,EAAA,EAAA;AACA,MAAA,GADA,iBACA;AAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA;AAAA,OADA;AAEA,MAAA,GAFA,eAEA,KAFA,EAEA;AAAA,aAAA,KAAA,CAAA,KAAA;AAAA;AAFA;AAJA,IA7CA;AAuDA,EAAA,OAAA,oBACA,UAAA,CAAA,wBAAA,EAAA;AACA,IAAA,WAAA,EAAA,oBADA;AAEA,IAAA,KAAA,EAAA,aAFA;AAGA,IAAA,QAAA,EAAA,WAHA;AAIA,IAAA,OAAA,EAAA,UAJA;AAKA,IAAA,UAAA,EAAA;AALA,GAAA,CADA;AAvDA,CAAA","sourcesContent":["<template>\n    <div>\n        <object-header\n                :primaryText=\"computePrimaryText\"\n                :primaryAction=\"save\"\n                :primaryDisabled=\"computeDisabled\"\n                close\n        >\n            {{$tc('objects.ccenter.members.members', 1)}} |\n            {{computeTitle}}\n        </object-header>\n        <tabs-component\n                :tabs=\"tabs\"\n                :root=\"$options.name\"\n        >\n            <template slot=\"component\" slot-scope=\"props\">\n                <component\n                        class=\"tabs-inner-component\"\n                        :is=\"props.currentTab\"\n                        :v=\"$v\"\n                ></component>\n            </template>\n        </tabs-component>\n    </div>\n</template>\n\n<script>\n    import openedQueueMemberGeneral from './opened-queue-member-general';\n    import openedQueueMemberCommunication from './opened-queue-member-communication';\n    import openedQueueMemberVariables from './opened-queue-member-variables';\n    import editComponentMixin from '@/mixins/editComponentMixin';\n    import {mapActions, mapState} from \"vuex\";\n    import {requiredArrayValue} from \"../../../utils/validators\";\n    import required from \"vuelidate/src/validators/required\";\n\n    export default {\n        name: \"opened-queue-member\",\n        mixins: [editComponentMixin],\n        components: {\n            openedQueueMemberGeneral,\n            openedQueueMemberCommunication,\n            openedQueueMemberVariables,\n        },\n\n        data() {\n            return {\n                tabs: [\n                    {\n                        text: this.$t('objects.general'),\n                        value: 'general',\n                    },\n                    {\n                        text: this.$tc('objects.lookups.communications.communications', 1),\n                        value: 'communication',\n                    },\n                    {\n                        text: this.$tc('objects.ccenter.queues.variables', 2),\n                        value: 'variables',\n                    },\n                ],\n            }\n        },\n\n        validations: {\n            itemInstance: {\n                name: {\n                    required\n                },\n                communications: {\n                    requiredArrayValue\n                }\n            }\n        },\n\n        mounted() {\n            this.setParentId(this.$route.params.queueId);\n            this.id = this.$route.params.id;\n            this.loadItem();\n        },\n\n        computed: {\n            ...mapState('ccenter/queues/members', {\n                itemInstance: state => state.itemInstance,\n            }),\n            id: {\n                get() {return this.$store.state.ccenter.queues.members.itemId},\n                set(value) {this.setId(value)}\n            },\n        },\n\n        methods: {\n            ...mapActions('ccenter/queues/members', {\n                setParentId: 'SET_PARENT_ITEM_ID',\n                setId: 'SET_ITEM_ID',\n                loadItem: 'LOAD_ITEM',\n                addItem: 'ADD_ITEM',\n                updateItem: 'UPDATE_ITEM',\n            }),\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components/contact-center/members"}]}