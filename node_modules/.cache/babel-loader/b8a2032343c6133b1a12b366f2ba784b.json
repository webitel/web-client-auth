{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/mixins/editComponentMixin.js","dependencies":[{"path":"/home/dev/work/client-auth/src/mixins/editComponentMixin.js","mtime":1578657456698},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import objectHeader from \"../../src/components/object-utils/the-object-header\";\nimport formInput from '@/components/utils/form-input';\nimport expansionPanel from '@/components/utils/expansion-panel';\nimport dropdownSelect from '@/components/utils/dropdown-select';\nimport switcher from '@/components/utils/switcher';\nimport tableCheckbox from '@/components/utils/checkbox';\nimport hint from '@/components/utils/hint';\nimport tabs from '@/components/utils/tabs';\nimport validationMessage from '@/components/utils/validation-message';\nimport permissionsTab from \"../components/object-utils/utils/permissions-tab\";\nimport tabsComponent from '@/components/utils/tabs-component';\nimport tagsInput from '@/components/utils/tags-input';\nexport default {\n  components: {\n    objectHeader: objectHeader,\n    formInput: formInput,\n    expansionPanel: expansionPanel,\n    dropdownSelect: dropdownSelect,\n    validationMessage: validationMessage,\n    checkbox: tableCheckbox,\n    switcher: switcher,\n    hint: hint,\n    tabs: tabs,\n    tagsInput: tagsInput,\n    permissionsTab: permissionsTab,\n    tabsComponent: tabsComponent\n  },\n  data: function data() {\n    return {\n      dropdownOptionsList: []\n    };\n  },\n  methods: {\n    save: function save() {\n      var invalid = this.checkValidations();\n\n      if (!invalid) {\n        !this.id ? this.addItem() : this.updateItem();\n      }\n    },\n    checkValidations: function checkValidations() {\n      var validatedInstance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'itemInstance';\n      var v = this.$v ? this.$v : this.v;\n      v[validatedInstance].$touch(); // if its still pending or an error is returned do not submit\n\n      return v[validatedInstance].$pending || v[validatedInstance].$error;\n    },\n    close: function close() {\n      this.$router.go(-1);\n    },\n    closePopup: function closePopup() {\n      this.popupTriggerIf = false;\n      this.loadDataList();\n    }\n  },\n  computed: {\n    computePrimaryText: function computePrimaryText() {\n      // if it's a new item\n      // OR any fields have changed\n      return !this.id || this.itemInstance._dirty ? this.$t('objects.save') : this.$t('objects.saved');\n    },\n    computeDisabled: function computeDisabled() {\n      // if there's a validation problem\n      // OR it's edit and any fields haven't changed\n      return this.checkValidations() || !this.itemInstance._dirty && !!this.id;\n    },\n    computeTitle: function computeTitle() {\n      return this.$route.params.id && this.$route.params.id !== 'new' ? this.$t('objects.edit') : this.$t('objects.new');\n    }\n  }\n};",{"version":3,"sources":["/home/dev/work/client-auth/src/mixins/editComponentMixin.js"],"names":["objectHeader","formInput","expansionPanel","dropdownSelect","switcher","tableCheckbox","hint","tabs","validationMessage","permissionsTab","tabsComponent","tagsInput","components","checkbox","data","dropdownOptionsList","methods","save","invalid","checkValidations","id","addItem","updateItem","validatedInstance","v","$v","$touch","$pending","$error","close","$router","go","closePopup","popupTriggerIf","loadDataList","computed","computePrimaryText","itemInstance","_dirty","$t","computeDisabled","computeTitle","$route","params"],"mappings":"AAAA,OAAOA,YAAP;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,cAAP;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AAEA,eAAe;AACXC,EAAAA,UAAU,EAAE;AACRZ,IAAAA,YAAY,EAAZA,YADQ;AAERC,IAAAA,SAAS,EAATA,SAFQ;AAGRC,IAAAA,cAAc,EAAdA,cAHQ;AAIRC,IAAAA,cAAc,EAAdA,cAJQ;AAKRK,IAAAA,iBAAiB,EAAjBA,iBALQ;AAMRK,IAAAA,QAAQ,EAAER,aANF;AAORD,IAAAA,QAAQ,EAARA,QAPQ;AAQRE,IAAAA,IAAI,EAAJA,IARQ;AASRC,IAAAA,IAAI,EAAJA,IATQ;AAURI,IAAAA,SAAS,EAATA,SAVQ;AAWRF,IAAAA,cAAc,EAAdA,cAXQ;AAYRC,IAAAA,aAAa,EAAbA;AAZQ,GADD;AAgBXI,EAAAA,IAhBW,kBAgBJ;AACH,WAAO;AACHC,MAAAA,mBAAmB,EAAE;AADlB,KAAP;AAGH,GApBU;AAsBXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IADK,kBACE;AACH,UAAMC,OAAO,GAAG,KAAKC,gBAAL,EAAhB;;AACA,UAAI,CAACD,OAAL,EAAc;AACV,SAAC,KAAKE,EAAN,GAAW,KAAKC,OAAL,EAAX,GAA4B,KAAKC,UAAL,EAA5B;AACH;AACJ,KANI;AAQLH,IAAAA,gBARK,8BAQgD;AAAA,UAApCI,iBAAoC,uEAAhB,cAAgB;AACjD,UAAMC,CAAC,GAAG,KAAKC,EAAL,GAAU,KAAKA,EAAf,GAAoB,KAAKD,CAAnC;AACAA,MAAAA,CAAC,CAACD,iBAAD,CAAD,CAAqBG,MAArB,GAFiD,CAGjD;;AACA,aAAOF,CAAC,CAACD,iBAAD,CAAD,CAAqBI,QAArB,IACHH,CAAC,CAACD,iBAAD,CAAD,CAAqBK,MADzB;AAEH,KAdI;AAgBLC,IAAAA,KAhBK,mBAgBG;AACJ,WAAKC,OAAL,CAAaC,EAAb,CAAgB,CAAC,CAAjB;AACH,KAlBI;AAoBLC,IAAAA,UApBK,wBAoBQ;AACT,WAAKC,cAAL,GAAsB,KAAtB;AACA,WAAKC,YAAL;AACH;AAvBI,GAtBE;AAgDXC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,kBADM,gCACe;AACjB;AACA;AACA,aAAO,CAAC,KAAKhB,EAAN,IAAY,KAAKiB,YAAL,CAAkBC,MAA9B,GACH,KAAKC,EAAL,CAAQ,cAAR,CADG,GACuB,KAAKA,EAAL,CAAQ,eAAR,CAD9B;AAEH,KANK;AAQNC,IAAAA,eARM,6BAQY;AACd;AACA;AACA,aAAO,KAAKrB,gBAAL,MAA4B,CAAC,KAAKkB,YAAL,CAAkBC,MAAnB,IAA6B,CAAC,CAAC,KAAKlB,EAAvE;AACH,KAZK;AAcNqB,IAAAA,YAdM,0BAcS;AACX,aAAO,KAAKC,MAAL,CAAYC,MAAZ,CAAmBvB,EAAnB,IAA0B,KAAKsB,MAAL,CAAYC,MAAZ,CAAmBvB,EAAnB,KAA0B,KAApD,GACD,KAAKmB,EAAL,CAAQ,cAAR,CADC,GACyB,KAAKA,EAAL,CAAQ,aAAR,CADhC;AAEH;AAjBK;AAhDC,CAAf","sourcesContent":["import objectHeader from '../../src/components/object-utils/the-object-header';\nimport formInput from '@/components/utils/form-input';\nimport expansionPanel from '@/components/utils/expansion-panel';\nimport dropdownSelect from '@/components/utils/dropdown-select';\nimport switcher from '@/components/utils/switcher';\nimport tableCheckbox from '@/components/utils/checkbox';\nimport hint from '@/components/utils/hint';\nimport tabs from '@/components/utils/tabs';\nimport validationMessage from '@/components/utils/validation-message';\nimport permissionsTab from '../components/object-utils/utils/permissions-tab';\nimport tabsComponent from '@/components/utils/tabs-component';\nimport tagsInput from '@/components/utils/tags-input';\n\nexport default {\n    components: {\n        objectHeader,\n        formInput,\n        expansionPanel,\n        dropdownSelect,\n        validationMessage,\n        checkbox: tableCheckbox,\n        switcher,\n        hint,\n        tabs,\n        tagsInput,\n        permissionsTab,\n        tabsComponent,\n    },\n\n    data() {\n        return {\n            dropdownOptionsList: [],\n        }\n    },\n\n    methods: {\n        save() {\n            const invalid = this.checkValidations();\n            if (!invalid) {\n                !this.id ? this.addItem() : this.updateItem();\n            }\n        },\n\n        checkValidations(validatedInstance = 'itemInstance') {\n            const v = this.$v ? this.$v : this.v;\n            v[validatedInstance].$touch();\n            // if its still pending or an error is returned do not submit\n            return v[validatedInstance].$pending ||\n                v[validatedInstance].$error;\n        },\n\n        close() {\n            this.$router.go(-1);\n        },\n\n        closePopup() {\n            this.popupTriggerIf = false;\n            this.loadDataList();\n        },\n    },\n\n    computed: {\n        computePrimaryText() {\n            // if it's a new item\n            // OR any fields have changed\n            return !this.id || this.itemInstance._dirty ?\n                this.$t('objects.save') : this.$t('objects.saved');\n        },\n\n        computeDisabled() {\n            // if there's a validation problem\n            // OR it's edit and any fields haven't changed\n            return this.checkValidations() || (!this.itemInstance._dirty && !!this.id);\n        },\n\n        computeTitle() {\n            return this.$route.params.id &&  this.$route.params.id !== 'new'\n                ? this.$t('objects.edit') : this.$t('objects.new');\n        },\n    },\n}"]}]}