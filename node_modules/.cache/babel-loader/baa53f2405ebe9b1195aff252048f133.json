{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/auth/the-register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/auth/the-register.vue","mtime":1582712760906},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { sameAs } from 'vuelidate/lib/validators';\nimport formInput from \"../utils/form-input\";\nimport btn from \"../utils/btn\";\nimport { mapActions } from \"vuex\";\nexport default {\n  name: 'the-register',\n  components: {\n    formInput: formInput,\n    btn: btn\n  },\n  props: {\n    v: {\n      type: Object\n    }\n  },\n  data: function data() {\n    return {\n      confirmPassword: '12qwaszx'\n    };\n  },\n  validations: {\n    confirmPassword: {\n      sameAs: sameAs('password')\n    }\n  },\n  mounted: function mounted() {\n    this.resetState();\n  },\n  computed: {\n    username: {\n      get: function get() {\n        return this.$store.state.auth.username;\n      },\n      set: function set(value) {\n        this.setProp({\n          prop: 'username',\n          value: value\n        });\n      }\n    },\n    password: {\n      get: function get() {\n        return this.$store.state.auth.password;\n      },\n      set: function set(value) {\n        this.setProp({\n          prop: 'password',\n          value: value\n        });\n      }\n    },\n    certificate: {\n      get: function get() {\n        return this.$store.state.auth.certificate;\n      },\n      set: function set(value) {\n        this.setProp({\n          prop: 'certificate',\n          value: value\n        });\n      }\n    },\n    computeTitle: function computeTitle() {\n      return this.$route.query.reset ? this.$t('auth.registerReset') : this.$t('auth.register');\n    },\n    computeButton: function computeButton() {\n      return this.$route.query.reset ? this.$t('auth.resetSubmit') : this.$t('auth.registerSubmit');\n    },\n    computeDisabled: function computeDisabled() {\n      return this.checkValidations();\n    }\n  },\n  methods: _objectSpread({\n    checkValidations: function checkValidations() {\n      this.$v.$touch();\n      this.v.$touch(); // if its still pending or an error is returned do not submit\n\n      return this.$v.$pending || this.$v.$error || this.v.$pending || this.v.$error;\n    },\n    submit: function submit() {\n      var invalid = this.checkValidations();\n      if (!invalid) this.register();\n    }\n  }, mapActions('auth', {\n    register: 'REGISTER',\n    setProp: 'SET_PROPERTY',\n    resetState: 'RESET_STATE'\n  }))\n};",{"version":3,"sources":["the-register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,SAAA,MAAA,QAAA,0BAAA;AACA,OAAA,SAAA;AACA,OAAA,GAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,GAAA,EAAA;AAFA,GAFA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,CAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AADA,GAPA;AAaA,EAAA,IAbA,kBAaA;AACA,WAAA;AACA,MAAA,eAAA,EAAA;AADA,KAAA;AAGA,GAjBA;AAmBA,EAAA,WAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,MAAA,EAAA,MAAA,CAAA,UAAA;AADA;AADA,GAnBA;AAyBA,EAAA,OAzBA,qBAyBA;AACA,SAAA,UAAA;AACA,GA3BA;AA6BA,EAAA,QAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,OAAA,CAAA;AAAA,UAAA,IAAA,EAAA,UAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AACA;AANA,KADA;AASA,IAAA,QAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,OAAA,CAAA;AAAA,UAAA,IAAA,EAAA,UAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AACA;AANA,KATA;AAiBA,IAAA,WAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,WAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,OAAA,CAAA;AAAA,UAAA,IAAA,EAAA,aAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AACA;AANA,KAjBA;AA0BA,IAAA,YA1BA,0BA0BA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA,GAAA,KAAA,EAAA,CAAA,oBAAA,CAAA,GAAA,KAAA,EAAA,CAAA,eAAA,CAAA;AACA,KA5BA;AA6BA,IAAA,aA7BA,2BA6BA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA,GAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,KAAA,EAAA,CAAA,qBAAA,CAAA;AACA,KA/BA;AAgCA,IAAA,eAhCA,6BAgCA;AACA,aAAA,KAAA,gBAAA,EAAA;AACA;AAlCA,GA7BA;AAkEA,EAAA,OAAA;AACA,IAAA,gBADA,8BACA;AACA,WAAA,EAAA,CAAA,MAAA;AACA,WAAA,CAAA,CAAA,MAAA,GAFA,CAGA;;AACA,aAAA,KAAA,EAAA,CAAA,QAAA,IAAA,KAAA,EAAA,CAAA,MAAA,IACA,KAAA,CAAA,CAAA,QADA,IACA,KAAA,CAAA,CAAA,MADA;AAEA,KAPA;AASA,IAAA,MATA,oBASA;AACA,UAAA,OAAA,GAAA,KAAA,gBAAA,EAAA;AACA,UAAA,CAAA,OAAA,EAAA,KAAA,QAAA;AAEA;AAbA,KAeA,UAAA,CAAA,MAAA,EAAA;AACA,IAAA,QAAA,EAAA,UADA;AAEA,IAAA,OAAA,EAAA,cAFA;AAGA,IAAA,UAAA,EAAA;AAHA,GAAA,CAfA;AAlEA,CAAA","sourcesContent":["<template>\n    <form\n            class=\"auth__form\"\n            @submit.prevent=\"submit\"\n    >\n        <form-input\n                v-model.trim=\"username\"\n                :label=\"$t('auth.user')\"\n                :v=\"v.username\"\n        ></form-input>\n\n        <form-input\n                class=\"form__input\"\n                v-model.trim=\"password\"\n                :label=\"$t('auth.password')\"\n                :v=\"v.password\"\n                :type=\"'password'\"\n        ></form-input>\n\n        <form-input\n                v-model.trim=\"confirmPassword\"\n                :label=\"$t('auth.confirmPassword')\"\n                :v=\"$v.confirmPassword\"\n                :type=\"'password'\"\n        ></form-input>\n\n        <form-input\n                v-model.trim=\"certificate\"\n                :label=\"$t('auth.key')\"\n                :v=\"v.certificate\"\n        ></form-input>\n\n        <btn\n                class=\"btn form__button\"\n                type=\"submit\"\n                :disabled=\"computeDisabled\"\n        >\n            {{computeButton}}\n        </btn>\n    </form>\n</template>\n\n<script>\n    import {sameAs} from 'vuelidate/lib/validators';\n    import formInput from '../utils/form-input';\n    import btn from '../utils/btn';\n    import {mapActions} from \"vuex\";\n\n    export default {\n        name: 'the-register',\n        components: {\n            formInput,\n            btn,\n        },\n\n        props: {\n            v: {\n                type: Object,\n            }\n        },\n\n        data() {\n            return {\n                confirmPassword: '12qwaszx',\n            };\n        },\n\n        validations: {\n            confirmPassword: {\n                sameAs: sameAs('password'),\n            },\n        },\n\n        mounted() {\n            this.resetState();\n        },\n\n        computed: {\n            username: {\n                get() {\n                    return this.$store.state.auth.username\n                },\n                set(value) {\n                    this.setProp({prop: 'username', value})\n                }\n            },\n            password: {\n                get() {\n                    return this.$store.state.auth.password\n                },\n                set(value) {\n                    this.setProp({prop: 'password', value})\n                }\n            },\n            certificate: {\n                get() {\n                    return this.$store.state.auth.certificate\n                },\n                set(value) {\n                    this.setProp({prop: 'certificate', value})\n                }\n            },\n\n            computeTitle() {\n                return this.$route.query.reset ? this.$t('auth.registerReset') : this.$t('auth.register');\n            },\n            computeButton() {\n                return this.$route.query.reset ? this.$t('auth.resetSubmit') : this.$t('auth.registerSubmit');\n            },\n            computeDisabled() {\n                return this.checkValidations();\n            }\n        },\n\n        methods: {\n            checkValidations() {\n                this.$v.$touch();\n                this.v.$touch();\n                // if its still pending or an error is returned do not submit\n                return this.$v.$pending || this.$v.$error ||\n                    this.v.$pending || this.v.$error;\n            },\n\n            submit() {\n                const invalid = this.checkValidations();\n                if(!invalid) this.register();\n\n            },\n\n            ...mapActions('auth', {\n                register: 'REGISTER',\n                setProp: 'SET_PROPERTY',\n                resetState: 'RESET_STATE',\n            }),\n        },\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"../../assets/css/auth/auth\";\n</style>\n"],"sourceRoot":"src/components/auth"}]}