{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/utils/radio-button.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/utils/radio-button.vue","mtime":1573727644337},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"radio-button\",\n  props: {\n    value: {\n      type: String,\n      required: true\n    },\n    option: {\n      type: String,\n      required: true\n    },\n    // may be a string, or object with true/false values\n    label: {}\n  },\n  methods: {\n    changeValue: function changeValue() {\n      this.$emit('input', this.option);\n    }\n  },\n  computed: {\n    computeLabel: function computeLabel() {\n      if (this.label) {\n        return this.label[this.value] || this.label;\n      }\n\n      return '';\n    }\n  }\n};",{"version":3,"sources":["radio-button.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAMA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KANA;AAUA;AACA,IAAA,KAAA,EAAA;AAXA,GAFA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,MAAA;AACA;AAHA,GAfA;AAoBA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,UAAA,KAAA,KAAA,EAAA;AACA,eAAA,KAAA,KAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA;AACA;;AACA,aAAA,EAAA;AAEA;AAPA;AApBA,CAAA","sourcesContent":["<template>\n    <label\n            class=\"radio-button-label\"\n            @click.prevent=\"changeValue\"\n    >\n        <input\n                type=\"checkbox\"\n                :checked=\"value === option\"\n        >\n        <span class=\"radio-button\"></span>\n        {{computeLabel}}\n    </label>\n</template>\n\n<script>\n    export default {\n        name: \"radio-button\",\n        props: {\n            value: {\n                type: String,\n                required: true\n            },\n\n            option: {\n                type: String,\n                required: true,\n            },\n            // may be a string, or object with true/false values\n            label: {},\n        },\n        methods: {\n            changeValue() {\n                this.$emit('input', this.option);\n            }\n        },\n        computed: {\n            computeLabel() {\n                if (this.label) {\n                    return this.label[this.value] || this.label;\n                }\n                return ''\n\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    $radio-button-color: rgba(0, 0, 0, 0.3);\n\n    /* Customize the label (the container) */\n    .radio-button-label {\n        display: block;\n        position: relative;\n        height: 24px;\n        min-width: 24px;\n        padding-left: 32px;\n        cursor: pointer;\n        user-select: none;\n    }\n\n    /* Hide the browser's default radio button */\n    .radio-button-label input {\n        position: absolute;\n        opacity: 0;\n        height: 0;\n        width: 0;\n        pointer-events: none;\n    }\n\n    /* Create a custom radio button */\n    .radio-button {\n        position: absolute;\n        //bottom: -2px;\n        left: 0;\n        height: 18px;\n        width: 18px;\n        border: 2px solid $radio-button-color;\n        background-color: #fff;\n        border-radius: 50%;\n        transition: $transition;\n    }\n\n    .radio-button-label:hover input ~ .radio-button,\n    .radio-button-label input:checked ~ .radio-button {\n        border-color: $accent-color;\n    }\n\n    /* Create the indicator (the dot/circle - hidden when not checked) */\n    .radio-button:after {\n        content: \"\";\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: 6px;\n        height: 6px;\n        transform: translate(-50%, -50%);\n        border-radius: 50%;\n        transition: $transition;\n        opacity: 0;\n    }\n\n    /* Show the indicator (dot/circle) when checked */\n    .radio-button-label input:checked ~ .radio-button:after {\n        opacity: 1;\n    }\n\n    /* Style the indicator (dot/circle) */\n    .radio-button-label .radio-button:after {\n        background: $accent-color;\n    }\n</style>"],"sourceRoot":"src/components/utils"}]}