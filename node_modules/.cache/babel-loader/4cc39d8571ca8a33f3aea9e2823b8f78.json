{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/contact-center/resourceGroups/resourceGroups.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/contact-center/resourceGroups/resourceGroups.js","mtime":1580998788016},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../../instance\";\nimport configuration from \"../../openAPIConfig\";\nimport sanitizer from \"../../utils/sanitizer\";\nimport { OutboundResourceGroupServiceApiFactory } from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport { coerceObjectPermissionsResponse } from \"../../permissions/objects/objects\";\nimport deepCopy from 'deep-copy';\nimport store from \"../../../store/store\";\nvar resGrService = new OutboundResourceGroupServiceApiFactory(configuration, '', instance);\nvar BASE_URL = '/call_center/resource_group';\nvar fieldsToSend = ['domainId', 'name', 'description', 'strategy', 'communication', 'time'];\nexport var getResGroupList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var page,\n        size,\n        search,\n        domainId,\n        defaultObject,\n        response,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;\n            size = _args.length > 1 && _args[1] !== undefined ? _args[1] : 10;\n            search = _args.length > 2 ? _args[2] : undefined;\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              _isSelected: false,\n              name: '',\n              strategy: '',\n              description: '',\n              communication: {\n                id: 0\n              },\n              id: 0\n            };\n            if (search && search.slice(-1) !== '*') search += '*';\n            _context.prev = 6;\n            _context.next = 9;\n            return resGrService.searchOutboundResourceGroup(page, size, search, domainId);\n\n          case 9:\n            response = _context.sent;\n\n            if (!response.items) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.items.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", []);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            throw _context.t0;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function getResGroupList() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getResGroup =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(id) {\n    var domainId, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              name: '',\n              strategy: '',\n              description: '',\n              communication: {\n                id: 0\n              },\n              time: [{\n                start: 0,\n                finish: 0\n              }],\n              id: 0,\n              _dirty: false\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return resGrService.readOutboundResourceGroup(id, domainId);\n\n          case 5:\n            response = _context2.sent;\n            response.time = response.time.map(function (range) {\n              return {\n                start: range.startTimeOfDay || 0,\n                end: range.endTimeOfDay || 0\n              };\n            });\n            return _context2.abrupt(\"return\", _objectSpread({}, defaultObject, {}, response));\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](2);\n            throw _context2.t0;\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 10]]);\n  }));\n\n  return function getResGroup(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport function addResGroup(_x2) {\n  return _addResGroup.apply(this, arguments);\n}\n\nfunction _addResGroup() {\n  _addResGroup = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(item) {\n    var itemCopy, response;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.time = itemCopy.time.map(function (range) {\n              return {\n                startTimeOfDay: range.start,\n                endTimeOfDay: range.end\n              };\n            });\n            sanitizer(itemCopy, fieldsToSend);\n            _context5.prev = 4;\n            _context5.next = 7;\n            return resGrService.createOutboundResourceGroup(itemCopy);\n\n          case 7:\n            response = _context5.sent;\n            eventBus.$emit('notificationInfo', 'Sucessfully added');\n            return _context5.abrupt(\"return\", response.id);\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](4);\n            throw _context5.t0;\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[4, 12]]);\n  }));\n  return _addResGroup.apply(this, arguments);\n}\n\nexport function updateResGroup(_x3, _x4) {\n  return _updateResGroup.apply(this, arguments);\n}\n\nfunction _updateResGroup() {\n  _updateResGroup = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(id, item) {\n    var itemCopy;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.time = itemCopy.time.map(function (range) {\n              return {\n                startTimeOfDay: range.start,\n                endTimeOfDay: range.end\n              };\n            });\n            sanitizer(itemCopy, fieldsToSend);\n            _context6.prev = 4;\n            _context6.next = 7;\n            return resGrService.updateOutboundResourceGroup(id, itemCopy);\n\n          case 7:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context6.next = 13;\n            break;\n\n          case 10:\n            _context6.prev = 10;\n            _context6.t0 = _context6[\"catch\"](4);\n            throw _context6.t0;\n\n          case 13:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[4, 10]]);\n  }));\n  return _updateResGroup.apply(this, arguments);\n}\n\nexport function deleteResGroup(_x5) {\n  return _deleteResGroup.apply(this, arguments);\n}\n\nfunction _deleteResGroup() {\n  _deleteResGroup = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(id) {\n    var domainId;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            _context7.prev = 1;\n            _context7.next = 4;\n            return resGrService.deleteOutboundResourceGroup(id, domainId);\n\n          case 4:\n            _context7.next = 9;\n            break;\n\n          case 6:\n            _context7.prev = 6;\n            _context7.t0 = _context7[\"catch\"](1);\n            throw _context7.t0;\n\n          case 9:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 6]]);\n  }));\n  return _deleteResGroup.apply(this, arguments);\n}\n\nexport var getResGroupPermissions =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(id) {\n    var page,\n        size,\n        search,\n        url,\n        response,\n        _args3 = arguments;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            page = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : 0;\n            size = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 10;\n            search = _args3.length > 3 ? _args3[3] : undefined;\n            // let url = BASE_URL + `?page=${page}size=${size}`;\n            url = BASE_URL + '/' + id + '/acl' + \"?size=\".concat(size);\n            if (search) url += \"&name=\".concat(search, \"*\");\n            _context3.prev = 5;\n            _context3.next = 8;\n            return instance.get(url);\n\n          case 8:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", coerceObjectPermissionsResponse(response));\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](5);\n            throw _context3.t0;\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[5, 12]]);\n  }));\n\n  return function getResGroupPermissions(_x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var patchResGroupPermissions =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(id, item) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            url = BASE_URL + '/' + id + '/acl';\n            _context4.prev = 1;\n            _context4.next = 4;\n            return instance.patch(url, {\n              changes: item\n            });\n\n          case 4:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context4.next = 10;\n            break;\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](1);\n            throw _context4.t0;\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 7]]);\n  }));\n\n  return function patchResGroupPermissions(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/contact-center/resourceGroups/resourceGroups.js"],"names":["instance","configuration","sanitizer","OutboundResourceGroupServiceApiFactory","eventBus","coerceObjectPermissionsResponse","deepCopy","store","resGrService","BASE_URL","fieldsToSend","getResGroupList","page","size","search","domainId","state","userinfo","undefined","defaultObject","_isSelected","name","strategy","description","communication","id","slice","searchOutboundResourceGroup","response","items","map","item","getResGroup","time","start","finish","_dirty","readOutboundResourceGroup","range","startTimeOfDay","end","endTimeOfDay","addResGroup","itemCopy","createOutboundResourceGroup","$emit","updateResGroup","updateOutboundResourceGroup","deleteResGroup","deleteOutboundResourceGroup","getResGroupPermissions","url","get","patchResGroupPermissions","patch","changes"],"mappings":"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","sourcesContent":["import instance from '../../instance';\nimport configuration from '../../openAPIConfig';\nimport sanitizer from '../../utils/sanitizer';\nimport {OutboundResourceGroupServiceApiFactory} from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport {coerceObjectPermissionsResponse} from \"../../permissions/objects/objects\";\nimport deepCopy from 'deep-copy';\nimport store from '../../../store/store';\n\nconst resGrService = new OutboundResourceGroupServiceApiFactory\n(configuration, '', instance);\n\nconst BASE_URL = '/call_center/resource_group';\nconst fieldsToSend = ['domainId', 'name', 'description', 'strategy', 'communication', 'time'];\n\nexport const getResGroupList = async (page = 0, size = 10, search) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        _isSelected: false,\n        name: '',\n        strategy: '',\n        description: '',\n        communication: {id: 0},\n        id: 0,\n    };\n    if(search && search.slice(-1) !== '*') search += '*';\n\n    try {\n        const response = await resGrService.searchOutboundResourceGroup(page, size, search, domainId);\n        if (response.items) {\n            return response.items.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return [];\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getResGroup = async (id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        name: '',\n        strategy: '',\n        description: '',\n        communication: {id: 0},\n        time: [\n            {\n                start: 0,\n                finish: 0,\n            }\n        ],\n        id: 0,\n        _dirty: false,\n    };\n    try {\n        const response = await resGrService.readOutboundResourceGroup(id, domainId);\n        response.time = response.time.map(range => {\n            return {\n                start: range.startTimeOfDay || 0,\n                end: range.endTimeOfDay || 0,\n            }\n        });\n\n        return {...defaultObject, ...response};\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport async function addResGroup(item) {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.time = itemCopy.time.map(range => {\n        return {\n            startTimeOfDay: range.start,\n            endTimeOfDay: range.end,\n        }\n    });\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        const response = await resGrService.createOutboundResourceGroup(itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully added');\n        return response.id;\n    } catch (err) {\n        throw err;\n    }\n}\n\nexport async function updateResGroup(id, item) {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.time = itemCopy.time.map(range => {\n        return {\n            startTimeOfDay: range.start,\n            endTimeOfDay: range.end,\n        }\n    });\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        await resGrService.updateOutboundResourceGroup(id, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n}\n\nexport async function deleteResGroup(id) {\n    const domainId = store.state.userinfo.domainId || undefined;\n    try {\n        await resGrService.deleteOutboundResourceGroup(id, domainId);\n    } catch (err) {\n        throw err;\n    }\n}\n\nexport const getResGroupPermissions = async (id, page = 0, size = 10, search) => {\n    // let url = BASE_URL + `?page=${page}size=${size}`;\n    let url = BASE_URL + '/' + id + '/acl' + `?size=${size}`;\n    if (search) url += `&name=${search}*`;\n    try {\n        const response = await instance.get(url);\n        return coerceObjectPermissionsResponse(response);\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const patchResGroupPermissions = async (id, item) => {\n    const url = BASE_URL + '/' + id + '/acl';\n\n    try {\n        await instance.patch(url, {changes: item});\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (error) {\n        throw error;\n    }\n};"]}]}