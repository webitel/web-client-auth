{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/utils/tabs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/utils/tabs.vue","mtime":1581346025896},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"tabs\",\n  props: {\n    currentTab: {\n      type: Object,\n      required: true\n    },\n    tabs: {\n      type: Array,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      activeLineWidth: 0,\n      activeLineOffset: 0\n    };\n  },\n  methods: {\n    handleClick: function handleClick(value) {\n      this.$emit('change', value);\n      this.moveActiveLine(value);\n    },\n    moveActiveLine: function moveActiveLine(newValue) {\n      if (!this.currentTab) return;\n      if (!this.$refs || !this.$refs[newValue] || !this.$refs[newValue][0]) return;\n      var element = this.$refs[newValue][0];\n      this.activeLineWidth = element.clientWidth;\n      this.activeLineOffset = element.offsetLeft;\n    }\n  }\n};",{"version":3,"sources":["tabs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA;AALA,GAFA;AAaA,EAAA,IAbA,kBAaA;AACA,WAAA;AACA,MAAA,eAAA,EAAA,CADA;AAEA,MAAA,gBAAA,EAAA;AAFA,KAAA;AAIA,GAlBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,KADA,EACA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA;AACA,WAAA,cAAA,CAAA,KAAA;AACA,KAJA;AAMA,IAAA,cANA,0BAMA,QANA,EAMA;AACA,UAAA,CAAA,KAAA,UAAA,EAAA;AACA,UAAA,CAAA,KAAA,KAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AACA,UAAA,OAAA,GAAA,KAAA,KAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AACA,WAAA,eAAA,GAAA,OAAA,CAAA,WAAA;AACA,WAAA,gBAAA,GAAA,OAAA,CAAA,UAAA;AACA;AAZA;AApBA,CAAA","sourcesContent":["<template>\n    <nav class=\"tabs\">\n        <button\n                class=\"tab__item\"\n                :class=\"{'active': tab.value === currentTab.value}\"\n                v-for=\"tab in tabs\"\n                type=\"button\"\n                :value=\"tab.text\"\n                @click=\"handleClick(tab)\"\n        >\n            {{tab.text}}\n        </button>\n\n\n        <div class=\"tabs__underline\">\n            <div\n                    class=\"tabs__underline__highlight\"\n                    :style=\"{ width: `${activeLineWidth}px`,\n                transform: `translateX(${activeLineOffset}px)` }\"\n            ></div>\n        </div>\n    </nav>\n</template>\n\n<script>\n    export default {\n        name: \"tabs\",\n        props: {\n            currentTab: {\n                type: Object,\n                required: true,\n            },\n            tabs: {\n                type: Array,\n                required: true,\n            },\n        },\n\n        data() {\n            return {\n                activeLineWidth: 0,\n                activeLineOffset: 0\n            }\n        },\n\n        methods: {\n            handleClick(value) {\n                this.$emit('change', value);\n                this.moveActiveLine(value);\n            },\n\n            moveActiveLine(newValue) {\n                if (!this.currentTab) return;\n                if (!this.$refs || !this.$refs[newValue] || !this.$refs[newValue][0]) return;\n                const element = this.$refs[newValue][0];\n                this.activeLineWidth = element.clientWidth;\n                this.activeLineOffset = element.offsetLeft;\n            },\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .tabs {\n        @extend .typo-tab;\n        display: block;\n        position: relative;\n        margin: 0 0 28px;\n        padding: 0 58px;\n\n        .tab__item {\n            display: inline-block;\n            margin: 0 48px 0  0;\n            padding: 10px 0 8px;\n            text-decoration: none;\n            color: #94979B;\n            border: none;\n            outline: none;\n            background-color: transparent;\n            border-bottom: 2px solid transparent;\n            cursor: pointer;\n            transition: $transition;\n\n            &.active, &:focus {\n                font-family: 'Montserrat Bold', monospace;\n                border-bottom: 2px solid $accent-color;\n                color: #000;\n            }\n\n            &:hover {\n                font-family: 'Montserrat Bold', monospace;\n                color: #000;\n            }\n\n            // disables bold font resize on hover\n            &:after {\n                display: block;\n                content: attr(value);\n                font-family: 'Montserrat Bold', monospace;\n                height: 0;\n                overflow: hidden;\n                visibility: hidden;\n            }\n        }\n\n\n        .tabs__underline {\n            position: absolute;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            height: 1px;\n            background: #EAE9E9;\n            z-index: 0;\n        }\n    }\n</style>"],"sourceRoot":"src/components/utils"}]}