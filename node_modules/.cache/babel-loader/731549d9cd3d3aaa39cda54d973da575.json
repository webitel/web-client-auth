{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/object-utils/utils/permissions-tab.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/object-utils/utils/permissions-tab.vue","mtime":1579686918306},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.find\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport checkbox from '@/components/utils/checkbox'; // import openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\n\nimport vuetable from 'vuetable-2/src/components/Vuetable';\nimport { getObject, updateObjectPermissions, getObjectPermissions } from \"../../../api/permissions/objects/objects\";\nimport { getRoleList } from \"../../../api/permissions/roles/roles\";\nimport dropdownSelect from '@/components/utils/dropdown-select';\nexport default {\n  name: \"permissions-tab\",\n  // mixins: [openedTabComponentMixin],\n  components: {\n    vuetable: vuetable,\n    checkbox: checkbox,\n    dropdownSelect: dropdownSelect\n  },\n  data: function data() {\n    return {\n      // vuetable prop\n      fields: [{\n        name: 'grantee',\n        title: this.$t('objects.name')\n      }, {\n        name: 'read',\n        title: this.$t('objects.read')\n      }, {\n        name: 'edit',\n        title: this.$t('objects.edit')\n      }, {\n        name: 'delete',\n        title: this.$t('objects.delete')\n      }],\n      dataList: [],\n      // list with all table data, contains user changes\n      initialDataList: [],\n      // list of initial table data, used for user changes segregation\n      changeAccessList: [],\n      // contains id's of grantee`s changed permissions\n      roleList: [] // list of all roles to add new. retrieves from roles GET request\n\n    };\n  },\n  mounted: function mounted() {\n    // get object permissions\n    this.loadDataList(this.id); // get all roles to choose which to add\n\n    this.loadRoleList();\n  },\n  methods: {\n    setNewGrantee: function setNewGrantee(newGrantee, rowIndex) {\n      this.dataList[rowIndex].grantee = newGrantee;\n      this.changeAccessList.push(newGrantee.id);\n    },\n    addTableItem: function addTableItem() {\n      this.dataList.unshift({\n        grantee: {\n          role: ''\n        },\n        access: {\n          c: false,\n          r: true,\n          u: false,\n          d: false\n        },\n        new: true\n      });\n    },\n    toggleDataProperty: function toggleDataProperty(newValue, operation, rowId) {\n      var _this = this;\n\n      // add grantee to changeList, if it have never changed\n      var isGranteeChanged = this.changeAccessList.includes(this.dataList[rowId].grantee.id);\n\n      if (!isGranteeChanged) {\n        this.changeAccessList.push(this.dataList[rowId].grantee.id);\n      } // if 'read' checkbox switches to false, make all operations false\n\n\n      if (operation === 'r' && this.dataList[rowId].access.r) {\n        Object.keys(this.dataList[rowId].access).map(function (item) {\n          _this.dataList[rowId].access[item] = false;\n        }); // else if another operation switches to true with unactive 'read', activate 'read' too\n      } else if (!this.dataList[rowId].access.r) {\n        this.dataList[rowId].access.r = true;\n      } // finally, toggle the value\n\n\n      this.dataList[rowId].access[operation] = newValue;\n    },\n    save: function () {\n      var _save = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var granteesToSend;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.changeAccessList.length !== 0)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                granteesToSend = []; // object with changes to patch\n\n                this.filterChanges(granteesToSend); // and send the array with changes\n                // catch statement prevents close()\n\n                _context.prev = 3;\n                _context.next = 6;\n                return updateObjectPermissions(this.id, granteesToSend);\n\n              case 6:\n                this.close();\n                _context.next = 11;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](3);\n\n              case 11:\n                _context.next = 14;\n                break;\n\n              case 13:\n                this.close();\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 9]]);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }(),\n    filterChanges: function filterChanges(granteesToSend) {\n      var _this2 = this;\n\n      // for each change\n      this.changeAccessList.forEach(function (changedGranteeId) {\n        // find changed grantee (by id)\n        var newGrantee = _this2.findGrateeById(changedGranteeId); // find initial grantee (by id)\n\n\n        var oldGrantee = _this2.findInitialGranteeById(changedGranteeId); // collect really changed operations (operation can be changed twice)\n\n\n        var changedOperations = _this2.collectChangedOperations(newGrantee, oldGrantee); // if there are any changes -- push them to array\n\n\n        if (changedOperations.length > 0) {\n          granteesToSend.push({\n            grantee_id: changedGranteeId,\n            access: changedOperations.join('')\n          });\n        }\n      });\n    },\n    findGrateeById: function findGrateeById(granteeId) {\n      return this.dataList.find(function (currentGrantee) {\n        return currentGrantee.grantee.id === granteeId;\n      });\n    },\n    findInitialGranteeById: function findInitialGranteeById(granteeId) {\n      return this.initialDataList.find(function (oldGrantee) {\n        return oldGrantee.grantee.id === granteeId;\n      });\n    },\n    collectChangedOperations: function collectChangedOperations(newGrantee, oldGrantee) {\n      var operations = ['c', 'r', 'u', 'd']; // array for operations iterations iteration\n\n      var changedOperations = []; // if there's old grantee\n\n      if (oldGrantee) {\n        operations.forEach(function (operation) {\n          if (oldGrantee.access[operation] !== newGrantee.access[operation]) {\n            changedOperations.push(operation);\n          }\n        }); // if there's new grantee,\n        // and he wasn't changed\n      } else if (newGrantee) {\n        operations.forEach(function (operation) {\n          if (newGrantee.access[operation]) {\n            changedOperations.push(operation);\n          }\n        });\n      }\n\n      return changedOperations;\n    },\n    // get all roles to choose which to add\n    loadRoleList: function () {\n      var _loadRoleList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getRoleList();\n\n              case 2:\n                response = _context2.sent;\n                this.roleList = _toConsumableArray(response);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadRoleList() {\n        return _loadRoleList.apply(this, arguments);\n      }\n\n      return loadRoleList;\n    }(),\n    // get object permissions\n    loadDataList: function () {\n      var _loadDataList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var id,\n            response,\n            _args3 = arguments;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                id = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : 10055;\n                _context3.next = 3;\n                return getObjectPermissions(id);\n\n              case 3:\n                response = _context3.sent;\n                this.dataList = _toConsumableArray(response);\n                this.initialDataList = JSON.parse(JSON.stringify(response));\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadDataList() {\n        return _loadDataList.apply(this, arguments);\n      }\n\n      return loadDataList;\n    }()\n  },\n  computed: {\n    computeAvailableGrantees: function computeAvailableGrantees() {\n      var _this3 = this;\n\n      // filter available grantees:\n      return this.roleList.filter(function (grantee) {\n        return !_this3.dataList.some(function (usedGrantee) {\n          return grantee.id === usedGrantee.grantee.id;\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["permissions-tab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA,OAAA,QAAA,MAAA,6BAAA,C,CACA;;AACA,OAAA,QAAA,MAAA,oCAAA;AACA,SAAA,SAAA,EAAA,uBAAA,EAAA,oBAAA;AACA,SAAA,WAAA;AACA,OAAA,cAAA,MAAA,oCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,QAAA,EAAA,QAAA;AAAA,IAAA,QAAA,EAAA,QAAA;AAAA,IAAA,cAAA,EAAA;AAAA,GAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA;AACA,MAAA,MAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,cAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,cAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,cAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,gBAAA;AAAA,OAJA,CAFA;AAQA,MAAA,QAAA,EAAA,EARA;AAQA;AACA,MAAA,eAAA,EAAA,EATA;AASA;AAEA,MAAA,gBAAA,EAAA,EAXA;AAWA;AACA,MAAA,QAAA,EAAA,EAZA,CAYA;;AAZA,KAAA;AAeA,GApBA;AAqBA,EAAA,OArBA,qBAqBA;AACA;AACA,SAAA,YAAA,CAAA,KAAA,EAAA,EAFA,CAIA;;AACA,SAAA,YAAA;AACA,GA3BA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,UADA,EACA,QADA,EACA;AACA,WAAA,QAAA,CAAA,QAAA,EAAA,OAAA,GAAA,UAAA;AACA,WAAA,gBAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AACA,KAJA;AAMA,IAAA,YANA,0BAMA;AACA,WAAA,QAAA,CAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAIA,QAAA,MAAA,EAAA;AACA,UAAA,CAAA,EAAA,KADA;AAEA,UAAA,CAAA,EAAA,IAFA;AAGA,UAAA,CAAA,EAAA,KAHA;AAIA,UAAA,CAAA,EAAA;AAJA,SAJA;AAUA,QAAA,GAAA,EAAA;AAVA,OAAA;AAYA,KAnBA;AAqBA,IAAA,kBArBA,8BAqBA,QArBA,EAqBA,SArBA,EAqBA,KArBA,EAqBA;AAAA;;AACA;AACA,UAAA,gBAAA,GAAA,KAAA,gBAAA,CAAA,QAAA,CAAA,KAAA,QAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,CAAA;;AAEA,UAAA,CAAA,gBAAA,EAAA;AACA,aAAA,gBAAA,CAAA,IAAA,CAAA,KAAA,QAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA;AACA,OANA,CAQA;;;AACA,UAAA,SAAA,KAAA,GAAA,IAAA,KAAA,QAAA,CAAA,KAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,KAAA,QAAA,CAAA,KAAA,EAAA,MAAA,EAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,KAAA,EAAA,MAAA,CAAA,IAAA,IAAA,KAAA;AACA,SAFA,EADA,CAIA;AACA,OALA,MAKA,IAAA,CAAA,KAAA,QAAA,CAAA,KAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,EAAA,MAAA,CAAA,CAAA,GAAA,IAAA;AACA,OAhBA,CAkBA;;;AACA,WAAA,QAAA,CAAA,KAAA,EAAA,MAAA,CAAA,SAAA,IAAA,QAAA;AACA,KAzCA;AA2CA,IAAA,IA3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA8CA,KAAA,gBAAA,CAAA,MAAA,KAAA,CA9CA;AAAA;AAAA;AAAA;;AAgDA,gBAAA,cAhDA,GAgDA,EAhDA,EAgDA;;AAEA,qBAAA,aAAA,CAAA,cAAA,EAlDA,CAoDA;AACA;;AArDA;AAAA;AAAA,uBAuDA,uBAAA,CAAA,KAAA,EAAA,EAAA,cAAA,CAvDA;;AAAA;AAwDA,qBAAA,KAAA;AAxDA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AA6DA,qBAAA,KAAA;;AA7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkEA,IAAA,aAlEA,yBAkEA,cAlEA,EAkEA;AAAA;;AACA;AACA,WAAA,gBAAA,CAAA,OAAA,CAAA,UAAA,gBAAA,EAAA;AAEA;AACA,YAAA,UAAA,GAAA,MAAA,CAAA,cAAA,CAAA,gBAAA,CAAA,CAHA,CAKA;;;AACA,YAAA,UAAA,GAAA,MAAA,CAAA,sBAAA,CAAA,gBAAA,CAAA,CANA,CAQA;;;AACA,YAAA,iBAAA,GAAA,MAAA,CAAA,wBAAA,CAAA,UAAA,EAAA,UAAA,CAAA,CATA,CAWA;;;AACA,YAAA,iBAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,UAAA,cAAA,CAAA,IAAA,CAAA;AACA,YAAA,UAAA,EAAA,gBADA;AAEA,YAAA,MAAA,EAAA,iBAAA,CAAA,IAAA,CAAA,EAAA;AAFA,WAAA;AAIA;AACA,OAlBA;AAmBA,KAvFA;AAyFA,IAAA,cAzFA,0BAyFA,SAzFA,EAyFA;AACA,aAAA,KAAA,QAAA,CAAA,IAAA,CAAA,UAAA,cAAA,EAAA;AACA,eAAA,cAAA,CAAA,OAAA,CAAA,EAAA,KAAA,SAAA;AACA,OAFA,CAAA;AAGA,KA7FA;AA+FA,IAAA,sBA/FA,kCA+FA,SA/FA,EA+FA;AACA,aAAA,KAAA,eAAA,CAAA,IAAA,CAAA,UAAA,UAAA,EAAA;AACA,eAAA,UAAA,CAAA,OAAA,CAAA,EAAA,KAAA,SAAA;AACA,OAFA,CAAA;AAGA,KAnGA;AAqGA,IAAA,wBArGA,oCAqGA,UArGA,EAqGA,UArGA,EAqGA;AACA,UAAA,UAAA,GAAA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA,CADA,CACA;;AAEA,UAAA,iBAAA,GAAA,EAAA,CAHA,CAKA;;AACA,UAAA,UAAA,EAAA;AACA,QAAA,UAAA,CAAA,OAAA,CAAA,UAAA,SAAA,EAAA;AACA,cAAA,UAAA,CAAA,MAAA,CAAA,SAAA,MAAA,UAAA,CAAA,MAAA,CAAA,SAAA,CAAA,EAAA;AACA,YAAA,iBAAA,CAAA,IAAA,CAAA,SAAA;AACA;AACA,SAJA,EADA,CAMA;AACA;AACA,OARA,MAQA,IAAA,UAAA,EAAA;AACA,QAAA,UAAA,CAAA,OAAA,CAAA,UAAA,SAAA,EAAA;AACA,cAAA,UAAA,CAAA,MAAA,CAAA,SAAA,CAAA,EAAA;AACA,YAAA,iBAAA,CAAA,IAAA,CAAA,SAAA;AACA;AACA,SAJA;AAKA;;AACA,aAAA,iBAAA;AACA,KA3HA;AA6HA;AACA,IAAA,YA9HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA+HA,WAAA,EA/HA;;AAAA;AA+HA,gBAAA,QA/HA;AAgIA,qBAAA,QAAA,sBAAA,QAAA;;AAhIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmIA;AACA,IAAA,YApIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoIA,gBAAA,EApIA,8DAoIA,KApIA;AAAA;AAAA,uBAqIA,oBAAA,CAAA,EAAA,CArIA;;AAAA;AAqIA,gBAAA,QArIA;AAsIA,qBAAA,QAAA,sBAAA,QAAA;AACA,qBAAA,eAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA;;AAvIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GA7BA;AAwKA,EAAA,QAAA,EAAA;AACA,IAAA,wBADA,sCACA;AAAA;;AACA;AACA,aAAA,KAAA,QAAA,CAAA,MAAA,CAAA,UAAA,OAAA,EAAA;AACA,eAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,WAAA,EAAA;AACA,iBAAA,OAAA,CAAA,EAAA,KAAA,WAAA,CAAA,OAAA,CAAA,EAAA;AACA,SAFA,CAAA;AAGA,OAJA,CAAA;AAKA;AARA;AAxKA,CAAA","sourcesContent":["<template>\n    <section class=\"object-content\">\n        <header class=\"content-header\">\n            <h3 class=\"content-title\">{{$t('objects.permissions.object.operations')}}</h3>\n            <i class=\"icon-icon_plus icon-action\" @click=\"addTableItem\"></i>\n        </header>\n\n        <vuetable\n                :api-mode=\"false\"\n                :fields=\"fields\"\n                :data=\"dataList\"\n        >\n\n            <template slot=\"grantee\" slot-scope=\"props\">\n                <!--                    if not new-->\n                <div v-if=\"!dataList[props.rowIndex].new\">\n                    {{dataList[props.rowIndex].grantee.name}}\n                </div>\n\n                <dropdown-select\n                        v-else\n                        class=\"inline-dropdown inline-dropdown__options-left\"\n                        :value=\"dataList[props.rowIndex].grantee\"\n                        :placeholder=\"$tc('objects.permissions.permissionsRole', 1)\"\n                        :options=\"computeAvailableGrantees\"\n                        @input=\"setNewGrantee($event, props.rowIndex)\"\n                ></dropdown-select>\n            </template>\n\n            <template slot=\"read\" slot-scope=\"props\">\n                <checkbox\n                        class=\"test__permissions-checkbox__r\"\n                        :value=\"dataList[props.rowIndex].access.r\"\n                        :label=\"$t('objects.allow')\"\n                        @toggleCheckbox=\"toggleDataProperty($event, 'r', props.rowIndex)\"\n                ></checkbox>\n            </template>\n\n            <template slot=\"edit\" slot-scope=\"props\">\n                <checkbox\n                        class=\"test__permissions-checkbox__u\"\n                        :value=\"dataList[props.rowIndex].access.u\"\n                        :label=\"$t('objects.allow')\"\n                        @toggleCheckbox=\"toggleDataProperty($event, 'u', props.rowIndex)\"\n                ></checkbox>\n            </template>\n\n            <template slot=\"delete\" slot-scope=\"props\">\n                <checkbox\n                        class=\"test__permissions-checkbox__d\"\n                        :value=\"dataList[props.rowIndex].access.d\"\n                        :label=\"$t('objects.allow')\"\n                        @toggleCheckbox=\"toggleDataProperty($event, 'd', props.rowIndex)\"\n                ></checkbox>\n            </template>\n        </vuetable>\n    </section>\n</template>\n\n<script>\n    import checkbox from '@/components/utils/checkbox';\n    // import openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\n    import vuetable from 'vuetable-2/src/components/Vuetable';\n    import {getObject, updateObjectPermissions, getObjectPermissions} from \"../../../api/permissions/objects/objects\";\n    import {getRoleList} from \"../../../api/permissions/roles/roles\";\n    import dropdownSelect from '@/components/utils/dropdown-select';\n\n    export default {\n        name: \"permissions-tab\",\n        // mixins: [openedTabComponentMixin],\n        components: {vuetable, checkbox, dropdownSelect},\n        data() {\n            return {\n                // vuetable prop\n                fields: [\n                    {name: 'grantee', title: this.$t('objects.name')},\n                    {name: 'read', title: this.$t('objects.read')},\n                    {name: 'edit', title: this.$t('objects.edit')},\n                    {name: 'delete', title: this.$t('objects.delete')},\n                ],\n                dataList: [], // list with all table data, contains user changes\n                initialDataList: [],  // list of initial table data, used for user changes segregation\n\n                changeAccessList: [], // contains id's of grantee`s changed permissions\n                roleList: [] // list of all roles to add new. retrieves from roles GET request\n\n            };\n        },\n        mounted() {\n            // get object permissions\n            this.loadDataList(this.id);\n\n            // get all roles to choose which to add\n            this.loadRoleList();\n        },\n\n        methods: {\n            setNewGrantee(newGrantee, rowIndex) {\n                this.dataList[rowIndex].grantee = newGrantee;\n                this.changeAccessList.push(newGrantee.id);\n            },\n\n            addTableItem() {\n                this.dataList.unshift({\n                    grantee: {\n                        role: '',\n                    },\n                    access: {\n                        c: false,\n                        r: true,\n                        u: false,\n                        d: false,\n                    },\n                    new: true\n                });\n            },\n\n            toggleDataProperty(newValue, operation, rowId) {\n                // add grantee to changeList, if it have never changed\n                const isGranteeChanged = this.changeAccessList.includes(this.dataList[rowId].grantee.id);\n\n                if (!isGranteeChanged) {\n                    this.changeAccessList.push(this.dataList[rowId].grantee.id);\n                }\n\n                // if 'read' checkbox switches to false, make all operations false\n                if (operation === 'r' && this.dataList[rowId].access.r) {\n                    Object.keys(this.dataList[rowId].access).map(item => {\n                        this.dataList[rowId].access[item] = false\n                    });\n                    // else if another operation switches to true with unactive 'read', activate 'read' too\n                } else if (!this.dataList[rowId].access.r) {\n                    this.dataList[rowId].access.r = true;\n                }\n\n                // finally, toggle the value\n                this.dataList[rowId].access[operation] = newValue;\n            },\n\n            async save() {\n                // if there are changes, process them\n                // if there aren't, or patch completed successfully, close page\n                if (this.changeAccessList.length !== 0) {\n\n                    const granteesToSend = []; // object with changes to patch\n\n                    this.filterChanges(granteesToSend);\n\n                    // and send the array with changes\n                    // catch statement prevents close()\n                    try {\n                        await updateObjectPermissions(this.id, granteesToSend);\n                        this.close();\n                    } catch (e) {\n                    }\n\n                } else {\n                    this.close();\n                }\n\n            },\n\n            filterChanges(granteesToSend) {\n                // for each change\n                this.changeAccessList.forEach(changedGranteeId => {\n\n                    // find changed grantee (by id)\n                    const newGrantee = this.findGrateeById(changedGranteeId);\n\n                    // find initial grantee (by id)\n                    const oldGrantee = this.findInitialGranteeById(changedGranteeId);\n\n                    // collect really changed operations (operation can be changed twice)\n                    const changedOperations = this.collectChangedOperations(newGrantee, oldGrantee);\n\n                    // if there are any changes -- push them to array\n                    if (changedOperations.length > 0) {\n                        granteesToSend.push({\n                            grantee_id: changedGranteeId,\n                            access: changedOperations.join('')\n                        });\n                    }\n                });\n            },\n\n            findGrateeById(granteeId) {\n                return this.dataList.find(currentGrantee => {\n                    return currentGrantee.grantee.id === granteeId;\n                });\n            },\n\n            findInitialGranteeById(granteeId) {\n                return this.initialDataList.find(oldGrantee => {\n                    return oldGrantee.grantee.id === granteeId;\n                });\n            },\n\n            collectChangedOperations(newGrantee, oldGrantee) {\n                const operations = ['c', 'r', 'u', 'd']; // array for operations iterations iteration\n\n                const changedOperations = [];\n\n                // if there's old grantee\n                if (oldGrantee) {\n                    operations.forEach(operation => {\n                        if (oldGrantee.access[operation] !== newGrantee.access[operation]) {\n                            changedOperations.push(operation);\n                        }\n                    });\n                    // if there's new grantee,\n                    // and he wasn't changed\n                } else if (newGrantee) {\n                    operations.forEach(operation => {\n                        if (newGrantee.access[operation]) {\n                            changedOperations.push(operation);\n                        }\n                    });\n                }\n                return changedOperations;\n            },\n\n            // get all roles to choose which to add\n            async loadRoleList() {\n                const response = await getRoleList();\n                this.roleList = [...response];\n            },\n\n            // get object permissions\n            async loadDataList(id = 10055) {\n                const response = await getObjectPermissions(id);\n                this.dataList = [...response];\n                this.initialDataList = JSON.parse(JSON.stringify(response));\n            }\n        },\n\n        computed: {\n            computeAvailableGrantees() {\n                // filter available grantees:\n                return this.roleList.filter(grantee => {\n                    return !this.dataList.some(usedGrantee => {\n                        return grantee.id === usedGrantee.grantee.id;\n                    });\n                });\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n    .vs__dropdown-toggle {\n        padding-left: 0 !important;\n    }\n</style>"],"sourceRoot":"src/components/object-utils/utils"}]}