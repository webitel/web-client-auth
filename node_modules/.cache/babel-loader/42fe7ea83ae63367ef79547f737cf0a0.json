{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/routing/dialplan/dialplan.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/routing/dialplan/dialplan.js","mtime":1580815301942},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../../instance\";\nimport configuration from \"../../openAPIConfig\";\nimport { RoutingOutboundCallServiceApiFactory } from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport sanitizer from \"../../utils/sanitizer\";\nimport deepCopy from 'deep-copy';\nimport store from \"../../../store/store\";\nvar dialplanService = new RoutingOutboundCallServiceApiFactory(configuration, '', instance);\nvar fieldsToSend = ['domainId', 'name', 'schema', 'pattern', 'description'];\nexport var getDialplanList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var page,\n        size,\n        search,\n        domainId,\n        defaultObject,\n        response,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;\n            size = _args.length > 1 && _args[1] !== undefined ? _args[1] : 10;\n            search = _args.length > 2 ? _args[2] : undefined;\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              disabled: false,\n              _isSelected: false\n            };\n            if (search && search.slice(-1) !== '*') search += '*';\n            _context.prev = 6;\n            _context.next = 9;\n            return dialplanService.searchRoutingOutboundCall(page, size, search, domainId);\n\n          case 9:\n            response = _context.sent;\n\n            if (!response.items) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.items.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", []);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            throw _context.t0;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function getDialplanList() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getDialplan =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(id) {\n    var domainId, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              _dirty: false\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return dialplanService.readRoutingOutboundCall(id, domainId);\n\n          case 5:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", _objectSpread({}, defaultObject, {}, response));\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            throw _context2.t0;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function getDialplan(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var addDialplan =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(item) {\n    var itemCopy, response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            sanitizer(itemCopy, fieldsToSend);\n            _context3.prev = 3;\n            _context3.next = 6;\n            return dialplanService.createRoutingOutboundCall(itemCopy);\n\n          case 6:\n            response = _context3.sent;\n            eventBus.$emit('notificationInfo', 'Sucessfully added');\n            return _context3.abrupt(\"return\", response.id);\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](3);\n            throw _context3.t0;\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 11]]);\n  }));\n\n  return function addDialplan(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var patchDialplan =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(id, item) {\n    var itemCopy;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            sanitizer(itemCopy, fieldsToSend);\n            _context4.prev = 3;\n            _context4.next = 6;\n            return dialplanService.patchRoutingOutboundCall(id, itemCopy);\n\n          case 6:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context4.next = 12;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](3);\n            throw _context4.t0;\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[3, 9]]);\n  }));\n\n  return function patchDialplan(_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var moveDialplan =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(fromId, toId) {\n    var domain_id;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            domain_id = store.state.userinfo.domainId || undefined;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return dialplanService.movePositionRoutingOutboundCall(fromId, toId, {\n              domain_id: domain_id\n            });\n\n          case 4:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context5.next = 10;\n            break;\n\n          case 7:\n            _context5.prev = 7;\n            _context5.t0 = _context5[\"catch\"](1);\n            throw _context5.t0;\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 7]]);\n  }));\n\n  return function moveDialplan(_x5, _x6) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var updateDialplan =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(id, item) {\n    var itemCopy;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            sanitizer(itemCopy, fieldsToSend);\n            _context6.prev = 3;\n            _context6.next = 6;\n            return dialplanService.updateRoutingOutboundCall(id, itemCopy);\n\n          case 6:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context6.next = 12;\n            break;\n\n          case 9:\n            _context6.prev = 9;\n            _context6.t0 = _context6[\"catch\"](3);\n            throw _context6.t0;\n\n          case 12:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[3, 9]]);\n  }));\n\n  return function updateDialplan(_x7, _x8) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var deleteDialplan =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(id) {\n    var domainId;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            _context7.prev = 1;\n            _context7.next = 4;\n            return dialplanService.deleteRoutingOutboundCall(id, domainId);\n\n          case 4:\n            _context7.next = 9;\n            break;\n\n          case 6:\n            _context7.prev = 6;\n            _context7.t0 = _context7[\"catch\"](1);\n            throw _context7.t0;\n\n          case 9:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 6]]);\n  }));\n\n  return function deleteDialplan(_x9) {\n    return _ref7.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/routing/dialplan/dialplan.js"],"names":["instance","configuration","RoutingOutboundCallServiceApiFactory","eventBus","sanitizer","deepCopy","store","dialplanService","fieldsToSend","getDialplanList","page","size","search","domainId","state","userinfo","undefined","defaultObject","disabled","_isSelected","slice","searchRoutingOutboundCall","response","items","map","item","getDialplan","id","_dirty","readRoutingOutboundCall","addDialplan","itemCopy","createRoutingOutboundCall","$emit","patchDialplan","patchRoutingOutboundCall","moveDialplan","fromId","toId","domain_id","movePositionRoutingOutboundCall","updateDialplan","updateRoutingOutboundCall","deleteDialplan","deleteRoutingOutboundCall"],"mappings":"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","sourcesContent":["import instance from '../../instance';\nimport configuration from '../../openAPIConfig';\nimport {RoutingOutboundCallServiceApiFactory} from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport sanitizer from \"../../utils/sanitizer\";\nimport deepCopy from 'deep-copy';\nimport store from '../../../store/store';\n\nconst dialplanService = new RoutingOutboundCallServiceApiFactory\n(configuration, '', instance);\n\nconst fieldsToSend = ['domainId', 'name', 'schema', 'pattern', 'description'];\n\nexport const getDialplanList = async (page = 0, size = 10, search) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        disabled: false,\n        _isSelected: false,\n    };\n    if(search && search.slice(-1) !== '*') search += '*';\n\n    try {\n        const response = await dialplanService.searchRoutingOutboundCall(page, size, search, domainId);\n        if (response.items) {\n            return response.items.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return [];\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getDialplan = async (id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        _dirty: false,\n    };\n    try {\n        let response = await dialplanService.readRoutingOutboundCall(id, domainId);\n        return {...defaultObject, ...response};\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const addDialplan = async (item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        const response = await dialplanService.createRoutingOutboundCall(itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully added');\n        return response.id;\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const patchDialplan = async (id, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        await dialplanService.patchRoutingOutboundCall(id, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const moveDialplan = async (fromId, toId) => {\n    const domain_id = store.state.userinfo.domainId || undefined;\n    try {\n        await dialplanService.movePositionRoutingOutboundCall(fromId, toId, {domain_id});\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const updateDialplan = async (id, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        await dialplanService.updateRoutingOutboundCall(id, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const deleteDialplan = async (id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    try {\n        await dialplanService.deleteRoutingOutboundCall(id, domainId);\n    } catch (err) {\n        throw err;\n    }\n};"]}]}