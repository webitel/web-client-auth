{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/integrations/storage/the-storage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/integrations/storage/the-storage.vue","mtime":1581331525298},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport storagePopup from \"./create-storage-popup\";\nimport tableComponentMixin from '@/mixins/tableComponentMixin';\nimport { _checkboxTableField, _actionsTableField_2, _switcherWidth } from \"../../../utils/tableFieldPresets\";\nimport { mapActions, mapState } from \"vuex\";\nexport default {\n  name: \"the-storage\",\n  mixins: [tableComponentMixin],\n  components: {\n    storagePopup: storagePopup\n  },\n  data: function data() {\n    return {\n      fields: [_checkboxTableField, {\n        name: 'name',\n        title: this.$t('objects.name')\n      }, {\n        name: 'type',\n        title: this.$t('objects.integrations.storage.type')\n      }, {\n        name: 'maxSize',\n        title: this.$t('objects.integrations.storage.maxSize')\n      }, {\n        name: 'expireDays',\n        title: this.$t('objects.integrations.storage.expireDays')\n      }, {\n        name: 'enabled',\n        title: this.$t('objects.enabled'),\n        width: _switcherWidth\n      }, _actionsTableField_2]\n    };\n  },\n  computed: _objectSpread({}, mapState('integrations/storage', {\n    dataList: function dataList(state) {\n      return state.dataList;\n    },\n    page: function page(state) {\n      return state.page;\n    },\n    // acts like a boolean: if page is 0, there's no back page\n    isNextPage: function isNextPage(state) {\n      return state.isNextPage;\n    }\n  }), {\n    size: {\n      get: function get() {\n        return this.$store.state.integrations.storage.size;\n      },\n      set: function set(value) {\n        this.setSize(value);\n      }\n    },\n    search: {\n      get: function get() {\n        return this.$store.state.integrations.storage.search;\n      },\n      set: function set(value) {\n        this.setSearch(value);\n      }\n    }\n  }),\n  methods: _objectSpread({\n    create: function create() {\n      this.popupTriggerIf = true;\n    },\n    edit: function edit(rowId) {\n      this.$router.push({\n        name: 'storage-edit',\n        params: {\n          type: this.dataList[rowId].type,\n          id: this.dataList[rowId].id\n        }\n      });\n    },\n    computeType: function computeType(type) {\n      switch (type) {\n        case 'local':\n          return 'Local';\n\n        case 's3':\n          return 'S3 Bucket';\n\n        case 'backblaze':\n          return 'Backblaze';\n\n        case 'dropbox':\n          return 'Dropbox';\n\n        case 'drive':\n          return 'Google Drive';\n      }\n    }\n  }, mapActions('integrations/storage', {\n    loadDataList: 'LOAD_DATA_LIST',\n    toggleItemProperty: 'TOGGLE_ITEM_PROPERTY',\n    setSize: 'SET_SIZE',\n    setSearch: 'SET_SEARCH',\n    nextPage: 'NEXT_PAGE',\n    prevPage: 'PREV_PAGE',\n    removeItem: 'REMOVE_ITEM'\n  }))\n};",{"version":3,"sources":["the-storage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryAction=\"create\"\n        >\n            {{$t('objects.integrations.integrations')}} |\n            {{$t('objects.integrations.storage.storage')}}\n        </object-header>\n\n        <storage-popup\n            v-if=\"popupTriggerIf\"\n            @close=\"popupTriggerIf = false\"\n        ></storage-popup>\n\n        <section class=\"object-content\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">{{$t('objects.integrations.storage.allStorages')}}</h3>\n                <div class=\"content-header__actions-wrap\">\n                    <search\n                            v-model=\"search\"\n                            @filterData=\"loadList\"\n                    ></search>\n                    <i\n                            class=\"icon-icon_delete icon-action\"\n                            :class=\"{'hidden': anySelected}\"\n                            :title=\"$t('iconHints.deleteSelected')\"\n                            @click=\"deleteSelected\"\n                    ></i>\n                    <i\n                            class=\"icon-icon_reload icon-action\"\n                            :title=\"$t('iconHints.reload')\"\n                            @click=\"loadList\"\n                    ></i>\n                </div>\n            </header>\n\n            <loader v-show=\"!isLoaded\"></loader>\n\n            <vuetable\n                    v-show=\"isLoaded\"\n                    :api-mode=\"false\"\n                    :fields=\"fields\"\n                    :data=\"dataList\"\n            >\n                <template slot=\"name\" slot-scope=\"props\">\n                    <div class=\"tt-capitalize\">\n                        <span class=\"nameLink\" @click=\"edit(props.rowIndex)\">\n                        {{dataList[props.rowIndex].name}}\n                        </span>\n                    </div>\n                </template>\n\n                <template slot=\"type\" slot-scope=\"props\">\n                    <div>\n                        {{computeType(dataList[props.rowIndex].type)}}\n                    </div>\n                </template>\n\n                <template slot=\"maxSize\" slot-scope=\"props\">\n                    <div>\n                        {{dataList[props.rowIndex].maxSize}}\n                    </div>\n                </template>\n\n                <template slot=\"expireDays\" slot-scope=\"props\">\n                    <div>\n                        {{dataList[props.rowIndex].expireDays}}\n                    </div>\n                </template>\n\n                <template slot=\"enabled\" slot-scope=\"props\">\n                    <switcher\n                            :value=\"!dataList[props.rowIndex].disabled\"\n                            @input=\"toggleItemProperty(props.rowIndex)\"\n                    ></switcher>\n                </template>\n\n                <template slot=\"actions\" slot-scope=\"props\">\n                    <i class=\"vuetable-action icon-icon_edit\"\n                       :title=\"$t('iconHints.edit')\"\n                       @click=\"edit(props.rowIndex)\"\n                    ></i>\n                    <i class=\"vuetable-action icon-icon_delete\"\n                       :title=\"$t('iconHints.delete')\"\n                       @click=\"remove(props.rowIndex)\"\n                    ></i>\n                </template>\n            </vuetable>\n            <pagination\n                    v-show=\"isLoaded\"\n                    v-model=\"size\"\n                    @loadDataList=\"loadList\"\n                    @next=\"nextPage\"\n                    @prev=\"prevPage\"\n                    :isNext=\"isNextPage\"\n                    :isPrev=\"!!page\"\n            ></pagination>\n        </section>\n    </div>\n</template>\n\n<script>\n    import storagePopup from './create-storage-popup';\n    import tableComponentMixin from '@/mixins/tableComponentMixin';\n    import {_checkboxTableField, _actionsTableField_2, _switcherWidth} from \"../../../utils/tableFieldPresets\";\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: \"the-storage\",\n        mixins: [tableComponentMixin],\n        components: {storagePopup},\n        data() {\n            return {\n                fields: [\n                    _checkboxTableField,\n                    {name: 'name', title: this.$t('objects.name')},\n                    {name: 'type', title: this.$t('objects.integrations.storage.type')},\n                    {name: 'maxSize', title: this.$t('objects.integrations.storage.maxSize')},\n                    {name: 'expireDays', title: this.$t('objects.integrations.storage.expireDays')},\n                    {name: 'enabled', title: this.$t('objects.enabled'), width: _switcherWidth},\n                    _actionsTableField_2\n                ],\n            };\n        },\n\n        computed: {\n            ...mapState('integrations/storage', {\n                dataList: state => state.dataList,\n                page: state => state.page, // acts like a boolean: if page is 0, there's no back page\n                isNextPage: state => state.isNextPage,\n            }),\n\n            size: {\n                get() {\n                    return this.$store.state.integrations.storage.size\n                },\n                set(value) {\n                    this.setSize(value)\n                }\n            },\n\n            search: {\n                get() {\n                    return this.$store.state.integrations.storage.search\n                },\n                set(value) {\n                    this.setSearch(value)\n                }\n            },\n        },\n\n        methods: {\n            create() {\n                this.popupTriggerIf = true;\n            },\n\n            edit(rowId) {\n                this.$router.push({\n                    name: 'storage-edit',\n                    params: {\n                        type: this.dataList[rowId].type,\n                        id: this.dataList[rowId].id\n                    },\n                });\n            },\n\n            computeType(type) {\n                switch (type) {\n                    case 'local': return 'Local';\n                    case 's3': return 'S3 Bucket';\n                    case 'backblaze': return 'Backblaze';\n                    case 'dropbox': return 'Dropbox';\n                    case 'drive': return 'Google Drive';\n                }\n            },\n\n            ...mapActions('integrations/storage', {\n                loadDataList: 'LOAD_DATA_LIST',\n                toggleItemProperty: 'TOGGLE_ITEM_PROPERTY',\n                setSize: 'SET_SIZE',\n                setSearch: 'SET_SEARCH',\n                nextPage: 'NEXT_PAGE',\n                prevPage: 'PREV_PAGE',\n                removeItem: 'REMOVE_ITEM',\n            }),\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/components/integrations/storage"}]}