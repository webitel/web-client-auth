{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/contact-center/queues/queueBuckets.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/contact-center/queues/queueBuckets.js","mtime":1580889294814},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../../instance\";\nimport configuration from \"../../openAPIConfig\";\nimport sanitizer from \"../../utils/sanitizer\";\nimport { QueueBucketServiceApiFactory } from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport deepCopy from 'deep-copy';\nimport store from \"../../../store/store\";\nvar queueBucketsService = new QueueBucketServiceApiFactory(configuration, '', instance);\nvar fieldsToSend = ['bucket', 'ratio', 'queueId'];\nexport var getQueueBucketsList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(queueId) {\n    var page,\n        size,\n        search,\n        domainId,\n        defaultObject,\n        response,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n            size = _args.length > 2 && _args[2] !== undefined ? _args[2] : 10;\n            search = _args.length > 3 ? _args[3] : undefined;\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              ratio: 0,\n              _isSelected: false\n            };\n            if (search && search.slice(-1) !== '*') search += '*';\n            _context.prev = 6;\n            _context.next = 9;\n            return queueBucketsService.searchQueueBucket(queueId, page, size, domainId);\n\n          case 9:\n            response = _context.sent;\n\n            if (!response.items) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.items.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", []);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            throw _context.t0;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function getQueueBucketsList(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getQueueBucket =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(queueId, id) {\n    var domainId, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              ratio: 0,\n              _dirty: false\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return queueBucketsService.readQueueBucket(queueId, id, domainId);\n\n          case 5:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", _objectSpread({}, defaultObject, {}, response));\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            throw _context2.t0;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function getQueueBucket(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var addQueueBucket =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(queueId, item) {\n    var itemCopy, response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.queueId = queueId;\n            sanitizer(itemCopy, fieldsToSend);\n            _context3.prev = 4;\n            _context3.next = 7;\n            return queueBucketsService.createQueueBucket(queueId, itemCopy);\n\n          case 7:\n            response = _context3.sent;\n            eventBus.$emit('notificationInfo', 'Sucessfully added');\n            return _context3.abrupt(\"return\", response.id);\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](4);\n            throw _context3.t0;\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[4, 12]]);\n  }));\n\n  return function addQueueBucket(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var updateQueueBucket =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(queueId, id, item) {\n    var itemCopy;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.queueId = queueId;\n            sanitizer(itemCopy, fieldsToSend);\n            _context4.prev = 4;\n            _context4.next = 7;\n            return queueBucketsService.updateQueueBucket(queueId, id, itemCopy);\n\n          case 7:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context4.next = 13;\n            break;\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](4);\n            throw _context4.t0;\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[4, 10]]);\n  }));\n\n  return function updateQueueBucket(_x6, _x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var deleteQueueBucket =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(queueId, id) {\n    var domainId;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return queueBucketsService.deleteQueueBucket(queueId, id, domainId);\n\n          case 4:\n            _context5.next = 9;\n            break;\n\n          case 6:\n            _context5.prev = 6;\n            _context5.t0 = _context5[\"catch\"](1);\n            throw _context5.t0;\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 6]]);\n  }));\n\n  return function deleteQueueBucket(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/contact-center/queues/queueBuckets.js"],"names":["instance","configuration","sanitizer","QueueBucketServiceApiFactory","eventBus","deepCopy","store","queueBucketsService","fieldsToSend","getQueueBucketsList","queueId","page","size","search","domainId","state","userinfo","undefined","defaultObject","ratio","_isSelected","slice","searchQueueBucket","response","items","map","item","getQueueBucket","id","_dirty","readQueueBucket","addQueueBucket","itemCopy","createQueueBucket","$emit","updateQueueBucket","deleteQueueBucket"],"mappings":"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","sourcesContent":["import instance from '../../instance';\nimport configuration from '../../openAPIConfig';\nimport sanitizer from '../../utils/sanitizer';\nimport {QueueBucketServiceApiFactory} from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport deepCopy from 'deep-copy';\nimport store from '../../../store/store';\n\nconst queueBucketsService = new QueueBucketServiceApiFactory\n(configuration, '', instance);\n\nconst fieldsToSend = ['bucket', 'ratio', 'queueId'];\n\nexport const getQueueBucketsList = async (queueId, page = 0, size = 10, search) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        ratio: 0,\n        _isSelected: false,\n    };\n    if (search && search.slice(-1) !== '*') search += '*';\n\n    try {\n        const response = await queueBucketsService.searchQueueBucket(queueId, page, size, domainId);\n        if (response.items) {\n            return response.items.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return [];\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getQueueBucket = async (queueId, id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        ratio: 0,\n        _dirty: false,\n    };\n    try {\n        let response = await queueBucketsService.readQueueBucket(queueId, id, domainId);\n        return {...defaultObject, ...response};\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const addQueueBucket = async (queueId, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.queueId = queueId;\n\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        const response = await queueBucketsService.createQueueBucket(queueId, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully added');\n        return response.id;\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const updateQueueBucket = async (queueId, id, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.queueId = queueId;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        await queueBucketsService.updateQueueBucket(queueId, id, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const deleteQueueBucket = async (queueId, id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    try {\n        await queueBucketsService.deleteQueueBucket(queueId, id, domainId);\n    } catch (err) {\n        throw err;\n    }\n};"]}]}