{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/auth/auth.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/auth/auth.js","mtime":1582709146779},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport instance from \"../instance\";\nimport router from \"../../router/router\";\nimport { getSession } from \"../userinfo/userinfo\"; // posts user credentials and gets tokens\n// credentials: username, password\n// stores tokens in localstorage\n// and updates global instance access-token header\n// if succeeded, calls getSession function\n\nexport var login =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(credentials) {\n    var url, response;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = '/login';\n            _context.prev = 1;\n            _context.next = 4;\n            return instance.post(url, credentials);\n\n          case 4:\n            response = _context.sent;\n            localStorage.setItem('access-token', response.authorization.accessToken); // instance.defaults.headers['X-Webitel-Access'] = localStorage.getItem('access-token');\n            // await getSession();\n            // return router.replace('/');\n\n            parent.postMessage(response.authorization.accessToken, '*');\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            throw _context.t0;\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 9]]);\n  }));\n\n  return function login(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var register =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(credentials) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            url = '/signup';\n            _context2.prev = 1;\n            _context2.next = 4;\n            return instance.post(url, credentials);\n\n          case 4:\n            _context2.next = 6;\n            return login({\n              username: credentials.username,\n              password: credentials.password\n            });\n\n          case 6:\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            throw _context2.t0;\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 8]]);\n  }));\n\n  return function register(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var logout =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3() {\n    var url;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            url = '/logout';\n            _context3.prev = 1;\n            _context3.next = 4;\n            return instance.post(url, {});\n\n          case 4:\n            // remove tokens\n            localStorage.removeItem('access-token');\n            localStorage.removeItem('domain');\n            instance.defaults.headers['X-Webitel-Access'] = ''; // and throw user to auth page\n\n            return _context3.abrupt(\"return\", router.replace('/auth'));\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](1);\n            throw _context3.t0;\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 10]]);\n  }));\n\n  return function logout() {\n    return _ref3.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/auth/auth.js"],"names":["instance","router","getSession","login","credentials","url","post","response","localStorage","setItem","authorization","accessToken","parent","postMessage","register","username","password","logout","removeItem","defaults","headers","replace"],"mappings":";;;AAAA,OAAOA,QAAP;AACA,OAAOC,MAAP;AACA,SAAQC,UAAR,+B,CAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,YAAAA,GADW,GACL,QADK;AAAA;AAAA;AAAA,mBAIUL,QAAQ,CAACM,IAAT,CAAcD,GAAd,EAAmBD,WAAnB,CAJV;;AAAA;AAIPG,YAAAA,QAJO;AAKbC,YAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,QAAQ,CAACG,aAAT,CAAuBC,WAA5D,EALa,CAMb;AACA;AACA;;AACAC,YAAAA,MAAM,CAACC,WAAP,CAAmBN,QAAQ,CAACG,aAAT,CAAuBC,WAA1C,EAAuD,GAAvD;AATa;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALR,KAAK;AAAA;AAAA;AAAA,GAAX;AAgBP,OAAO,IAAMW,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOV,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,GADc,GACR,SADQ;AAAA;AAAA;AAAA,mBAIVL,QAAQ,CAACM,IAAT,CAAcD,GAAd,EAAmBD,WAAnB,CAJU;;AAAA;AAAA;AAAA,mBAKVD,KAAK,CAAC;AAACY,cAAAA,QAAQ,EAAEX,WAAW,CAACW,QAAvB;AAAiCC,cAAAA,QAAQ,EAAEZ,WAAW,CAACY;AAAvD,aAAD,CALK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARF,QAAQ;AAAA;AAAA;AAAA,GAAd;AAWP,OAAO,IAAMG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACZZ,YAAAA,GADY,GACN,SADM;AAAA;AAAA;AAAA,mBAIRL,QAAQ,CAACM,IAAT,CAAcD,GAAd,EAAmB,EAAnB,CAJQ;;AAAA;AAKd;AACAG,YAAAA,YAAY,CAACU,UAAb,CAAwB,cAAxB;AACAV,YAAAA,YAAY,CAACU,UAAb,CAAwB,QAAxB;AACAlB,YAAAA,QAAQ,CAACmB,QAAT,CAAkBC,OAAlB,CAA0B,kBAA1B,IAAgD,EAAhD,CARc,CASd;;AATc,8CAUPnB,MAAM,CAACoB,OAAP,CAAe,OAAf,CAVO;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANJ,MAAM;AAAA;AAAA;AAAA,GAAZ","sourcesContent":["import instance from '../instance';\nimport router from '../../router/router';\nimport {getSession} from \"../userinfo/userinfo\";\n\n// posts user credentials and gets tokens\n// credentials: username, password\n// stores tokens in localstorage\n// and updates global instance access-token header\n// if succeeded, calls getSession function\nexport const login = async (credentials) => {\n    const url = '/login';\n\n    try {\n        const response = await instance.post(url, credentials);\n        localStorage.setItem('access-token', response.authorization.accessToken);\n        // instance.defaults.headers['X-Webitel-Access'] = localStorage.getItem('access-token');\n        // await getSession();\n        // return router.replace('/');\n        parent.postMessage(response.authorization.accessToken, '*');\n    } catch (error) {\n        throw error;\n    }\n};\n\n\nexport const register = async (credentials) => {\n    const url = '/signup';\n\n    try {\n        await instance.post(url, credentials);\n        await login({username: credentials.username, password: credentials.password});\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const logout = async () => {\n    const url = '/logout';\n\n    try {\n        await instance.post(url, {});\n        // remove tokens\n        localStorage.removeItem('access-token');\n        localStorage.removeItem('domain');\n        instance.defaults.headers['X-Webitel-Access'] = '';\n        // and throw user to auth page\n        return router.replace('/auth');\n    } catch (error) {\n        throw error;\n    }\n};\n\n"]}]}