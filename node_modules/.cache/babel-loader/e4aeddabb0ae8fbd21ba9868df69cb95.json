{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/userinfo/userinfo.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/userinfo/userinfo.js","mtime":1580743379248},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../instance\";\nimport store from \"../../store/store\";\nimport { objSnakeToCamel } from \"../utils/caseConverters\"; // gets user by token from localstorage\n// stores response username in vuex\n\nexport var getSession =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var defaultObject, tokenCheck, url, response;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            defaultObject = {\n              domainId: 0,\n              username: '',\n              userId: 0,\n              scope: [],\n              roles: [],\n              license: []\n            };\n            tokenCheck = localStorage.getItem('access-token');\n\n            if (!(typeof tokenCheck === 'string')) {\n              _context.next = 15;\n              break;\n            }\n\n            // if there is no token, localStorage returns object\n            url = '/userinfo';\n            _context.prev = 4;\n            _context.next = 7;\n            return instance.get(url);\n\n          case 7:\n            response = _context.sent;\n            localStorage.setItem('domain', response.dc);\n            store.dispatch('userinfo/SET_SESSION', _objectSpread({}, defaultObject, {}, objSnakeToCamel(response)));\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](4);\n            throw _context.t0;\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 12]]);\n  }));\n\n  return function getSession() {\n    return _ref.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/userinfo/userinfo.js"],"names":["instance","store","objSnakeToCamel","getSession","defaultObject","domainId","username","userId","scope","roles","license","tokenCheck","localStorage","getItem","url","get","response","setItem","dc","dispatch"],"mappings":";;;;;;;;;;;AAAA,OAAOA,QAAP;AACA,OAAOC,KAAP;AACA,SAAQC,eAAR,kC,CAEA;AACA;;AACA,OAAO,IAAMC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,aADgB,GACA;AAClBC,cAAAA,QAAQ,EAAE,CADQ;AAElBC,cAAAA,QAAQ,EAAE,EAFQ;AAGlBC,cAAAA,MAAM,EAAE,CAHU;AAIlBC,cAAAA,KAAK,EAAE,EAJW;AAKlBC,cAAAA,KAAK,EAAE,EALW;AAMlBC,cAAAA,OAAO,EAAE;AANS,aADA;AAUhBC,YAAAA,UAVgB,GAUHC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAVG;;AAAA,kBAWlB,OAAOF,UAAP,KAAsB,QAXJ;AAAA;AAAA;AAAA;;AAWgB;AAC5BG,YAAAA,GAZY,GAYN,WAZM;AAAA;AAAA;AAAA,mBAcSd,QAAQ,CAACe,GAAT,CAAaD,GAAb,CAdT;;AAAA;AAcRE,YAAAA,QAdQ;AAedJ,YAAAA,YAAY,CAACK,OAAb,CAAqB,QAArB,EAA+BD,QAAQ,CAACE,EAAxC;AACAjB,YAAAA,KAAK,CAACkB,QAAN,CAAe,sBAAf,oBACOf,aADP,MAEOF,eAAe,CAACc,QAAD,CAFtB;AAhBc;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVb,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["import instance from \"../instance\";\nimport store from \"../../store/store\";\nimport {objSnakeToCamel} from \"../utils/caseConverters\";\n\n// gets user by token from localstorage\n// stores response username in vuex\nexport const getSession = async () => {\n    const defaultObject = {\n        domainId: 0,\n        username: '',\n        userId: 0,\n        scope: [],\n        roles: [],\n        license: [],\n    };\n\n    const tokenCheck = localStorage.getItem('access-token');\n    if (typeof tokenCheck === 'string') { // if there is no token, localStorage returns object\n        const url = '/userinfo';\n        try {\n            const response = await instance.get(url);\n            localStorage.setItem('domain', response.dc);\n            store.dispatch('userinfo/SET_SESSION', {\n                ...defaultObject,\n                ...objSnakeToCamel(response)\n            });\n        } catch (error) {\n            throw error;\n        }\n    }\n};"]}]}