{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/utils/form-input.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/utils/form-input.vue","mtime":1579097515852},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport eventBus from '@/utils/eventBus';\nimport requiredLabelMixin from '@/mixins/requiredLabelMixin';\nimport validationMessage from \"./validation-message\";\nexport default {\n  name: 'login-input',\n  mixins: [requiredLabelMixin],\n  components: {\n    'validation-message': validationMessage\n  },\n  props: {\n    // value -- w-model from outer component\n    value: {\n      default: ''\n    },\n    // label above input itself\n    label: {\n      type: String\n    },\n    // input placeholder\n    placeholder: {\n      type: String\n    },\n    // autofocus on input when page is first loaded\n    autofocus: {\n      type: Boolean,\n      default: false\n    },\n    // for specific types like password\n    type: {\n      type: String,\n      default: 'text'\n    },\n    // \"?\" hint text. Also controls \"?\" display\n    hintText: {\n      type: String\n    },\n    // if textarea needed\n    textarea: {\n      type: Boolean,\n      default: false\n    },\n    // specify height easily. Used for textarea\n    height: {\n      type: Number,\n      default: 128\n    },\n    // disables input\n    disabled: {\n      type: Boolean\n    },\n    // '*' sign property\n    required: {\n      type: Boolean,\n      default: false\n    },\n    hideLabel: {\n      type: Boolean,\n      default: false\n    },\n    hideDetails: {\n      type: Boolean,\n      default: false\n    },\n    // validation rules\n    v: {}\n  },\n  mounted: function mounted() {\n    eventBus.$on('copyToClipboard', this.copyToClipboard);\n    if (this.textarea) this.$refs.input.style.height = \"\".concat(this.height, \"px\");\n  },\n  computed: {\n    validation: {\n      get: function get() {\n        return this.value;\n      },\n      set: function set(value) {\n        if (this.v) this.v.$touch();\n        this.$emit('input', value);\n      }\n    }\n  },\n  methods: {\n    // pass copyTarget to be sure that selected text will be copied\n    copyToClipboard: function copyToClipboard(copyTarget) {\n      if (this.value === copyTarget && this.value) {\n        this.$refs.input.select();\n        document.execCommand('copy');\n      }\n    }\n  }\n};",{"version":3,"sources":["form-input.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAA,QAAA,MAAA,kBAAA;AACA,OAAA,kBAAA,MAAA,6BAAA;AACA,OAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,MAAA,EAAA,CAAA,kBAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,0BAAA;AADA,GAHA;AAMA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,OAAA,EAAA;AADA,KAFA;AAMA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAPA;AAWA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAZA;AAgBA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAsBA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAvBA;AA4BA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KA7BA;AAiCA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAlCA;AAuCA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAxCA;AA6CA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KA9CA;AAkDA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAnDA;AAwDA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAxDA;AA6DA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7DA;AAkEA;AACA,IAAA,CAAA,EAAA;AAnEA,GANA;AA2EA,EAAA,OA3EA,qBA2EA;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,KAAA,eAAA;AACA,QAAA,KAAA,QAAA,EAAA,KAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,MAAA,aAAA,KAAA,MAAA;AACA,GA9EA;AA+EA,EAAA,QAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,KAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,YAAA,KAAA,CAAA,EAAA,KAAA,CAAA,CAAA,MAAA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA;AAPA;AADA,GA/EA;AA0FA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,eAFA,2BAEA,UAFA,EAEA;AACA,UAAA,KAAA,KAAA,KAAA,UAAA,IAAA,KAAA,KAAA,EAAA;AACA,aAAA,KAAA,CAAA,KAAA,CAAA,MAAA;AACA,QAAA,QAAA,CAAA,WAAA,CAAA,MAAA;AACA;AACA;AAPA;AA1FA,CAAA","sourcesContent":["<template>\n    <div class=\"form-input\">\n        <div v-if=\"!hideLabel\" class=\"label\" :class=\"{'invalid': v && v.$error}\">\n            {{computeRequiredLabel}}\n        </div>\n\n        <input\n                class=\"input\"\n                ref=\"input\"\n                v-if=\"!textarea\"\n                v-model=\"validation\"\n                @input=\"$emit('input, $event.target.value')\"\n                :type=\"type\"\n                :placeholder=\"placeholder || label\"\n                :autofocus=\"autofocus\"\n                :disabled=\"disabled\"\n        />\n\n        <textarea\n                class=\"input\"\n                ref=\"input\"\n                v-if=\"textarea\"\n                v-model=\"validation\"\n                @input=\"$emit('input, $event.target.value')\"\n                :placeholder=\"placeholder || label\"\n                :autofocus=\"autofocus\"\n                :disabled=\"disabled\"\n        ></textarea>\n\n        <validation-message\n                v-if=\"!hideDetails\"\n                :v=\"v\"\n        />\n    </div>\n</template>\n\n<script>\n    import eventBus from '@/utils/eventBus';\n    import requiredLabelMixin from '@/mixins/requiredLabelMixin';\n    import validationMessage from './validation-message';\n\n    export default {\n        name: 'login-input',\n        mixins: [requiredLabelMixin],\n        components: {\n            'validation-message': validationMessage\n        },\n        props: {\n            // value -- w-model from outer component\n            value: {\n                default: '',\n            },\n\n            // label above input itself\n            label: {\n                type: String,\n            },\n\n            // input placeholder\n            placeholder: {\n                type: String,\n            },\n\n            // autofocus on input when page is first loaded\n            autofocus: {\n                type: Boolean,\n                default: false,\n            },\n\n            // for specific types like password\n            type: {\n                type: String,\n                default: 'text',\n            },\n\n            // \"?\" hint text. Also controls \"?\" display\n            hintText: {\n                type: String,\n            },\n\n            // if textarea needed\n            textarea: {\n                type: Boolean,\n                default: false,\n            },\n\n            // specify height easily. Used for textarea\n            height: {\n                type: Number,\n                default: 128,\n            },\n\n            // disables input\n            disabled: {\n                type: Boolean\n            },\n\n            // '*' sign property\n            required: {\n                type: Boolean,\n                default: false\n            },\n\n            hideLabel: {\n                type: Boolean,\n                default: false\n            },\n\n            hideDetails: {\n                type: Boolean,\n                default: false\n            },\n\n            // validation rules\n            v: {},\n        },\n        mounted() {\n            eventBus.$on('copyToClipboard', this.copyToClipboard);\n            if (this.textarea) this.$refs.input.style.height = `${this.height}px`;\n        },\n        computed: {\n            validation: {\n                get() {\n                    return this.value;\n                },\n                set(value) {\n                    if (this.v) this.v.$touch();\n                    this.$emit('input', value);\n                },\n            },\n        },\n        methods: {\n            // pass copyTarget to be sure that selected text will be copied\n            copyToClipboard(copyTarget) {\n                if (this.value === copyTarget && this.value) {\n                    this.$refs.input.select();\n                    document.execCommand('copy');\n                }\n            }\n        },\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n    .form-input {\n        position: relative;\n    }\n\n    .input {\n        @extend .typo-input-text;\n        @extend .default-input;\n    }\n\n    textarea {\n        resize: none;\n    }\n\n    /*if extra icons/controls in the end of input inself needed */\n    .input-extension-wrap .input {\n        padding-right: 100px;\n    }\n\n</style>\n"],"sourceRoot":"src/components/utils"}]}