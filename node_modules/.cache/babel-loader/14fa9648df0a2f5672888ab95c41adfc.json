{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/assets/lib/ripple/ripple.js","dependencies":[{"path":"/home/dev/work/client-auth/src/assets/lib/ripple/ripple.js","mtime":1568620692330},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nvar Ripple = {\n  bind: function bind(el, binding) {\n    var rippleBg = 'rgba(255, 255, 255, 0.15)';\n\n    if (el.classList.contains('secondary-btn')) {\n      rippleBg = 'rgba(0, 0, 0, 0.1)';\n    } // Default values.\n\n\n    var props = {\n      event: 'mousedown',\n      transition: 600\n    };\n    setProps(Object.keys(binding.modifiers), props);\n    el.addEventListener(props.event, function (event) {\n      rippler(event, el, binding.value);\n    });\n    var bg = binding.value || Ripple.color || rippleBg;\n    var zIndex = Ripple.zIndex || '9999';\n\n    function rippler(event, el) {\n      var target = el; // Get border to avoid offsetting on ripple container position\n\n      var targetBorder = parseInt(getComputedStyle(target).borderWidth.replace('px', '')); // Get necessary variables\n\n      var rect = target.getBoundingClientRect(),\n          left = rect.left,\n          top = rect.top,\n          width = target.offsetWidth,\n          height = target.offsetHeight,\n          dx = event.clientX - left,\n          dy = event.clientY - top,\n          maxX = Math.max(dx, width - dx),\n          maxY = Math.max(dy, height - dy),\n          style = window.getComputedStyle(target),\n          radius = Math.sqrt(maxX * maxX + maxY * maxY),\n          border = targetBorder > 0 ? targetBorder : 0; // Create the ripple and its container\n\n      var ripple = document.createElement(\"div\"),\n          rippleContainer = document.createElement(\"div\");\n      rippleContainer.className = 'ripple-container';\n      ripple.className = 'ripple'; //Styles for ripple\n\n      ripple.style.marginTop = '0px';\n      ripple.style.marginLeft = '0px';\n      ripple.style.width = '1px';\n      ripple.style.height = '1px';\n      ripple.style.transition = 'all ' + props.transition + 'ms cubic-bezier(0.4, 0, 0.2, 1)';\n      ripple.style.borderRadius = '50%';\n      ripple.style.pointerEvents = 'none';\n      ripple.style.position = 'relative';\n      ripple.style.zIndex = zIndex;\n      ripple.style.backgroundColor = bg; //Styles for rippleContainer\n\n      rippleContainer.style.position = 'absolute';\n      rippleContainer.style.left = 0 - border + 'px';\n      rippleContainer.style.top = 0 - border + 'px';\n      rippleContainer.style.height = '0';\n      rippleContainer.style.width = '0';\n      rippleContainer.style.pointerEvents = 'none';\n      rippleContainer.style.overflow = 'hidden'; // Store target position to change it after\n\n      var storedTargetPosition = target.style.position.length > 0 ? target.style.position : getComputedStyle(target).position; // Change target position to relative to guarantee ripples correct positioning\n\n      if (storedTargetPosition !== 'relative') {\n        target.style.position = 'relative';\n      }\n\n      rippleContainer.appendChild(ripple);\n      target.appendChild(rippleContainer);\n      ripple.style.marginLeft = dx + \"px\";\n      ripple.style.marginTop = dy + \"px\"; // No need to set positioning because ripple should be child of target and to it's relative position.\n      // rippleContainer.style.left    = left + (((window.pageXOffset || document.scrollLeft) - (document.clientLeft || 0)) || 0) + \"px\";\n      // rippleContainer.style.top     = top + (((window.pageYOffset || document.scrollTop) - (document.clientTop || 0)) || 0) + \"px\";\n\n      rippleContainer.style.width = width + \"px\";\n      rippleContainer.style.height = height + \"px\";\n      rippleContainer.style.borderTopLeftRadius = style.borderTopLeftRadius;\n      rippleContainer.style.borderTopRightRadius = style.borderTopRightRadius;\n      rippleContainer.style.borderBottomLeftRadius = style.borderBottomLeftRadius;\n      rippleContainer.style.borderBottomRightRadius = style.borderBottomRightRadius;\n      rippleContainer.style.direction = 'ltr';\n      setTimeout(function () {\n        ripple.style.width = radius * 2 + \"px\";\n        ripple.style.height = radius * 2 + \"px\";\n        ripple.style.marginLeft = dx - radius + \"px\";\n        ripple.style.marginTop = dy - radius + \"px\";\n      }, 0);\n\n      function clearRipple() {\n        setTimeout(function () {\n          ripple.style.backgroundColor = \"rgba(0, 0, 0, 0)\";\n        }, 250); // Timeout set to get a smooth removal of the ripple\n\n        setTimeout(function () {\n          rippleContainer.parentNode.removeChild(rippleContainer);\n        }, 850);\n        el.removeEventListener('mouseup', clearRipple, false);\n        el.removeEventListener('dragstart', clearRipple, false); // After removing event set position to target to it's original one\n        // Timeout it's needed to avoid jerky effect of ripple jumping out parent target\n\n        setTimeout(function () {\n          var clearPosition = true;\n\n          for (var i = 0; i < target.childNodes.length; i++) {\n            if (target.childNodes[i].className === 'ripple-container') {\n              clearPosition = false;\n            }\n          }\n\n          if (clearPosition) {\n            if (storedTargetPosition !== 'static') {\n              target.style.position = storedTargetPosition;\n            } else {\n              target.style.position = '';\n            }\n          }\n        }, props.transition + 250);\n      }\n\n      if (event.type === 'mousedown') {\n        setTimeout(clearRipple, 100);\n      } else {\n        clearRipple();\n      }\n    }\n  }\n};\n\nfunction setProps(modifiers, props) {\n  modifiers.forEach(function (item) {\n    if (isNaN(Number(item))) props.event = item;else props.transition = item;\n  });\n}\n\nexport default Ripple;",{"version":3,"sources":["/home/dev/work/client-auth/src/assets/lib/ripple/ripple.js"],"names":["Ripple","bind","el","binding","rippleBg","classList","contains","props","event","transition","setProps","Object","keys","modifiers","addEventListener","rippler","value","bg","color","zIndex","target","targetBorder","parseInt","getComputedStyle","borderWidth","replace","rect","getBoundingClientRect","left","top","width","offsetWidth","height","offsetHeight","dx","clientX","dy","clientY","maxX","Math","max","maxY","style","window","radius","sqrt","border","ripple","document","createElement","rippleContainer","className","marginTop","marginLeft","borderRadius","pointerEvents","position","backgroundColor","overflow","storedTargetPosition","length","appendChild","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","direction","setTimeout","clearRipple","parentNode","removeChild","removeEventListener","clearPosition","i","childNodes","type","forEach","item","isNaN","Number"],"mappings":"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","sourcesContent":["const Ripple = {\n    bind: function(el, binding){\n\n        let rippleBg =  'rgba(255, 255, 255, 0.15)';\n        if(el.classList.contains('secondary-btn')) {\n            rippleBg = 'rgba(0, 0, 0, 0.1)';\n        }\n\n        // Default values.\n        const props = {\n            event: 'mousedown',\n            transition: 600\n        };\n\n        setProps(Object.keys(binding.modifiers),props);\n\n        el.addEventListener(props.event, function(event) {\n            rippler(event, el, binding.value);\n        });\n\n        const bg = binding.value || Ripple.color || rippleBg;\n        const zIndex = Ripple.zIndex || '9999';\n\n        function rippler(event, el) {\n            const target = el;\n            // Get border to avoid offsetting on ripple container position\n            const targetBorder = parseInt((getComputedStyle(target).borderWidth).replace('px', ''));\n\n            // Get necessary variables\n            const rect        = target.getBoundingClientRect(),\n                left        = rect.left,\n                top         = rect.top,\n                width       = target.offsetWidth,\n                height      = target.offsetHeight,\n                dx          = event.clientX - left,\n                dy          = event.clientY - top,\n                maxX        = Math.max(dx, width - dx),\n                maxY        = Math.max(dy, height - dy),\n                style       = window.getComputedStyle(target),\n                radius      = Math.sqrt((maxX * maxX) + (maxY * maxY)),\n                border      = (targetBorder > 0 ) ? targetBorder : 0;\n\n            // Create the ripple and its container\n            const ripple = document.createElement(\"div\"),\n                rippleContainer = document.createElement(\"div\");\n                rippleContainer.className = 'ripple-container';\n                ripple.className = 'ripple';\n\n            //Styles for ripple\n            ripple.style.marginTop= '0px';\n            ripple.style.marginLeft= '0px';\n            ripple.style.width= '1px';\n            ripple.style.height= '1px';\n            ripple.style.transition= 'all ' + props.transition + 'ms cubic-bezier(0.4, 0, 0.2, 1)';\n            ripple.style.borderRadius= '50%';\n            ripple.style.pointerEvents= 'none';\n            ripple.style.position= 'relative';\n            ripple.style.zIndex= zIndex;\n            ripple.style.backgroundColor  = bg;\n\n            //Styles for rippleContainer\n            rippleContainer.style.position= 'absolute';\n            rippleContainer.style.left = 0 - border + 'px';\n            rippleContainer.style.top = 0 - border + 'px';\n            rippleContainer.style.height = '0';\n            rippleContainer.style.width = '0';\n            rippleContainer.style.pointerEvents = 'none';\n            rippleContainer.style.overflow = 'hidden';\n\n            // Store target position to change it after\n            const storedTargetPosition =  ((target.style.position).length > 0) ? target.style.position : getComputedStyle(target).position;\n            // Change target position to relative to guarantee ripples correct positioning\n            if (storedTargetPosition !== 'relative') {\n                target.style.position = 'relative';\n            }\n\n            rippleContainer.appendChild(ripple);\n            target.appendChild(rippleContainer);\n\n            ripple.style.marginLeft   = dx + \"px\";\n            ripple.style.marginTop    = dy + \"px\";\n\n            // No need to set positioning because ripple should be child of target and to it's relative position.\n            // rippleContainer.style.left    = left + (((window.pageXOffset || document.scrollLeft) - (document.clientLeft || 0)) || 0) + \"px\";\n            // rippleContainer.style.top     = top + (((window.pageYOffset || document.scrollTop) - (document.clientTop || 0)) || 0) + \"px\";\n            rippleContainer.style.width   = width + \"px\";\n            rippleContainer.style.height  = height + \"px\";\n            rippleContainer.style.borderTopLeftRadius  = style.borderTopLeftRadius;\n            rippleContainer.style.borderTopRightRadius  = style.borderTopRightRadius;\n            rippleContainer.style.borderBottomLeftRadius  = style.borderBottomLeftRadius;\n            rippleContainer.style.borderBottomRightRadius  = style.borderBottomRightRadius;\n\n            rippleContainer.style.direction = 'ltr';\n\n            setTimeout(function() {\n                ripple.style.width  = radius * 2 + \"px\";\n                ripple.style.height = radius * 2 + \"px\";\n                ripple.style.marginLeft   = dx - radius + \"px\";\n                ripple.style.marginTop    = dy - radius + \"px\";\n            }, 0);\n\n            function clearRipple() {\n                setTimeout(function() {\n                    ripple.style.backgroundColor = \"rgba(0, 0, 0, 0)\";\n                }, 250);\n\n                // Timeout set to get a smooth removal of the ripple\n                setTimeout(function() {\n                    rippleContainer.parentNode.removeChild(rippleContainer);\n                }, 850);\n\n                el.removeEventListener('mouseup', clearRipple, false);\n                el.removeEventListener('dragstart', clearRipple, false);\n\n                // After removing event set position to target to it's original one\n                // Timeout it's needed to avoid jerky effect of ripple jumping out parent target\n                setTimeout(function () {\n\n                    var clearPosition = true;\n                    for(var i = 0; i < target.childNodes.length; i++) {\n                        if(target.childNodes[i].className === 'ripple-container') {\n                            clearPosition = false;\n                        }\n                    }\n\n                    if(clearPosition) {\n                        if(storedTargetPosition !== 'static') {\n                            target.style.position = storedTargetPosition;\n                        } else {\n                            target.style.position = '';\n                        }\n                    }\n\n                }, props.transition + 250)\n            }\n\n            if(event.type === 'mousedown') {\n                setTimeout(clearRipple, 100);\n            } else {\n                clearRipple();\n            }\n        }\n    }\n};\n\nfunction setProps(modifiers,props) {\n    modifiers.forEach(function(item) {\n        if(isNaN(Number(item)))\n            props.event = item;\n        else\n            props.transition = item;\n    });\n}\n\nexport default Ripple;"]}]}