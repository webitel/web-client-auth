{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/lookups/communications/communications.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/lookups/communications/communications.js","mtime":1580815302290},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../../instance\";\nimport configuration from \"../../openAPIConfig\";\nimport { CommunicationTypeServiceApiFactory } from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport sanitizer from \"../../utils/sanitizer\";\nimport deepCopy from 'deep-copy';\nimport store from \"../../../store/store\";\nimport { objCamelToSnake } from \"../../utils/caseConverters\";\nvar communicationService = new CommunicationTypeServiceApiFactory(configuration, '', instance);\nvar fieldsToSend = ['domainId', 'code', 'name', 'description'];\nexport var getCommunicationsList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var page,\n        size,\n        search,\n        domainId,\n        defaultObject,\n        response,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;\n            size = _args.length > 1 && _args[1] !== undefined ? _args[1] : 10;\n            search = _args.length > 2 ? _args[2] : undefined;\n            domainId = store.state.userinfo.domainId || undefined;\n            if (search && search.slice(-1) !== '*') search += '*';\n            defaultObject = {\n              _isSelected: false\n            };\n            _context.prev = 6;\n            _context.next = 9;\n            return communicationService.searchCommunicationType(page, size, search, domainId);\n\n          case 9:\n            response = _context.sent;\n\n            if (!response.items) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.items.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", []);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            throw _context.t0;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function getCommunicationsList() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getCommunication =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(id) {\n    var domainId, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              name: '',\n              code: '',\n              description: '',\n              _dirty: false\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return communicationService.readCommunicationType(id, domainId);\n\n          case 5:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", _objectSpread({}, defaultObject, {}, response));\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            throw _context2.t0;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function getCommunication(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var addCommunication =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(item) {\n    var itemCopy, response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            sanitizer(itemCopy, fieldsToSend);\n            _context3.prev = 3;\n            _context3.next = 6;\n            return communicationService.createCommunicationType(itemCopy);\n\n          case 6:\n            response = _context3.sent;\n            eventBus.$emit('notificationInfo', 'Sucessfully added');\n            return _context3.abrupt(\"return\", response.id);\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](3);\n            throw _context3.t0;\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 11]]);\n  }));\n\n  return function addCommunication(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var updateCommunication =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(id, item) {\n    var itemCopy;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            sanitizer(itemCopy, fieldsToSend);\n            _context4.prev = 3;\n            _context4.next = 6;\n            return communicationService.updateCommunicationType(id, itemCopy);\n\n          case 6:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context4.next = 12;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](3);\n            throw _context4.t0;\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[3, 9]]);\n  }));\n\n  return function updateCommunication(_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var deleteCommunication =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(id) {\n    var domainId;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return communicationService.deleteCommunicationType(id, domainId);\n\n          case 4:\n            _context5.next = 9;\n            break;\n\n          case 6:\n            _context5.prev = 6;\n            _context5.t0 = _context5[\"catch\"](1);\n            throw _context5.t0;\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 6]]);\n  }));\n\n  return function deleteCommunication(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/lookups/communications/communications.js"],"names":["instance","configuration","CommunicationTypeServiceApiFactory","eventBus","sanitizer","deepCopy","store","objCamelToSnake","communicationService","fieldsToSend","getCommunicationsList","page","size","search","domainId","state","userinfo","undefined","slice","defaultObject","_isSelected","searchCommunicationType","response","items","map","item","getCommunication","id","name","code","description","_dirty","readCommunicationType","addCommunication","itemCopy","createCommunicationType","$emit","updateCommunication","updateCommunicationType","deleteCommunication","deleteCommunicationType"],"mappings":"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","sourcesContent":["import instance from '../../instance';\nimport configuration from '../../openAPIConfig';\nimport {CommunicationTypeServiceApiFactory} from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport sanitizer from \"../../utils/sanitizer\";\nimport deepCopy from 'deep-copy';\nimport store from '../../../store/store';\nimport {objCamelToSnake} from \"../../utils/caseConverters\";\n\nconst communicationService = new CommunicationTypeServiceApiFactory\n(configuration, '', instance);\n\nconst fieldsToSend = ['domainId', 'code', 'name', 'description'];\n\nexport const getCommunicationsList = async (page = 0, size = 10, search) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    if (search && search.slice(-1) !== '*') search += '*';\n    const defaultObject = {\n        _isSelected: false,\n    };\n    try {\n        const response = await communicationService.searchCommunicationType(page, size, search, domainId);\n        if (response.items) {\n            return response.items.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return [];\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getCommunication = async (id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        name: '',\n        code: '',\n        description: '',\n        _dirty: false,\n    };\n\n    try {\n        const response = await communicationService.readCommunicationType(id, domainId);\n        return {...defaultObject, ...response};\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const addCommunication = async (item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        const response = await communicationService.createCommunicationType(itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully added');\n        return response.id;\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const updateCommunication = async (id, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        await communicationService.updateCommunicationType(id, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const deleteCommunication = async (id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    try {\n        await communicationService.deleteCommunicationType(id, domainId);\n    } catch (err) {\n        throw err;\n    }\n};"]}]}