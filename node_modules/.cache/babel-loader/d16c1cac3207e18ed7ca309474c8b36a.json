{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/routing/dialplan/the-dialplan.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/routing/dialplan/the-dialplan.vue","mtime":1581514601003},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport tableComponentMixin from \"../../../mixins/tableComponentMixin\";\nimport { _checkboxTableField, _actionsTableField_3, _switcherWidth } from \"../../../utils/tableFieldPresets\";\nimport { mapActions, mapState } from \"vuex\";\nimport Sortable, { Swap } from 'sortablejs';\nSortable.mount(new Swap());\nvar isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\nvar sortableConfig = {\n  swap: true,\n  // Enable swap mode\n  swapClass: \"sortable-swap-highlight\",\n  // Class name for swap item (if swap mode is enabled)\n  animation: 150,\n  // ms, animation speed moving items when sorting, `0` â€” without animation\n  easing: \"cubic-bezier(1, 0, 0, 1)\",\n  // Easing for animation. Defaults to null. See https://easings.net/ for examples.\n  ghostClass: \"sortable-ghost\",\n  // Class name for the drop placeholder\n  chosenClass: \"sortable-chosen\",\n  // Class name for the chosen item\n  dragClass: \"sortable-drag\",\n  // Class name for the dragging item\n  direction: 'vertical',\n  // Direction of Sortable (will be detected automatically if not given)\n  forceFallback: isFirefox,\n  // ignore the HTML5 DnD behaviour and force the fallback to kick in\n  fallbackClass: \"sortable-fallback\",\n  // Class name for the cloned DOM Element when using forceFallback\n  setData: function setData(dataTransfer, draggedElement) {\n    dataTransfer.setData('foo', 'bar'); // required by Firefox in order to DnD work: https://stackoverflow.com/a/19055350/1411105\n  }\n};\nexport default {\n  name: \"the-dialplan\",\n  mixins: [tableComponentMixin],\n  data: function data() {\n    return {\n      sortableInstance: null,\n      fields: [_checkboxTableField, {\n        name: 'name',\n        title: this.$t('objects.name')\n      }, {\n        name: 'pattern',\n        title: this.$t('objects.routing.dialplan.pattern')\n      }, {\n        name: 'schema',\n        title: this.$tc('objects.routing.schema', 1)\n      }, {\n        name: 'enabled',\n        title: this.$t('objects.enabled'),\n        width: _switcherWidth\n      }, _actionsTableField_3]\n    };\n  },\n  watch: {\n    dataList: function dataList() {\n      this.initSortable();\n    }\n  },\n  computed: _objectSpread({}, mapState('routing/dialplan', {\n    dataList: function dataList(state) {\n      return state.dataList;\n    },\n    page: function page(state) {\n      return state.page;\n    },\n    // acts like a boolean: if page is 0, there's no back page\n    isNextPage: function isNextPage(state) {\n      return state.isNextPage;\n    }\n  }), {\n    size: {\n      get: function get() {\n        return this.$store.state.routing.dialplan.size;\n      },\n      set: function set(value) {\n        this.setSize(value);\n      }\n    },\n    search: {\n      get: function get() {\n        return this.$store.state.routing.dialplan.search;\n      },\n      set: function set(value) {\n        this.setSearch(value);\n      }\n    }\n  }),\n  methods: _objectSpread({\n    initSortable: function initSortable() {\n      var _this = this;\n\n      if (this.sortableInstance) this.sortableInstance.destroy(); // https://github.com/SortableJS/Sortable#options\n\n      var vuetableBody = document.querySelector('.vuetable-body');\n      this.sortableInstance = Sortable.create(vuetableBody, _objectSpread({}, sortableConfig, {\n        // Element dragging ended\n        onEnd: function () {\n          var _onEnd = _asyncToGenerator(\n          /*#__PURE__*/\n          regeneratorRuntime.mark(function _callee(event) {\n            var fromId, toId;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!(event.oldIndex === event.newIndex)) {\n                      _context.next = 2;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\");\n\n                  case 2:\n                    fromId = _this.dataList[event.oldIndex].id;\n                    toId = _this.dataList[event.newIndex].id;\n                    _context.next = 6;\n                    return _this.swapRows({\n                      fromId: fromId,\n                      toId: toId\n                    });\n\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function onEnd(_x) {\n            return _onEnd.apply(this, arguments);\n          }\n\n          return onEnd;\n        }()\n      }));\n    },\n    create: function create() {\n      this.$router.push('/routing/dialplan/new');\n    },\n    edit: function edit(rowId) {\n      this.$router.push({\n        name: 'dialplan-edit',\n        params: {\n          id: this.dataList[rowId].id\n        }\n      });\n    }\n  }, mapActions('routing/dialplan', {\n    loadDataList: 'LOAD_DATA_LIST',\n    setSize: 'SET_SIZE',\n    setSearch: 'SET_SEARCH',\n    toggleSwitchProperty: 'TOGGLE_ITEM_PROPERTY',\n    swapRows: 'SWAP_ROWS',\n    nextPage: 'NEXT_PAGE',\n    prevPage: 'PREV_PAGE',\n    removeItem: 'REMOVE_ITEM'\n  }))\n};",{"version":3,"sources":["the-dialplan.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryAction=\"create\"\n        >\n            {{$t('objects.routing.routing')}} |\n            {{$t('objects.routing.dialplan.dialplan')}}\n        </object-header>\n\n        <section class=\"object-content dialplan\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">{{$t('objects.routing.dialplan.dialplanRules')}}</h3>\n                <div class=\"content-header__actions-wrap\">\n                    <search\n                            v-model=\"search\"\n                            @filterData=\"loadList\"\n                    ></search>\n                    <i\n                            class=\"icon-icon_delete icon-action\"\n                            :class=\"{'hidden': anySelected}\"\n                            :title=\"$t('iconHints.deleteSelected')\"\n                            @click=\"deleteSelected\"\n                    ></i>\n                    <i\n                            class=\"icon-icon_reload icon-action\"\n                            :title=\"$t('iconHints.reload')\"\n                            @click=\"loadList\"\n                    ></i>\n                </div>\n            </header>\n\n            <loader v-show=\"!isLoaded\"></loader>\n\n            <vuetable\n                    v-show=\"isLoaded\"\n                    ref=\"vuetable\"\n                    :api-mode=\"false\"\n                    :fields=\"fields\"\n                    :data=\"dataList\"\n            >\n                <template slot=\"name\" slot-scope=\"props\">\n                    <div class=\"tt-capitalize\">\n                        <span class=\"nameLink\" @click=\"edit(props.rowIndex)\">\n                        {{dataList[props.rowIndex].name}}\n                        </span>\n                    </div>\n                </template>\n\n                <template slot=\"pattern\" slot-scope=\"props\">\n                    <div>\n                        {{dataList[props.rowIndex].pattern}}\n                    </div>\n                </template>\n\n                <template slot=\"schema\" slot-scope=\"props\">\n                    <div>\n                        {{dataList[props.rowIndex].schema.name || 'schema IS EMPTY'}}\n                    </div>\n                </template>\n\n                <template slot=\"enabled\" slot-scope=\"props\">\n                    <switcher\n                            :value=\"!dataList[props.rowIndex].disabled\"\n                            @input=\"toggleSwitchProperty(props.rowIndex)\"\n                    ></switcher>\n                </template>\n\n                <template slot=\"actions\" slot-scope=\"props\">\n                    <i class=\"vuetable-action icon-icon_draggable\"\n                       :title=\"$t('iconHints.draggable')\"\n                    ></i>\n                    <i class=\"vuetable-action icon-icon_edit\"\n                       :title=\"$t('iconHints.edit')\"\n                       @click=\"edit(props.rowIndex)\"\n                    ></i>\n                    <i class=\"vuetable-action icon-icon_delete\"\n                       :title=\"$t('iconHints.delete')\"\n                       @click=\"remove(props.rowIndex)\"\n                    ></i>\n                </template>\n            </vuetable>\n            <pagination\n                    v-show=\"isLoaded\"\n                    v-model=\"size\"\n                    @loadDataList=\"loadList\"\n                    @next=\"nextPage\"\n                    @prev=\"prevPage\"\n                    :isNext=\"isNextPage\"\n                    :isPrev=\"!!page\"\n            ></pagination>\n        </section>\n    </div>\n</template>\n\n<script>\n    import tableComponentMixin from '../../../mixins/tableComponentMixin';\n    import {_checkboxTableField, _actionsTableField_3, _switcherWidth} from \"../../../utils/tableFieldPresets\";\n    import {mapActions, mapState} from \"vuex\";\n    import Sortable, {Swap} from 'sortablejs';\n\n    Sortable.mount(new Swap());\n    const isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n    const sortableConfig = {\n        swap: true, // Enable swap mode\n        swapClass: \"sortable-swap-highlight\", // Class name for swap item (if swap mode is enabled)\n        animation: 150,  // ms, animation speed moving items when sorting, `0` â€” without animation\n        easing: \"cubic-bezier(1, 0, 0, 1)\", // Easing for animation. Defaults to null. See https://easings.net/ for examples.\n        ghostClass: \"sortable-ghost\",  // Class name for the drop placeholder\n        chosenClass: \"sortable-chosen\",  // Class name for the chosen item\n        dragClass: \"sortable-drag\",  // Class name for the dragging item\n\n        direction: 'vertical', // Direction of Sortable (will be detected automatically if not given)\n\n        forceFallback: isFirefox,  // ignore the HTML5 DnD behaviour and force the fallback to kick in\n        fallbackClass: \"sortable-fallback\",  // Class name for the cloned DOM Element when using forceFallback\n\n        setData: (dataTransfer, draggedElement) => {\n            dataTransfer.setData('foo', 'bar'); // required by Firefox in order to DnD work: https://stackoverflow.com/a/19055350/1411105\n        },\n    };\n\n    export default {\n        name: \"the-dialplan\",\n        mixins: [tableComponentMixin],\n        data() {\n            return {\n                sortableInstance: null,\n                fields: [\n                    _checkboxTableField,\n                    {name: 'name', title: this.$t('objects.name')},\n                    {name: 'pattern', title: this.$t('objects.routing.dialplan.pattern')},\n                    {name: 'schema', title: this.$tc('objects.routing.schema', 1)},\n                    {name: 'enabled', title: this.$t('objects.enabled'), width: _switcherWidth},\n                    _actionsTableField_3,\n                ],\n            };\n        },\n\n        watch: {\n            dataList() {\n                this.initSortable();\n            }\n        },\n\n        computed: {\n            ...mapState('routing/dialplan', {\n                dataList: state => state.dataList,\n                page: state => state.page, // acts like a boolean: if page is 0, there's no back page\n                isNextPage: state => state.isNextPage,\n            }),\n\n            size: {\n                get() {\n                    return this.$store.state.routing.dialplan.size\n                },\n                set(value) {\n                    this.setSize(value)\n                }\n            },\n\n            search: {\n                get() {\n                    return this.$store.state.routing.dialplan.search\n                },\n                set(value) {\n                    this.setSearch(value)\n                }\n            }\n        },\n\n        methods: {\n            initSortable() {\n                if (this.sortableInstance) this.sortableInstance.destroy();\n\n                // https://github.com/SortableJS/Sortable#options\n                const vuetableBody = document.querySelector('.vuetable-body');\n                this.sortableInstance = Sortable.create(vuetableBody, {\n                    ...sortableConfig,\n\n                    // Element dragging ended\n                    onEnd: async (event) => {\n                        if(event.oldIndex === event.newIndex) return;\n                        const fromId = this.dataList[event.oldIndex].id;\n                        const toId = this.dataList[event.newIndex].id;\n                        await this.swapRows({fromId, toId});\n                    },\n                });\n\n            },\n\n            create() {\n                this.$router.push('/routing/dialplan/new');\n            },\n\n            edit(rowId) {\n                this.$router.push({\n                    name: 'dialplan-edit',\n                    params: {id: this.dataList[rowId].id},\n                });\n            },\n\n            ...mapActions('routing/dialplan', {\n                loadDataList: 'LOAD_DATA_LIST',\n                setSize: 'SET_SIZE',\n                setSearch: 'SET_SEARCH',\n                toggleSwitchProperty: 'TOGGLE_ITEM_PROPERTY',\n                swapRows: 'SWAP_ROWS',\n                nextPage: 'NEXT_PAGE',\n                prevPage: 'PREV_PAGE',\n                removeItem: 'REMOVE_ITEM',\n            }),\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .dialplan .vuetable {\n        .sortable-chosen {\n            .icon-icon_draggable:before {\n                color: #000;\n            }\n        }\n        \n        .icon-action.icon-icon_draggable {\n            cursor: grab;\n        }\n        \n        .sortable-drag {\n            position: relative;\n            border-radius: $border-radius;\n        }\n\n        // Firefox fallback\n        .sortable-fallback {\n            display: grid;\n            grid-template-columns: 42px 1fr 1fr 1fr 10% 240px;\n            grid-column-gap: 10px;\n            align-items: center;\n        }\n\n        .sortable-swap-highlight {\n            background: $accent-color;\n        }\n    }\n</style>"],"sourceRoot":"src/components/routing/dialplan"}]}