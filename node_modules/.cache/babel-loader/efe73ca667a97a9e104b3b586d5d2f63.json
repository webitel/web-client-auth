{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/routing/sip-gateways/opened-trunking-sip-gateway-configuration.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/routing/sip-gateways/opened-trunking-sip-gateway-configuration.vue","mtime":1581336980421},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\nimport { mapActions, mapState } from \"vuex\";\nexport default {\n  name: \"opened-trunking-sip-gateway-configuration\",\n  mixins: [openedTabComponentMixin],\n  data: function data() {\n    return {\n      protocolList: ['any', 'udp', 'tcp']\n    };\n  },\n  computed: _objectSpread({}, mapState('routing/gateways', {\n    ipacl: function ipacl(state) {\n      return state.itemInstance.ipacl;\n    }\n  })),\n  methods: _objectSpread({}, mapActions('routing/gateways', {\n    setItemProp: 'SET_ITEM_PROPERTY',\n    addVariable: 'ADD_VARIABLE_PAIR',\n    setVariableProp: 'SET_VARIABLE_PROP',\n    deleteVariable: 'DELETE_VARIABLE_PAIR'\n  }))\n};",{"version":3,"sources":["opened-trunking-sip-gateway-configuration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA,OAAA,uBAAA,MAAA,kCAAA;AACA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,2CADA;AAEA,EAAA,MAAA,EAAA,CAAA,uBAAA,CAFA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA;AADA,KAAA;AAGA,GARA;AAUA,EAAA,QAAA,oBACA,QAAA,CAAA,kBAAA,EAAA;AACA,IAAA,KAAA,EAAA,eAAA,KAAA;AAAA,aAAA,KAAA,CAAA,YAAA,CAAA,KAAA;AAAA;AADA,GAAA,CADA,CAVA;AAgBA,EAAA,OAAA,oBACA,UAAA,CAAA,kBAAA,EAAA;AACA,IAAA,WAAA,EAAA,mBADA;AAEA,IAAA,WAAA,EAAA,mBAFA;AAGA,IAAA,eAAA,EAAA,mBAHA;AAIA,IAAA,cAAA,EAAA;AAJA,GAAA,CADA;AAhBA,CAAA","sourcesContent":["<template>\n    <section>\n        <header class=\"content-header\">\n            <h3 class=\"content-title\">{{$t('objects.routing.gateways.trunkingACLTitle')}}</h3>\n            <i\n                    class=\"icon-icon_plus icon-action\"\n                    :title=\"$t('iconHints.add')\"\n                    @click=\"addVariable\"\n            ></i>\n        </header>\n        <form class=\"object-input-grid grid-w50\">\n            <section class=\"value-pair-wrap\">\n                <div class=\"label\" :class=\"{'invalid': v.itemInstance.ipacl.$error}\">\n                    {{$t('objects.routing.gateways.trunkingACL')}}\n                </div>\n                <div class=\"value-pair\" v-for=\"(acl, key) in ipacl\">\n                    <dropdown-select\n                            :value=\"acl.proto\"\n                            :label=\"$t('objects.routing.protocol')\"\n                            :options=\"protocolList\"\n                            @input=\"setVariableProp({index: key, prop: 'proto', value: $event})\"\n                            hide-label\n                            hide-details\n                    ></dropdown-select>\n\n                    <form-input\n                            :value=\"acl.ip\"\n                            :v=\"ipacl.ip\"\n                            :label=\"$t('objects.routing.ip')\"\n                            @input=\"setVariableProp({index: key, prop: 'ip', value: $event})\"\n                            hide-label\n                            hide-details\n                            required\n                    ></form-input>\n\n                    <form-input\n                            :value=\"acl.port\"\n                            :label=\"$t('objects.routing.port')\"\n                            @input=\"setVariableProp({index: key, prop: 'port', value: $event})\"\n                            hide-label\n                            hide-details\n                    ></form-input>\n                    <i\n                            class=\"icon-icon_delete icon-action\"\n                            :title=\"$t('iconHints.delete')\"\n                            v-if=\"key !== 0\"\n                            @click=\"deleteVariable(key)\"\n                    ></i>\n                </div>\n            </section>\n        </form>\n    </section>\n</template>\n\n<script>\n    import openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: \"opened-trunking-sip-gateway-configuration\",\n        mixins: [openedTabComponentMixin],\n\n        data() {\n            return {\n                protocolList: ['any', 'udp', 'tcp'],\n            }\n        },\n\n        computed: {\n            ...mapState('routing/gateways', {\n                ipacl: state => state.itemInstance.ipacl\n            }),\n        },\n\n        methods: {\n            ...mapActions('routing/gateways', {\n                setItemProp: 'SET_ITEM_PROPERTY',\n                addVariable: 'ADD_VARIABLE_PAIR',\n                setVariableProp: 'SET_VARIABLE_PROP',\n                deleteVariable: 'DELETE_VARIABLE_PAIR',\n            }),\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .value-pair-wrap .value-pair {\n        grid-template-columns: 117px 1fr 80px 24px;\n    }\n</style>"],"sourceRoot":"src/components/routing/sip-gateways"}]}