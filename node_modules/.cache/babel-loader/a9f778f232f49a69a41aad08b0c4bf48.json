{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/integrations/storage/opened-storage-s3.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/integrations/storage/opened-storage-s3.vue","mtime":1580975580542},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\nimport { mapActions, mapState } from \"vuex\";\nimport DropdownSelect from \"../../utils/dropdown-select\";\nimport { AWSRegions, DigitalOceanRegions } from \"../../../api/integrations/storage/storage\";\nexport default {\n  name: \"opened-storage-aws\",\n  components: {\n    DropdownSelect: DropdownSelect\n  },\n  mixins: [openedTabComponentMixin],\n  data: function data() {\n    return {\n      service: {},\n      serviceOptions: [{\n        name: 'AWS S3 Bucket',\n        value: 'aws'\n      }, {\n        name: 'Digital Ocean Spaces',\n        value: 'do'\n      }, {\n        name: 'Custom',\n        value: 'custom'\n      }],\n      AWSRegions: AWSRegions,\n      DigitalOceanRegions: DigitalOceanRegions\n    };\n  },\n  mounted: function mounted() {\n    if (!this.id) this.setService({\n      name: 'AWS S3 Bucket',\n      value: 'aws'\n    });\n  },\n  computed: _objectSpread({}, mapState('integrations/storage', {\n    id: function id(state) {\n      return state.itemId;\n    }\n  }), {\n    keyId: {\n      get: function get() {\n        return this.$store.state.integrations.storage.itemInstance.properties.keyId;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'keyId',\n          value: value\n        });\n      }\n    },\n    accessKey: {\n      get: function get() {\n        return this.$store.state.integrations.storage.itemInstance.properties.accessKey;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'accessKey',\n          value: value\n        });\n      }\n    },\n    bucketName: {\n      get: function get() {\n        return this.$store.state.integrations.storage.itemInstance.properties.bucketName;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'bucketName',\n          value: value\n        });\n      }\n    },\n    endpoint: {\n      get: function get() {\n        return this.$store.state.integrations.storage.itemInstance.properties.endpoint;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'endpoint',\n          value: value\n        });\n      }\n    },\n    region: {\n      get: function get() {\n        return this.$store.state.integrations.storage.itemInstance.properties.region;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'region',\n          value: value\n        });\n      }\n    },\n    computeRegionOptions: function computeRegionOptions() {\n      if (this.endpoint.includes('aws')) {\n        return this.AWSRegions;\n      } else if (this.endpoint.includes('digitalocean')) {\n        return this.DigitalOceanRegions;\n      }\n\n      return [];\n    }\n  }),\n  methods: _objectSpread({}, mapActions('integrations/storage', {\n    setItemProp: 'SET_ITEM_PROPERTIES_PROPERTY'\n  }), {\n    setService: function setService(value) {\n      this.service = value;\n\n      if (this.service.value === 'aws') {\n        this.endpoint = 'amazonaws.com';\n        this.region = {};\n      } else if (this.service.value === 'do') {\n        this.endpoint = 'digitaloceanspaces.com';\n        this.region = {};\n      } else {\n        this.endpoint = '';\n        this.region = '';\n      }\n    }\n  })\n};",{"version":3,"sources":["opened-storage-s3.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <section>\n        <header class=\"content-header\">\n            <h3 class=\"content-title\">{{$t('objects.integrations.storage.s3')}}</h3>\n        </header>\n        <form class=\"object-input-grid\">\n            <form-input\n                    v-model=\"keyId\"\n                    :v=\"v.itemInstance.properties.keyId\"\n                    :label=\"$t('objects.integrations.storage.s3Key')\"\n                    required\n            ></form-input>\n            <form-input\n                    v-model=\"accessKey\"\n                    :v=\"v.itemInstance.properties.accessKey\"\n                    :label=\"$t('objects.integrations.storage.s3Access')\"\n                    required\n            ></form-input>\n            <form-input\n                    v-model=\"bucketName\"\n                    :v=\"v.itemInstance.properties.bucketName\"\n                    :label=\"$t('objects.integrations.storage.bucket')\"\n                    required\n            ></form-input>\n            <dropdown-select\n                    v-if=\"!this.id\"\n                    :value=\"service\"\n                    :options=\"serviceOptions\"\n                    :label=\"$t('objects.integrations.storage.service')\"\n                    @input=\"setService\"\n            ></dropdown-select>\n            <dropdown-select\n                    v-show=\"service.value !== 'custom'\"\n                    v-model=\"region\"\n                    :v=\"v.itemInstance.properties.region\"\n                    :options=\"computeRegionOptions\"\n                    :label=\"$t('objects.integrations.storage.region')\"\n                    required\n            ></dropdown-select>\n            <form-input\n                    v-show=\"service.value === 'custom'\"\n                    v-model=\"endpoint\"\n                    :v=\"v.itemInstance.properties.endpoint\"\n                    :label=\"$t('objects.integrations.storage.s3Endpoint')\"\n                    required\n            ></form-input>\n            <form-input\n                    v-show=\"service.value === 'custom'\"\n                    v-model=\"region\"\n                    :v=\"v.itemInstance.properties.region\"\n                    :label=\"$t('objects.integrations.storage.region')\"\n                    required\n            ></form-input>\n        </form>\n    </section>\n</template>\n\n<script>\n    import openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\n    import {mapActions, mapState} from \"vuex\";\n    import DropdownSelect from \"../../utils/dropdown-select\";\n    import {AWSRegions, DigitalOceanRegions} from \"../../../api/integrations/storage/storage\";\n\n    export default {\n        name: \"opened-storage-aws\",\n        components: {DropdownSelect},\n        mixins: [openedTabComponentMixin],\n        data() {\n            return {\n                service: {},\n                serviceOptions: [\n                    {name: 'AWS S3 Bucket', value: 'aws'},\n                    {name: 'Digital Ocean Spaces', value: 'do'},\n                    {name: 'Custom', value: 'custom'}],\n                AWSRegions,\n                DigitalOceanRegions,\n            }\n        },\n\n        mounted() {\n            if(!this.id) this.setService({name: 'AWS S3 Bucket', value: 'aws'});\n        },\n\n        computed: {\n            ...mapState('integrations/storage', {\n                id: state => state.itemId,\n            }),\n\n            keyId: {\n                get() {\n                    return this.$store.state.integrations.storage.itemInstance.properties.keyId\n                },\n                set(value) {\n                    this.setItemProp({prop: 'keyId', value})\n                }\n            },\n            accessKey: {\n                get() {\n                    return this.$store.state.integrations.storage.itemInstance.properties.accessKey\n                },\n                set(value) {\n                    this.setItemProp({prop: 'accessKey', value})\n                }\n            },\n            bucketName: {\n                get() {\n                    return this.$store.state.integrations.storage.itemInstance.properties.bucketName\n                },\n                set(value) {\n                    this.setItemProp({prop: 'bucketName', value})\n                }\n            },\n            endpoint: {\n                get() {\n                    return this.$store.state.integrations.storage.itemInstance.properties.endpoint\n                },\n                set(value) {\n                    this.setItemProp({prop: 'endpoint', value})\n                }\n            },\n            region: {\n                get() {\n                    return this.$store.state.integrations.storage.itemInstance.properties.region\n                },\n                set(value) {\n                    this.setItemProp({prop: 'region', value})\n                }\n            },\n\n            computeRegionOptions() {\n                if (this.endpoint.includes('aws')) {\n                    return this.AWSRegions;\n                } else if (this.endpoint.includes('digitalocean')) {\n                    return this.DigitalOceanRegions;\n                }\n                return []\n            }\n        },\n\n        methods: {\n            ...mapActions('integrations/storage', {\n                setItemProp: 'SET_ITEM_PROPERTIES_PROPERTY',\n            }),\n\n            setService(value) {\n                this.service = value;\n                if (this.service.value === 'aws') {\n                    this.endpoint = 'amazonaws.com';\n                    this.region = {};\n                } else if (this.service.value === 'do') {\n                    this.endpoint = 'digitaloceanspaces.com';\n                    this.region = {};\n                } else {\n                    this.endpoint = '';\n                    this.region = '';\n                }\n            }\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/components/integrations/storage"}]}