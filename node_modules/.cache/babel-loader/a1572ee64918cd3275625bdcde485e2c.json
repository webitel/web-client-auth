{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/permissions/roles/roles.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/permissions/roles/roles.js","mtime":1580810318071},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../../instance\";\nimport eventBus from \"../../../utils/eventBus\";\nimport sanitizer from \"../../utils/sanitizer\";\nvar BASE_URL = '/roles';\nvar fieldsToSend = ['name', 'description'];\nexport var getRoleList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var page,\n        size,\n        search,\n        url,\n        defaultObject,\n        response,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;\n            size = _args.length > 1 && _args[1] !== undefined ? _args[1] : 10;\n            search = _args.length > 2 ? _args[2] : undefined;\n            // let url = `${BASE_URL}?page=${page}size=${size}`;\n            url = \"\".concat(BASE_URL, \"?size=\").concat(size);\n            if (search) url += \"name='\".concat(search, \"*\");\n            defaultObject = {\n              name: '',\n              _isSelected: false\n            };\n            _context.prev = 6;\n            _context.next = 9;\n            return instance.get(url);\n\n          case 9:\n            response = _context.sent;\n\n            if (!response.results) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.results.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", []);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            throw _context.t0;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function getRoleList() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getRole =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(id) {\n    var url, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            url = BASE_URL + '/' + id;\n            defaultObject = {\n              // default object prototype, to merge response with it to get all fields\n              name: 'name undefined',\n              id: 0,\n              _dirty: false\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return instance.get(url);\n\n          case 5:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", _objectSpread({}, defaultObject, {}, response.role));\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            throw _context2.t0;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function getRole(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var addRole =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(item) {\n    var response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            sanitizer(item, fieldsToSend);\n            _context3.prev = 1;\n            _context3.next = 4;\n            return instance.post(BASE_URL, {\n              role: item\n            });\n\n          case 4:\n            response = _context3.sent;\n            eventBus.$emit('notificationInfo', 'Sucessfully added');\n            return _context3.abrupt(\"return\", response.created.id);\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](1);\n            throw _context3.t0;\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 9]]);\n  }));\n\n  return function addRole(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var updateRole =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(id, item) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            url = BASE_URL + '/' + id;\n            sanitizer(item, fieldsToSend);\n            _context4.prev = 2;\n            _context4.next = 5;\n            return instance.put(url, {\n              role: item\n            });\n\n          case 5:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context4.next = 11;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](2);\n            throw _context4.t0;\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[2, 8]]);\n  }));\n\n  return function updateRole(_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var deleteRole =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(id) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            url = BASE_URL + '/' + id;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return instance.delete(url);\n\n          case 4:\n            _context5.next = 9;\n            break;\n\n          case 6:\n            _context5.prev = 6;\n            _context5.t0 = _context5[\"catch\"](1);\n            throw _context5.t0;\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 6]]);\n  }));\n\n  return function deleteRole(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/permissions/roles/roles.js"],"names":["instance","eventBus","sanitizer","BASE_URL","fieldsToSend","getRoleList","page","size","search","url","defaultObject","name","_isSelected","get","response","results","map","item","getRole","id","_dirty","role","addRole","post","$emit","created","updateRole","put","deleteRole","delete"],"mappings":"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","sourcesContent":["import instance from '../../instance';\nimport eventBus from \"../../../utils/eventBus\";\nimport sanitizer from \"../../utils/sanitizer\";\n\nconst BASE_URL = '/roles';\nconst fieldsToSend = ['name', 'description'];\n\nexport const getRoleList = async (page = 0, size = 10, search) => {\n    // let url = `${BASE_URL}?page=${page}size=${size}`;\n    let url = `${BASE_URL}?size=${size}`;\n    if(search) url += `name='${search}*`;\n    const defaultObject = {\n        name: '',\n        _isSelected: false,\n    };\n\n    try {\n        let response = await instance.get(url);\n        if (response.results) {\n            return response.results.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return [];\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const getRole = async (id) => {\n    const url = BASE_URL + '/' + id;\n    const defaultObject = {  // default object prototype, to merge response with it to get all fields\n        name: 'name undefined',\n        id: 0,\n        _dirty: false,\n    };\n    try {\n        const response = await instance.get(url);\n        return {...defaultObject, ...response.role};\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const addRole = async (item) => {\n    sanitizer(item, fieldsToSend);\n    try {\n        const response = await instance.post(BASE_URL, {role: item});\n        eventBus.$emit('notificationInfo', 'Sucessfully added');\n        return response.created.id;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const updateRole = async (id, item) => {\n    const url = BASE_URL + '/' + id;\n    sanitizer(item, fieldsToSend);\n    try {\n        await instance.put(url, {role: item});\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const deleteRole = async (id) => {\n    const url = BASE_URL + '/' + id;\n\n    try {\n        await instance.delete(url);\n    } catch (error) {\n        throw error;\n    }\n};\n\n"]}]}