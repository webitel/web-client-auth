{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/lookups/blacklists/blacklistNumbers.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/lookups/blacklists/blacklistNumbers.js","mtime":1580827034662},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../../instance\";\nimport configuration from \"../../openAPIConfig\";\nimport { ListServiceApiFactory } from 'webitel-sdk';\nimport sanitizer from \"../../utils/sanitizer\";\nimport eventBus from \"../../../utils/eventBus\";\nimport store from \"../../../store/store\";\nimport deepCopy from 'deep-copy';\nvar listService = new ListServiceApiFactory(configuration, '', instance);\nvar fieldsToSend = ['domainId', 'listId', 'description', 'number'];\nexport var getBlacklistCommunicationList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(listId) {\n    var page,\n        size,\n        search,\n        domainId,\n        defaultObject,\n        response,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n            size = _args.length > 2 && _args[2] !== undefined ? _args[2] : 10;\n            search = _args.length > 3 ? _args[3] : undefined;\n            domainId = store.state.userinfo.domainId || undefined;\n            if (search && search.slice(-1) !== '*') search += '*';\n            defaultObject = {\n              name: '',\n              _isSelected: false\n            };\n            _context.prev = 6;\n            _context.next = 9;\n            return listService.searchListCommunication(listId, page, size, search, domainId);\n\n          case 9:\n            response = _context.sent;\n\n            if (!response.items) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.items.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", []);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            throw _context.t0;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function getBlacklistCommunicationList(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getBlacklistCommunication =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(listId, id) {\n    var domainId, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              _dirty: false\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return listService.readListCommunication(listId, id, domainId);\n\n          case 5:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", _objectSpread({}, defaultObject, {}, response));\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            throw _context2.t0;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function getBlacklistCommunication(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var addBlacklistCommunication =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(listId, item) {\n    var itemCopy, response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.listId = listId;\n            sanitizer(item, fieldsToSend);\n            _context3.prev = 4;\n            _context3.next = 7;\n            return listService.createListCommunication(listId, itemCopy);\n\n          case 7:\n            response = _context3.sent;\n            eventBus.$emit('notificationInfo', 'Sucessfully added');\n            return _context3.abrupt(\"return\", response.id);\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](4);\n            throw _context3.t0;\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[4, 12]]);\n  }));\n\n  return function addBlacklistCommunication(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var updateBlacklistCommunication =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(listId, id, item) {\n    var itemCopy;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.listId = listId;\n            sanitizer(itemCopy, fieldsToSend);\n            _context4.prev = 4;\n            _context4.next = 7;\n            return listService.updateListCommunication(listId, id, itemCopy);\n\n          case 7:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context4.next = 13;\n            break;\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](4);\n            throw _context4.t0;\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[4, 10]]);\n  }));\n\n  return function updateBlacklistCommunication(_x6, _x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var deleteBlacklistCommunication =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(listId, id) {\n    var domainId;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return listService.deleteListCommunication(listId, id, domainId);\n\n          case 4:\n            _context5.next = 9;\n            break;\n\n          case 6:\n            _context5.prev = 6;\n            _context5.t0 = _context5[\"catch\"](1);\n            throw _context5.t0;\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 6]]);\n  }));\n\n  return function deleteBlacklistCommunication(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/lookups/blacklists/blacklistNumbers.js"],"names":["instance","configuration","ListServiceApiFactory","sanitizer","eventBus","store","deepCopy","listService","fieldsToSend","getBlacklistCommunicationList","listId","page","size","search","domainId","state","userinfo","undefined","slice","defaultObject","name","_isSelected","searchListCommunication","response","items","map","item","getBlacklistCommunication","id","_dirty","readListCommunication","addBlacklistCommunication","itemCopy","createListCommunication","$emit","updateBlacklistCommunication","updateListCommunication","deleteBlacklistCommunication","deleteListCommunication"],"mappings":"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","sourcesContent":["import instance from '../../instance';\nimport configuration from '../../openAPIConfig';\nimport {ListServiceApiFactory} from 'webitel-sdk';\nimport sanitizer from \"../../utils/sanitizer\";\nimport eventBus from \"../../../utils/eventBus\";\nimport store from \"../../../store/store\";\nimport deepCopy from 'deep-copy';\n\nconst listService = new ListServiceApiFactory\n(configuration, '', instance);\n\nconst fieldsToSend = ['domainId', 'listId', 'description', 'number'];\n\nexport const getBlacklistCommunicationList = async (listId, page = 0, size = 10, search) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    if (search && search.slice(-1) !== '*') search += '*';\n    const defaultObject = {\n        name: '',\n        _isSelected: false,\n    };\n    try {\n        const response = await listService.searchListCommunication(listId, page, size, search, domainId);\n        if (response.items) {\n            return response.items.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return [];\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getBlacklistCommunication = async (listId, id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        _dirty: false,\n    };\n    try {\n        const response = await listService.readListCommunication(listId, id, domainId);\n        return {...defaultObject, ...response};\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const addBlacklistCommunication = async (listId, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.listId = listId;\n    sanitizer(item, fieldsToSend);\n    try {\n        const response = await listService.createListCommunication(listId, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully added');\n        return response.id;\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const updateBlacklistCommunication = async (listId, id, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.listId = listId;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        await listService.updateListCommunication(listId, id, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const deleteBlacklistCommunication = async (listId, id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    try {\n        await listService.deleteListCommunication(listId, id, domainId);\n    } catch (err) {\n        throw err;\n    }\n};"]}]}