{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/contact-center/teams/teams.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/contact-center/teams/teams.js","mtime":1580815302230},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../../instance\";\nimport configuration from \"../../openAPIConfig\";\nimport sanitizer from \"../../utils/sanitizer\";\nimport { AgentTeamServiceApiFactory } from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport { coerceObjectPermissionsResponse } from \"../../permissions/objects/objects\";\nimport deepCopy from 'deep-copy';\nimport store from \"../../../store/store\";\nvar teamService = new AgentTeamServiceApiFactory(configuration, '', instance);\nvar BASE_URL = '/call_center/teams';\nvar fieldsToSend = ['domainId', 'name', 'description', 'strategy', 'maxNoAnswer', 'wrapUpTime', 'rejectDelayTime', 'busyDelayTime', 'noAnswerDelayTime', 'callTimeout'];\nexport var strategiesList = {\n  'random': 'Random',\n  'fewest-calls': 'Agent with fewest calls',\n  'least-talk-time': 'Agent with least talk time',\n  'top-down': 'Top-Down',\n  'round-robin': 'Round robbin',\n  'longest-idle-time': 'Longest idle Agent'\n};\nexport var getTeamsList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var page,\n        size,\n        search,\n        domainId,\n        defaultObject,\n        response,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;\n            size = _args.length > 1 && _args[1] !== undefined ? _args[1] : 10;\n            search = _args.length > 2 ? _args[2] : undefined;\n            domainId = store.state.userinfo.domainId || undefined;\n            if (search && search.slice(-1) !== '*') search += '*';\n            defaultObject = {\n              _isSelected: false,\n              name: ''\n            };\n            _context.prev = 6;\n            _context.next = 9;\n            return teamService.searchAgentTeam(page, size, search, domainId);\n\n          case 9:\n            response = _context.sent;\n\n            if (!response.items) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.items.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", []);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            throw _context.t0;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function getTeamsList() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getTeam =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(id) {\n    var domainId, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              name: '',\n              id: 0,\n              _dirty: false\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return teamService.readAgentTeam(id, domainId);\n\n          case 5:\n            response = _context2.sent;\n            response.strategy = {\n              name: strategiesList[response.strategy],\n              value: response.strategy\n            };\n            return _context2.abrupt(\"return\", _objectSpread({}, defaultObject, {}, response));\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](2);\n            throw _context2.t0;\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 10]]);\n  }));\n\n  return function getTeam(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var addTeam =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(item) {\n    var itemCopy, response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.strategy = itemCopy.strategy.value;\n            sanitizer(itemCopy, fieldsToSend);\n            _context3.prev = 4;\n            _context3.next = 7;\n            return teamService.createAgentTeam(itemCopy);\n\n          case 7:\n            response = _context3.sent;\n            eventBus.$emit('notificationInfo', 'Sucessfully added');\n            return _context3.abrupt(\"return\", response.id);\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](4);\n            throw _context3.t0;\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[4, 12]]);\n  }));\n\n  return function addTeam(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var updateTeam =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(id, item) {\n    var itemCopy;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.strategy = itemCopy.strategy.value;\n            sanitizer(itemCopy, fieldsToSend);\n            _context4.prev = 4;\n            _context4.next = 7;\n            return teamService.updateAgentTeam(id, itemCopy);\n\n          case 7:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context4.next = 13;\n            break;\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](4);\n            throw _context4.t0;\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[4, 10]]);\n  }));\n\n  return function updateTeam(_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var deleteTeam =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(id) {\n    var domainId;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return teamService.deleteAgentTeam(id, domainId);\n\n          case 4:\n            _context5.next = 9;\n            break;\n\n          case 6:\n            _context5.prev = 6;\n            _context5.t0 = _context5[\"catch\"](1);\n            throw _context5.t0;\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 6]]);\n  }));\n\n  return function deleteTeam(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var getTeamPermissions =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(id) {\n    var page,\n        size,\n        search,\n        url,\n        response,\n        _args6 = arguments;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            page = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : 0;\n            size = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : 10;\n            search = _args6.length > 3 ? _args6[3] : undefined;\n            // let url = BASE_URL + `?page=${page}size=${size}`;\n            url = BASE_URL + '/' + id + '/acl' + \"?size=\".concat(size);\n            if (search) url += \"&name=\".concat(search, \"*\");\n            _context6.prev = 5;\n            _context6.next = 8;\n            return instance.get(url);\n\n          case 8:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", coerceObjectPermissionsResponse(response));\n\n          case 12:\n            _context6.prev = 12;\n            _context6.t0 = _context6[\"catch\"](5);\n            throw _context6.t0;\n\n          case 15:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[5, 12]]);\n  }));\n\n  return function getTeamPermissions(_x6) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var patchTeamPermissions =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(id, item) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            url = BASE_URL + '/' + id + '/acl';\n            _context7.prev = 1;\n            _context7.next = 4;\n            return instance.patch(url, {\n              changes: item\n            });\n\n          case 4:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context7.next = 10;\n            break;\n\n          case 7:\n            _context7.prev = 7;\n            _context7.t0 = _context7[\"catch\"](1);\n            throw _context7.t0;\n\n          case 10:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 7]]);\n  }));\n\n  return function patchTeamPermissions(_x7, _x8) {\n    return _ref7.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/contact-center/teams/teams.js"],"names":["instance","configuration","sanitizer","AgentTeamServiceApiFactory","eventBus","coerceObjectPermissionsResponse","deepCopy","store","teamService","BASE_URL","fieldsToSend","strategiesList","getTeamsList","page","size","search","domainId","state","userinfo","undefined","slice","defaultObject","_isSelected","name","searchAgentTeam","response","items","map","item","getTeam","id","_dirty","readAgentTeam","strategy","value","addTeam","itemCopy","createAgentTeam","$emit","updateTeam","updateAgentTeam","deleteTeam","deleteAgentTeam","getTeamPermissions","url","get","patchTeamPermissions","patch","changes"],"mappings":"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","sourcesContent":["import instance from '../../instance';\nimport configuration from '../../openAPIConfig';\nimport sanitizer from '../../utils/sanitizer';\nimport {AgentTeamServiceApiFactory} from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport {coerceObjectPermissionsResponse} from \"../../permissions/objects/objects\";\nimport deepCopy from 'deep-copy';\nimport store from '../../../store/store';\n\nconst teamService = new AgentTeamServiceApiFactory\n(configuration, '', instance);\n\nconst BASE_URL = '/call_center/teams';\nconst fieldsToSend = ['domainId', 'name', 'description', 'strategy', 'maxNoAnswer', 'wrapUpTime',\n    'rejectDelayTime', 'busyDelayTime', 'noAnswerDelayTime', 'callTimeout'];\n\nexport const strategiesList = {\n    'random': 'Random',\n    'fewest-calls': 'Agent with fewest calls',\n    'least-talk-time': 'Agent with least talk time',\n    'top-down': 'Top-Down',\n    'round-robin': 'Round robbin',\n    'longest-idle-time': 'Longest idle Agent',\n};\n\nexport const getTeamsList = async (page = 0, size = 10, search) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    if(search && search.slice(-1) !== '*') search += '*';\n    const defaultObject = {\n        _isSelected: false,\n        name: '',\n    };\n\n    try {\n        const response = await teamService.searchAgentTeam(page, size, search, domainId);\n        if (response.items) {\n            return response.items.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return [];\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getTeam = async (id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        name: '',\n        id: 0,\n        _dirty: false,\n    };\n    try {\n        let response = await teamService.readAgentTeam(id, domainId);\n        response.strategy = {\n            name: strategiesList[response.strategy],\n            value: response.strategy,\n        };\n        return {...defaultObject, ...response};\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const addTeam = async (item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.strategy = itemCopy.strategy.value;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        const response = await teamService.createAgentTeam(itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully added');\n        return response.id;\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const updateTeam = async (id, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.strategy = itemCopy.strategy.value;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        await teamService.updateAgentTeam(id, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const deleteTeam = async (id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    try {\n        await teamService.deleteAgentTeam(id, domainId);\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getTeamPermissions = async (id, page = 0, size = 10, search) => {\n    // let url = BASE_URL + `?page=${page}size=${size}`;\n    let url = BASE_URL + '/' + id + '/acl' + `?size=${size}`;\n    if (search) url += `&name=${search}*`;\n    try {\n        const response = await instance.get(url);\n        return coerceObjectPermissionsResponse(response);\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const patchTeamPermissions = async (id, item) => {\n    const url = BASE_URL + '/' + id + '/acl';\n\n    try {\n        await instance.patch(url, {changes: item});\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (error) {\n        throw error;\n    }\n};"]}]}