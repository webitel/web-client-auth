{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/store/modules/directory/devices/history.js","dependencies":[{"path":"/home/dev/work/client-auth/src/store/modules/directory/devices/history.js","mtime":1580199401033},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { getDeviceHistory } from \"../../../../api/directory/devices/devices\";\n\nvar defaultState = function defaultState() {\n  return {\n    date: Date.now()\n  };\n};\n\nvar state = {\n  dataList: [],\n  size: '10',\n  search: '',\n  page: 0,\n  isNextPage: true,\n  itemId: 0\n};\nvar getters = {};\nvar actions = {\n  SET_HISTORY_ITEM_ID: function SET_HISTORY_ITEM_ID(context, id) {\n    context.commit('SET_HISTORY_ITEM_ID', id);\n  },\n  LOAD_HISTORY_DATA_LIST: function () {\n    var _LOAD_HISTORY_DATA_LIST = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(context) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getDeviceHistory(state.itemId, state.date, state.page);\n\n            case 2:\n              response = _context.sent;\n              context.commit('SET_HISTORY_DATA_LIST', response);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function LOAD_HISTORY_DATA_LIST(_x) {\n      return _LOAD_HISTORY_DATA_LIST.apply(this, arguments);\n    }\n\n    return LOAD_HISTORY_DATA_LIST;\n  }(),\n  SET_HISTORY_SIZE: function SET_HISTORY_SIZE(context, size) {\n    context.commit('SET_HISTORY_SIZE', size);\n    context.dispatch('LOAD_HISTORY_DATA_LIST');\n  },\n  SET_HISTORY_SEARCH: function SET_HISTORY_SEARCH(context, search) {\n    context.commit('SET_HISTORY_SEARCH', search);\n    context.dispatch('LOAD_HISTORY_DATA_LIST');\n  },\n  NEXT_HISTORY_PAGE: function NEXT_HISTORY_PAGE(context) {\n    if (state.isNextPage) {\n      context.commit('INCREMENT_HISTORY_PAGE');\n      context.dispatch('LOAD_HISTORY_DATA_LIST');\n    }\n  },\n  PREV_HISTORY_PAGE: function PREV_HISTORY_PAGE(context) {\n    if (state.page) {\n      context.commit('DECREMENT_HISTORY_PAGE');\n      context.dispatch('LOAD_HISTORY_DATA_LIST');\n    }\n  },\n  SET_HISTORY_DATE: function SET_HISTORY_DATE(context, date) {\n    context.commit('SET_HISTORY_DATE', date);\n    context.dispatch('LOAD_HISTORY_DATA_LIST');\n  },\n  RESET_ITEM_STATE: function () {\n    var _RESET_ITEM_STATE = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(context) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              context.commit('RESET_ITEM_STATE');\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function RESET_ITEM_STATE(_x2) {\n      return _RESET_ITEM_STATE.apply(this, arguments);\n    }\n\n    return RESET_ITEM_STATE;\n  }()\n};\nvar mutations = {\n  SET_HISTORY_ITEM_ID: function SET_HISTORY_ITEM_ID(state, id) {\n    state.itemId = id;\n  },\n  SET_HISTORY_DATA_LIST: function SET_HISTORY_DATA_LIST(state, list) {\n    state.dataList = list;\n  },\n  SET_HISTORY_SIZE: function SET_HISTORY_SIZE(state, size) {\n    state.size = size;\n  },\n  SET_HISTORY_SEARCH: function SET_HISTORY_SEARCH(state, search) {\n    state.search = search;\n  },\n  INCREMENT_HISTORY_PAGE: function INCREMENT_HISTORY_PAGE(state) {\n    state.page++;\n  },\n  DECREMENT_HISTORY_PAGE: function DECREMENT_HISTORY_PAGE(state) {\n    state.page--;\n  },\n  SET_HISTORY_DATE: function SET_HISTORY_DATE(state, date) {\n    state.date = date;\n  },\n  RESET_ITEM_STATE: function RESET_ITEM_STATE(state) {\n    Object.assign(state, defaultState());\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/home/dev/work/client-auth/src/store/modules/directory/devices/history.js"],"names":["getDeviceHistory","defaultState","date","Date","now","state","dataList","size","search","page","isNextPage","itemId","getters","actions","SET_HISTORY_ITEM_ID","context","id","commit","LOAD_HISTORY_DATA_LIST","response","SET_HISTORY_SIZE","dispatch","SET_HISTORY_SEARCH","NEXT_HISTORY_PAGE","PREV_HISTORY_PAGE","SET_HISTORY_DATE","RESET_ITEM_STATE","mutations","SET_HISTORY_DATA_LIST","list","INCREMENT_HISTORY_PAGE","DECREMENT_HISTORY_PAGE","Object","assign"],"mappings":"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","sourcesContent":["import {\n    getDeviceHistory,\n} from \"../../../../api/directory/devices/devices\";\n\nconst defaultState = () => {\n    return {\n        date: Date.now(),\n    };\n};\n\nconst state = {\n    dataList: [],\n    size: '10',\n    search: '',\n    page: 0,\n    isNextPage: true,\n    itemId: 0,\n};\n\nconst getters = {};\n\nconst actions = {\n    SET_HISTORY_ITEM_ID: (context, id) => {\n        context.commit('SET_HISTORY_ITEM_ID', id);\n    },\n\n    LOAD_HISTORY_DATA_LIST: async (context) => {\n        const response = await getDeviceHistory(state.itemId, state.date, state.page);\n        context.commit('SET_HISTORY_DATA_LIST', response);\n    },\n\n    SET_HISTORY_SIZE: (context, size) => {\n        context.commit('SET_HISTORY_SIZE', size);\n        context.dispatch('LOAD_HISTORY_DATA_LIST');\n    },\n\n    SET_HISTORY_SEARCH: (context, search) => {\n        context.commit('SET_HISTORY_SEARCH', search);\n        context.dispatch('LOAD_HISTORY_DATA_LIST');\n    },\n\n    NEXT_HISTORY_PAGE: (context) => {\n        if(state.isNextPage) {\n            context.commit('INCREMENT_HISTORY_PAGE');\n            context.dispatch('LOAD_HISTORY_DATA_LIST');\n        }\n    },\n\n    PREV_HISTORY_PAGE: (context) => {\n        if(state.page) {\n            context.commit('DECREMENT_HISTORY_PAGE');\n            context.dispatch('LOAD_HISTORY_DATA_LIST');\n        }\n    },\n\n    SET_HISTORY_DATE: (context, date) => {\n        context.commit('SET_HISTORY_DATE', date);\n        context.dispatch('LOAD_HISTORY_DATA_LIST');\n    },\n\n    RESET_ITEM_STATE: async (context) => {\n        context.commit('RESET_ITEM_STATE');\n    },\n};\n\nconst mutations = {\n    SET_HISTORY_ITEM_ID: (state, id) => {\n        state.itemId = id;\n    },\n\n    SET_HISTORY_DATA_LIST: (state, list) => {\n        state.dataList = list;\n    },\n\n    SET_HISTORY_SIZE: (state, size) => {\n        state.size = size;\n    },\n\n    SET_HISTORY_SEARCH: (state, search) => {\n        state.search = search;\n    },\n\n    INCREMENT_HISTORY_PAGE: (state) => {\n        state.page++;\n    },\n\n    DECREMENT_HISTORY_PAGE: (state) => {\n        state.page--;\n    },\n\n    SET_HISTORY_DATE: (state, date) => {\n        state.date = date;\n    },\n\n    RESET_ITEM_STATE: (state) => {\n        Object.assign(state, defaultState());\n    },\n};\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations,\n};\n"]}]}