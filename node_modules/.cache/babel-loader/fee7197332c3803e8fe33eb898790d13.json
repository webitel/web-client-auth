{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/contact-center/teams/teamSkills.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/contact-center/teams/teamSkills.js","mtime":1580821831683},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../../instance\";\nimport configuration from \"../../openAPIConfig\";\nimport sanitizer from \"../../utils/sanitizer\";\nimport { ResourceTeamServiceApiFactory } from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport store from \"../../../store/store\";\nimport deepCopy from \"deep-copy\";\nvar teamResService = new ResourceTeamServiceApiFactory(configuration, '', instance);\nvar domainId = undefined;\nvar fieldsToSend = ['domainId', 'maxCapacity', 'minCapacity', 'teamId', 'lvl', 'bucket', 'skill'];\nexport var getTeamSkillsList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(teamId) {\n    var page,\n        size,\n        search,\n        domainId,\n        defaultObject,\n        response,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n            size = _args.length > 2 && _args[2] !== undefined ? _args[2] : 10;\n            search = _args.length > 3 ? _args[3] : undefined;\n            domainId = store.state.userinfo.domainId || undefined;\n            if (search && search.slice(-1) !== '*') search += '*';\n            defaultObject = {\n              agent: {},\n              minCapacity: 0,\n              maxCapacity: 0,\n              bucket: {},\n              lvl: 0,\n              _isSelected: false\n            };\n            _context.prev = 6;\n            _context.next = 9;\n            return teamResService.searchResourceTeamSkill(teamId, page, size, domainId);\n\n          case 9:\n            response = _context.sent;\n\n            if (!response.items) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.items.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", []);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            throw _context.t0;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function getTeamSkillsList(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getTeamSkill =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(teamId, id) {\n    var domainId, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              agent: {},\n              minCapacity: 0,\n              maxCapacity: 0,\n              bucket: {},\n              lvl: 0,\n              _dirty: false\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return teamResService.readResourceTeamSkill(teamId, id, domainId);\n\n          case 5:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", _objectSpread({}, defaultObject, {}, response));\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            throw _context2.t0;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function getTeamSkill(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var addTeamSkill =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(teamId, item) {\n    var itemCopy, response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.teamId = teamId;\n            sanitizer(itemCopy, fieldsToSend);\n            _context3.prev = 4;\n            _context3.next = 7;\n            return teamResService.createResourceTeamSkill(teamId, itemCopy);\n\n          case 7:\n            response = _context3.sent;\n            eventBus.$emit('notificationInfo', 'Sucessfully added');\n            return _context3.abrupt(\"return\", response.id);\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](4);\n            throw _context3.t0;\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[4, 12]]);\n  }));\n\n  return function addTeamSkill(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var updateTeamSkill =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(teamId, id, item) {\n    var itemCopy;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.teamId = teamId;\n            sanitizer(itemCopy, fieldsToSend);\n            _context4.prev = 4;\n            _context4.next = 7;\n            return teamResService.updateResourceTeamSkill(teamId, id, itemCopy);\n\n          case 7:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context4.next = 13;\n            break;\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](4);\n            throw _context4.t0;\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[4, 10]]);\n  }));\n\n  return function updateTeamSkill(_x6, _x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var deleteTeamSkill =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(teamId, id) {\n    var domainId;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return teamResService.deleteResourceTeamSkill(teamId, id, domainId);\n\n          case 4:\n            _context5.next = 9;\n            break;\n\n          case 6:\n            _context5.prev = 6;\n            _context5.t0 = _context5[\"catch\"](1);\n            throw _context5.t0;\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 6]]);\n  }));\n\n  return function deleteTeamSkill(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/contact-center/teams/teamSkills.js"],"names":["instance","configuration","sanitizer","ResourceTeamServiceApiFactory","eventBus","store","deepCopy","teamResService","domainId","undefined","fieldsToSend","getTeamSkillsList","teamId","page","size","search","state","userinfo","slice","defaultObject","agent","minCapacity","maxCapacity","bucket","lvl","_isSelected","searchResourceTeamSkill","response","items","map","item","getTeamSkill","id","_dirty","readResourceTeamSkill","addTeamSkill","itemCopy","createResourceTeamSkill","$emit","updateTeamSkill","updateResourceTeamSkill","deleteTeamSkill","deleteResourceTeamSkill"],"mappings":"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","sourcesContent":["import instance from '../../instance';\nimport configuration from '../../openAPIConfig';\nimport sanitizer from '../../utils/sanitizer';\nimport {ResourceTeamServiceApiFactory} from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport store from \"../../../store/store\";\nimport deepCopy from \"deep-copy\";\n\nconst teamResService = new ResourceTeamServiceApiFactory\n(configuration, '', instance);\n\nconst domainId = undefined;\nconst fieldsToSend = ['domainId', 'maxCapacity',\n    'minCapacity', 'teamId', 'lvl', 'bucket', 'skill'];\n\nexport const getTeamSkillsList = async (teamId, page = 0, size = 10, search) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    if (search && search.slice(-1) !== '*') search += '*';\n    const defaultObject = {\n        agent: {},\n        minCapacity: 0,\n        maxCapacity: 0,\n        bucket: {},\n        lvl: 0,\n        _isSelected: false,\n    };\n\n    try {\n        let response = await teamResService.searchResourceTeamSkill(teamId, page, size, domainId);\n        if (response.items) {\n            return response.items.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return [];\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getTeamSkill = async (teamId, id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        agent: {},\n        minCapacity: 0,\n        maxCapacity: 0,\n        bucket: {},\n        lvl: 0,\n        _dirty: false,\n    };\n\n    try {\n        let response = await teamResService.readResourceTeamSkill(teamId, id, domainId);\n        return {...defaultObject, ...response};\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const addTeamSkill = async (teamId, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.teamId = teamId;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        const response = await teamResService.createResourceTeamSkill(teamId, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully added');\n        return response.id;\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const updateTeamSkill = async (teamId, id, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.teamId = teamId;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        await teamResService.updateResourceTeamSkill(teamId, id, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const deleteTeamSkill = async (teamId, id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    try {\n        await teamResService.deleteResourceTeamSkill(teamId, id, domainId);\n    } catch (err) {\n        throw err;\n    }\n};"]}]}