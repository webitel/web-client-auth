{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/directory/users/the-users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/directory/users/the-users.vue","mtime":1581337168847},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport tableFilter from \"../../object-utils/utils/table-filter\";\nimport dropdownSelect from \"../../utils/dropdown-select\";\nimport uploadPopup from \"./upload-users-popup\";\nimport { _checkboxTableField, _actionsTableField_2 } from \"@/utils/tableFieldPresets\";\nimport tableComponentMixin from '@/mixins/tableComponentMixin';\nimport { mapActions, mapState } from \"vuex\";\nexport default {\n  name: \"the-users\",\n  components: {\n    uploadPopup: uploadPopup,\n    tableFilter: tableFilter,\n    dropdownSelect: dropdownSelect\n  },\n  mixins: [tableComponentMixin],\n  data: function data() {\n    return {\n      fields: [_checkboxTableField, {\n        name: 'name',\n        title: this.$t('objects.name')\n      }, {\n        name: 'username',\n        title: this.$t('objects.directory.users.login')\n      }, {\n        name: 'extensions',\n        title: this.$t('objects.directory.users.extensions')\n      }, {\n        name: 'DnD',\n        title: this.$t('objects.directory.users.DnD')\n      }, {\n        name: 'status',\n        title: this.$t('objects.directory.users.status')\n      }, _actionsTableField_2],\n      statusOptions: ['On break', 'Available', 'Chatting'],\n      csvFile: null\n    };\n  },\n  computed: _objectSpread({}, mapState('directory/users', {\n    dataList: function dataList(state) {\n      return state.dataList;\n    },\n    page: function page(state) {\n      return state.page;\n    },\n    // acts like a boolean: if page is 0, there's no back page\n    isNextPage: function isNextPage(state) {\n      return state.isNextPage;\n    }\n  }), {\n    size: {\n      get: function get() {\n        return this.$store.state.directory.users.size;\n      },\n      set: function set(value) {\n        this.setSize(value);\n      }\n    },\n    search: {\n      get: function get() {\n        return this.$store.state.directory.users.search;\n      },\n      set: function set(value) {\n        this.setSearch(value);\n      }\n    }\n  }),\n  methods: _objectSpread({\n    create: function create() {\n      this.$router.push('/directory/users/new');\n    },\n    edit: function edit(rowId) {\n      this.$router.push({\n        name: 'directory-users-edit',\n        params: {\n          id: this.dataList[rowId].id\n        }\n      });\n    },\n    processCSV: function processCSV(event) {\n      var file = event.target.files[0];\n\n      if (file) {\n        this.csvFile = file;\n        this.popupTriggerIf = true;\n      }\n    },\n    closeCSVPopup: function closeCSVPopup() {\n      this.loadList();\n      this.popupTriggerIf = false;\n      this.$refs['file-input'].value = null;\n    }\n  }, mapActions('directory/users', {\n    loadDataList: 'LOAD_DATA_LIST',\n    setSize: 'SET_SIZE',\n    setSearch: 'SET_SEARCH',\n    changeStatus: 'PATCH_ITEM_PEROPERTY',\n    toggleSwitchProperty: 'TOGGLE_ITEM_PROPERTY',\n    nextPage: 'NEXT_PAGE',\n    prevPage: 'PREV_PAGE',\n    removeItem: 'REMOVE_ITEM'\n  }))\n};",{"version":3,"sources":["the-users.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primary-action=\"create\"\n        >\n            {{$t('objects.directory.directory')}} |\n            {{$tc('objects.directory.users.users', 2)}}\n        </object-header>\n\n        <upload-popup\n                v-if=\"popupTriggerIf\"\n                :file=\"csvFile\"\n                @close=\"closeCSVPopup\"\n        ></upload-popup>\n\n        <section class=\"object-content\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">{{$t('objects.directory.users.allUsers')}}</h3>\n                <div class=\"content-header__actions-wrap\">\n                    <search\n                            v-model=\"search\"\n                            @filterData=\"loadList\"\n                    ></search>\n                    <i\n                            class=\"icon-icon_delete icon-action\"\n                            :class=\"{'hidden': anySelected}\"\n                            :title=\"$t('iconHints.deleteSelected')\"\n                            @click=\"deleteSelected\"\n                    ></i>\n                    <div\n                            class=\"upload-csv\"\n                            :title=\"$t('iconHints.upload')\"\n                    >\n                        <i\n                                class=\"icon-action icon-icon_upload\"\n                        ></i>\n                        <input\n                                ref=\"file-input\"\n                                class=\"upload-csv__input\"\n                                type=\"file\"\n                                @change=\"processCSV($event)\"\n                                accept=\".csv\"\n                        >\n                    </div>\n                    <i\n                            class=\"icon-action icon-icon_reload\"\n                            :title=\"$t('iconHints.reload')\"\n                            @click=\"loadList\"\n                    ></i>\n                </div>\n            </header>\n\n            <loader v-show=\"!isLoaded\"></loader>\n\n            <vuetable\n                    v-show=\"isLoaded\"\n                    :api-mode=\"false\"\n                    :fields=\"fields\"\n                    :data=\"dataList\"\n            >\n                <template slot=\"name\" slot-scope=\"props\">\n                    <div class=\"tt-capitalize\">\n                        <span class=\"nameLink\" @click=\"edit(props.rowIndex)\">\n                            {{dataList[props.rowIndex].name}}\n                        </span>\n                    </div>\n                </template>\n\n                <template slot=\"username\" slot-scope=\"props\">\n                    <div>\n                        {{dataList[props.rowIndex].username}}\n                    </div>\n                </template>\n\n                <template slot=\"extensions\" slot-scope=\"props\">\n                    <div>\n                        {{dataList[props.rowIndex].extension}}\n                    </div>\n                </template>\n\n                <template slot=\"DnD\" slot-scope=\"props\">\n                    <switcher\n                            :value=\"dataList[props.rowIndex].dnd\"\n                            @input=\"toggleSwitchProperty(props.rowIndex)\"\n                    ></switcher>\n                </template>\n\n                <template slot=\"status\" slot-scope=\"props\">\n                    <dropdown-select\n                            class=\"inline-dropdown inline-dropdown__options-right\"\n                            :value=\"dataList[props.rowIndex].status\"\n                            :placeholder=\"$t('objects.directory.users.status')\"\n                            :options=\"statusOptions\"\n                            taggable\n                            @input=\"changeStatus({value: $event, index: props.rowIndex})\"\n                    ></dropdown-select>\n                </template>\n\n                <template slot=\"actions\" slot-scope=\"props\">\n                    <i\n                            class=\"vuetable-action icon-icon_edit\"\n                            :title=\"$t('iconHints.edit')\"\n                            @click=\"edit(props.rowIndex)\"\n                    ></i>\n                    <i\n                            class=\"vuetable-action icon-icon_delete\"\n                            :title=\"$t('iconHints.delete')\"\n                            @click=\"remove(props.rowIndex)\"\n                    ></i>\n                </template>\n            </vuetable>\n            <pagination\n                    v-show=\"isLoaded\"\n                    v-model=\"size\"\n                    @loadDataList=\"loadList\"\n                    @next=\"nextPage\"\n                    @prev=\"prevPage\"\n                    :isNext=\"isNextPage\"\n                    :isPrev=\"!!page\"\n            ></pagination>\n        </section>\n    </div>\n</template>\n\n<script>\n    import tableFilter from '../../object-utils/utils/table-filter';\n    import dropdownSelect from '../../utils/dropdown-select';\n    import uploadPopup from './upload-users-popup';\n    import {_checkboxTableField, _actionsTableField_2} from \"@/utils/tableFieldPresets\";\n    import tableComponentMixin from '@/mixins/tableComponentMixin';\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: \"the-users\",\n        components: {\n            uploadPopup,\n            tableFilter,\n            dropdownSelect,\n        },\n        mixins: [tableComponentMixin],\n        data() {\n            return {\n                fields: [\n                    _checkboxTableField,\n                    {name: 'name', title: this.$t('objects.name')},\n                    {name: 'username', title: this.$t('objects.directory.users.login')},\n                    {name: 'extensions', title: this.$t('objects.directory.users.extensions')},\n                    {name: 'DnD', title: this.$t('objects.directory.users.DnD')},\n                    {name: 'status', title: this.$t('objects.directory.users.status')},\n                    _actionsTableField_2,\n                ],\n                statusOptions: ['On break', 'Available', 'Chatting'],\n                csvFile: null\n            };\n        },\n\n        computed: {\n            ...mapState('directory/users', {\n                dataList: state => state.dataList,\n                page: state => state.page, // acts like a boolean: if page is 0, there's no back page\n                isNextPage: state => state.isNextPage,\n            }),\n\n            size: {\n                get() {\n                    return this.$store.state.directory.users.size\n                },\n                set(value) {\n                    this.setSize(value)\n                }\n            },\n\n            search: {\n                get() {\n                    return this.$store.state.directory.users.search\n                },\n                set(value) {\n                    this.setSearch(value)\n                }\n            }\n        },\n\n        methods: {\n            create() {\n                this.$router.push('/directory/users/new');\n            },\n\n            edit(rowId) {\n                this.$router.push({\n                    name: 'directory-users-edit',\n                    params: {id: this.dataList[rowId].id},\n                });\n            },\n\n            processCSV(event) {\n                const file = event.target.files[0];\n                if (file) {\n                    this.csvFile = file;\n                    this.popupTriggerIf = true;\n                }\n            },\n\n            closeCSVPopup() {\n                this.loadList();\n                this.popupTriggerIf = false;\n                this.$refs['file-input'].value = null;\n            },\n\n            ...mapActions('directory/users', {\n                loadDataList: 'LOAD_DATA_LIST',\n                setSize: 'SET_SIZE',\n                setSearch: 'SET_SEARCH',\n                changeStatus: 'PATCH_ITEM_PEROPERTY',\n                toggleSwitchProperty: 'TOGGLE_ITEM_PROPERTY',\n                nextPage: 'NEXT_PAGE',\n                prevPage: 'PREV_PAGE',\n                removeItem: 'REMOVE_ITEM',\n            }),\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/components/directory/users"}]}