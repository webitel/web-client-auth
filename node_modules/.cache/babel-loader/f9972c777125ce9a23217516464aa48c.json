{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/routing/flow/flow.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/routing/flow/flow.js","mtime":1580815302642},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../../instance\";\nimport configuration from \"../../openAPIConfig\";\nimport { RoutingSchemaServiceApiFactory } from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport sanitizer from \"../../utils/sanitizer\";\nimport deepCopy from 'deep-copy';\nimport store from \"../../../store/store\";\nvar flowService = new RoutingSchemaServiceApiFactory(configuration, '', instance);\nvar fieldsToSend = ['domainId', 'name', 'schema', 'payload'];\nexport var getFlowList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var page,\n        size,\n        search,\n        domainId,\n        defaultObject,\n        response,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;\n            size = _args.length > 1 && _args[1] !== undefined ? _args[1] : 10;\n            search = _args.length > 2 ? _args[2] : undefined;\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              _isSelected: false // debug: false,\n              // type: 'Type is undefined',\n\n            };\n            if (search && search.slice(-1) !== '*') search += '*';\n            _context.prev = 6;\n            _context.next = 9;\n            return flowService.searchRoutingSchema(page, size, search, domainId);\n\n          case 9:\n            response = _context.sent;\n\n            if (!response.items) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.items.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", []);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            throw _context.t0;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function getFlowList() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getFlow =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(id) {\n    var domainId, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              _dirty: false\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return flowService.readRoutingSchema(id, domainId);\n\n          case 5:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", _objectSpread({}, response, {\n              schema: JSON.stringify(response.schema, null, 4)\n            }, defaultObject));\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            throw _context2.t0;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function getFlow(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var addFlow =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(item) {\n    var itemCopy, response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.schema = JSON.parse(itemCopy.schema);\n            itemCopy.payload = {};\n            sanitizer(itemCopy, fieldsToSend);\n            _context3.prev = 5;\n            _context3.next = 8;\n            return flowService.createRoutingSchema(itemCopy);\n\n          case 8:\n            response = _context3.sent;\n            eventBus.$emit('notificationInfo', 'Sucessfully added');\n            return _context3.abrupt(\"return\", response.id);\n\n          case 13:\n            _context3.prev = 13;\n            _context3.t0 = _context3[\"catch\"](5);\n            throw _context3.t0;\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[5, 13]]);\n  }));\n\n  return function addFlow(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var updateFlow =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(id, item) {\n    var itemCopy;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.schema = JSON.parse(itemCopy.schema);\n            itemCopy.payload = {};\n            sanitizer(itemCopy, fieldsToSend);\n            _context4.prev = 5;\n            _context4.next = 8;\n            return flowService.updateRoutingSchema(id, itemCopy);\n\n          case 8:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context4.next = 14;\n            break;\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](5);\n            throw _context4.t0;\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[5, 11]]);\n  }));\n\n  return function updateFlow(_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var deleteFlow =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(id) {\n    var domainId;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return flowService.deleteRoutingSchema(id, domainId);\n\n          case 4:\n            _context5.next = 9;\n            break;\n\n          case 6:\n            _context5.prev = 6;\n            _context5.t0 = _context5[\"catch\"](1);\n            throw _context5.t0;\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 6]]);\n  }));\n\n  return function deleteFlow(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/routing/flow/flow.js"],"names":["instance","configuration","RoutingSchemaServiceApiFactory","eventBus","sanitizer","deepCopy","store","flowService","fieldsToSend","getFlowList","page","size","search","domainId","state","userinfo","undefined","defaultObject","_isSelected","slice","searchRoutingSchema","response","items","map","item","getFlow","id","_dirty","readRoutingSchema","schema","JSON","stringify","addFlow","itemCopy","parse","payload","createRoutingSchema","$emit","updateFlow","updateRoutingSchema","deleteFlow","deleteRoutingSchema"],"mappings":"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","sourcesContent":["import instance from '../../instance';\nimport configuration from '../../openAPIConfig';\nimport {RoutingSchemaServiceApiFactory} from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport sanitizer from \"../../utils/sanitizer\";\nimport deepCopy from 'deep-copy';\nimport store from '../../../store/store';\n\nconst flowService = new RoutingSchemaServiceApiFactory\n(configuration, '', instance);\n\nconst fieldsToSend = ['domainId', 'name', 'schema', 'payload'];\n\nexport const getFlowList = async (page = 0, size = 10, search) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        _isSelected: false,\n        // debug: false,\n        // type: 'Type is undefined',\n    };\n    if(search && search.slice(-1) !== '*') search += '*';\n    try {\n        const response = await flowService.searchRoutingSchema(page, size, search, domainId);\n        if (response.items) {\n            return response.items.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return [];\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getFlow = async (id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        _dirty: false,\n    };\n    try {\n        let response = await flowService.readRoutingSchema(id, domainId);\n        return {\n            ...response,\n            schema: JSON.stringify(response.schema, null, 4),\n            ...defaultObject\n        };\n\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const addFlow = async (item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.schema = JSON.parse(itemCopy.schema);\n    itemCopy.payload = {};\n    sanitizer(itemCopy, fieldsToSend);\n\n    try {\n        const response = await flowService.createRoutingSchema(itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully added');\n        return response.id;\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const updateFlow = async (id, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.schema = JSON.parse(itemCopy.schema);\n    itemCopy.payload = {};\n    sanitizer(itemCopy, fieldsToSend);\n\n    try {\n        await flowService.updateRoutingSchema(id, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const deleteFlow = async (id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    try {\n        await flowService.deleteRoutingSchema(id, domainId);\n    } catch (err) {\n        throw err;\n    }\n};"]}]}