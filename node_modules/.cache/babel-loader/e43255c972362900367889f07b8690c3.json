{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/routing/sip-gateways/opened-register-sip-gateway-general.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/routing/sip-gateways/opened-register-sip-gateway-general.vue","mtime":1578657456694},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\nimport { mapActions } from \"vuex\";\nexport default {\n  name: \"opened-register-sip-gateway-general\",\n  mixins: [openedTabComponentMixin],\n  computed: {\n    name: {\n      get: function get() {\n        return this.$store.state.routing.gateways.itemInstance.name;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'name',\n          value: value\n        });\n      }\n    },\n    registrar: {\n      get: function get() {\n        return this.$store.state.routing.gateways.itemInstance.registrar;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'registrar',\n          value: value\n        });\n      }\n    },\n    expires: {\n      get: function get() {\n        return this.$store.state.routing.gateways.itemInstance.expires;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'expires',\n          value: value\n        });\n      }\n    },\n    password: {\n      get: function get() {\n        return this.$store.state.routing.gateways.itemInstance.password;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'password',\n          value: value\n        });\n      }\n    },\n    description: {\n      get: function get() {\n        return this.$store.state.routing.gateways.itemInstance.description;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'description',\n          value: value\n        });\n      }\n    }\n  },\n  methods: _objectSpread({\n    loadDropdownOptionsList: function loadDropdownOptionsList() {\n      return [];\n    }\n  }, mapActions('routing/gateways', {\n    setItemProp: 'SET_ITEM_PROPERTY'\n  }))\n};",{"version":3,"sources":["opened-register-sip-gateway-general.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,OAAA,uBAAA,MAAA,kCAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qCADA;AAEA,EAAA,MAAA,EAAA,CAAA,uBAAA,CAFA;AAIA,EAAA,QAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,GADA,iBACA;AAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,YAAA,CAAA,IAAA;AAAA,OADA;AAEA,MAAA,GAFA,eAEA,KAFA,EAEA;AAAA,aAAA,WAAA,CAAA;AAAA,UAAA,IAAA,EAAA,MAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AAAA;AAFA,KADA;AAKA,IAAA,SAAA,EAAA;AACA,MAAA,GADA,iBACA;AAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,YAAA,CAAA,SAAA;AAAA,OADA;AAEA,MAAA,GAFA,eAEA,KAFA,EAEA;AAAA,aAAA,WAAA,CAAA;AAAA,UAAA,IAAA,EAAA,WAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AAAA;AAFA,KALA;AASA,IAAA,OAAA,EAAA;AACA,MAAA,GADA,iBACA;AAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,YAAA,CAAA,OAAA;AAAA,OADA;AAEA,MAAA,GAFA,eAEA,KAFA,EAEA;AAAA,aAAA,WAAA,CAAA;AAAA,UAAA,IAAA,EAAA,SAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AAAA;AAFA,KATA;AAaA,IAAA,QAAA,EAAA;AACA,MAAA,GADA,iBACA;AAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,YAAA,CAAA,QAAA;AAAA,OADA;AAEA,MAAA,GAFA,eAEA,KAFA,EAEA;AAAA,aAAA,WAAA,CAAA;AAAA,UAAA,IAAA,EAAA,UAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AAAA;AAFA,KAbA;AAiBA,IAAA,WAAA,EAAA;AACA,MAAA,GADA,iBACA;AAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,YAAA,CAAA,WAAA;AAAA,OADA;AAEA,MAAA,GAFA,eAEA,KAFA,EAEA;AAAA,aAAA,WAAA,CAAA;AAAA,UAAA,IAAA,EAAA,aAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AAAA;AAFA;AAjBA,GAJA;AA2BA,EAAA,OAAA;AACA,IAAA,uBADA,qCACA;AACA,aAAA,EAAA;AACA;AAHA,KAKA,UAAA,CAAA,kBAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GAAA,CALA;AA3BA,CAAA","sourcesContent":["<template>\n    <section>\n        <header class=\"content-header\">\n            <h3 class=\"content-title\">{{$t('objects.generalInfo')}}</h3>\n        </header>\n        <form class=\"object-input-grid\">\n            <form-input\n                    v-model.trim=\"name\"\n                    :v=\"v.itemInstance.name\"\n                    :label=\"$t('objects.name')\"\n                    required\n            ></form-input>\n\n            <form-input\n                    v-model.trim=\"registrar\"\n                    :v=\"v.itemInstance.registrar\"\n                    :label=\"$t('objects.routing.gateways.hostnameRegister')\"\n                    required\n            ></form-input>\n\n            <form-input\n                    v-model.trim=\"expires\"\n                    :v=\"v.itemInstance.expires\"\n                    :label=\"$t('objects.routing.gateways.expire')\"\n                    required\n            ></form-input>\n\n            <form-input\n                    v-model.trim=\"password\"\n                    :v=\"v.itemInstance.password\"\n                    :label=\"$t('objects.password')\"\n                    required\n            ></form-input>\n\n            <form-input\n                    v-model.trim=\"description\"\n                    :label=\"$t('objects.description')\"\n                    textarea\n            ></form-input>\n        </form>\n    </section>\n</template>\n\n<script>\n    import openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\n    import {mapActions} from \"vuex\";\n\n    export default {\n        name: \"opened-register-sip-gateway-general\",\n        mixins: [openedTabComponentMixin],\n\n        computed: {\n            name: {\n                get() {return this.$store.state.routing.gateways.itemInstance.name},\n                set(value) {this.setItemProp({prop: 'name', value})}\n            },\n            registrar: {\n                get() {return this.$store.state.routing.gateways.itemInstance.registrar},\n                set(value) {this.setItemProp({prop: 'registrar', value})}\n            },\n            expires: {\n                get() {return this.$store.state.routing.gateways.itemInstance.expires},\n                set(value) {this.setItemProp({prop: 'expires', value})}\n            },\n            password: {\n                get() {return this.$store.state.routing.gateways.itemInstance.password},\n                set(value) {this.setItemProp({prop: 'password', value})}\n            },\n            description: {\n                get() {return this.$store.state.routing.gateways.itemInstance.description},\n                set(value) {this.setItemProp({prop: 'description', value})}\n            },\n        },\n\n        methods: {\n            loadDropdownOptionsList() {\n                return []\n            },\n\n            ...mapActions('routing/gateways', {\n                setItemProp: 'SET_ITEM_PROPERTY',\n            }),\n        }\n    }\n</script>"],"sourceRoot":"src/components/routing/sip-gateways"}]}