{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/store/modules/integrations/storage/storage.js","dependencies":[{"path":"/home/dev/work/client-auth/src/store/modules/integrations/storage/storage.js","mtime":1580907031071},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport proxy from \"../../../../utils/editProxy\";\nimport { addStorage, deleteStorage, getStorage, getStorageList, patchStorage, updateStorage } from \"../../../../api/integrations/storage/storage\";\n\nvar defaultState = function defaultState() {\n  return {\n    itemId: 0,\n    itemInstance: {\n      name: '',\n      maxSize: 10,\n      expireDays: 12\n    }\n  };\n};\n\nvar defaultLocalState = function defaultLocalState() {\n  return {\n    name: 'LOCAL NAME',\n    maxSize: 10,\n    expireDays: 12,\n    priority: 0,\n    type: 'local',\n    properties: {\n      directory: '/path/to/local/dir'\n    }\n  };\n};\n\nvar defaultS3State = function defaultS3State() {\n  return {\n    name: 'S3 Storage',\n    maxSize: 10,\n    expireDays: 12,\n    priority: 0,\n    type: 's3',\n    properties: {\n      keyId: '1010',\n      accessKey: '2020',\n      bucketName: '4040',\n      region: {},\n      endpoint: ''\n    }\n  };\n};\n\nvar defaultDigitalOceanState = function defaultDigitalOceanState() {\n  return {\n    name: 'Digital Ocean Storage',\n    maxSize: 10,\n    expireDays: 12,\n    priority: 0,\n    type: 'digitalOcean',\n    properties: {\n      keyId: '1010',\n      accessKey: '2020',\n      bucketName: '4040',\n      region: {\n        name: 'New York City, United States (NYC1)',\n        value: 'NYC1'\n      }\n    }\n  };\n};\n\nvar defaultBackblazeState = function defaultBackblazeState() {\n  return {\n    name: '',\n    maxSize: 10,\n    expireDays: 12,\n    type: 'backblaze' // account: '',\n    // key: '',\n    // bucket: '',\n    // bucketId: '',\n\n  };\n};\n\nvar defaultDropboxState = function defaultDropboxState() {\n  return {\n    name: 'Dropbox Storage',\n    maxSize: 10,\n    expireDays: 12,\n    priority: 0,\n    type: 'dropbox',\n    properties: {\n      token: '10102020'\n    }\n  };\n};\n\nvar defaultDriveState = function defaultDriveState() {\n  return {\n    name: 'Drive Storage',\n    maxSize: 10,\n    expireDays: 12,\n    priority: 0,\n    type: 'drive',\n    properties: {\n      directory: 'dir_name',\n      email: 'email@gmail.com',\n      privateKey: '80feoiufewqrewr4t4t43uriot54ut2hrkjt43jk32r'\n    }\n  };\n};\n\nvar state = _objectSpread({\n  dataList: [],\n  size: '10',\n  search: '',\n  page: 0,\n  isNextPage: true\n}, defaultState());\n\nvar getters = {};\nvar actions = {\n  GET_LIST: function () {\n    var _GET_LIST = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getStorageList(state.page, state.size, state.search);\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function GET_LIST() {\n      return _GET_LIST.apply(this, arguments);\n    }\n\n    return GET_LIST;\n  }(),\n  GET_ITEM: function () {\n    var _GET_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getStorage(state.itemId);\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function GET_ITEM() {\n      return _GET_ITEM.apply(this, arguments);\n    }\n\n    return GET_ITEM;\n  }(),\n  POST_ITEM: function () {\n    var _POST_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return addStorage(state.itemInstance);\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function POST_ITEM() {\n      return _POST_ITEM.apply(this, arguments);\n    }\n\n    return POST_ITEM;\n  }(),\n  PATCH_ITEM: function () {\n    var _PATCH_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(context, _ref) {\n      var id, changes;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = _ref.id, changes = _ref.changes;\n              _context4.next = 3;\n              return patchStorage(id, changes);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function PATCH_ITEM(_x, _x2) {\n      return _PATCH_ITEM.apply(this, arguments);\n    }\n\n    return PATCH_ITEM;\n  }(),\n  UPD_ITEM: function () {\n    var _UPD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5() {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return updateStorage(state.itemId, state.itemInstance);\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function UPD_ITEM() {\n      return _UPD_ITEM.apply(this, arguments);\n    }\n\n    return UPD_ITEM;\n  }(),\n  DELETE_ITEM: function () {\n    var _DELETE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(context, id) {\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return deleteStorage(id);\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function DELETE_ITEM(_x3, _x4) {\n      return _DELETE_ITEM.apply(this, arguments);\n    }\n\n    return DELETE_ITEM;\n  }(),\n  SET_ITEM_ID: function SET_ITEM_ID(context, id) {\n    if (id !== 'new') context.commit('SET_ITEM_ID', id);\n  },\n  LOAD_DATA_LIST: function () {\n    var _LOAD_DATA_LIST = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(context) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return context.dispatch('GET_LIST');\n\n            case 2:\n              response = _context7.sent;\n              context.dispatch('RESET_ITEM_STATE');\n              context.commit('SET_DATA_LIST', response);\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function LOAD_DATA_LIST(_x5) {\n      return _LOAD_DATA_LIST.apply(this, arguments);\n    }\n\n    return LOAD_DATA_LIST;\n  }(),\n  SET_SIZE: function SET_SIZE(context, size) {\n    context.commit('SET_SIZE', size);\n  },\n  SET_SEARCH: function SET_SEARCH(context, search) {\n    context.commit('SET_SEARCH', search);\n  },\n  NEXT_PAGE: function NEXT_PAGE(context) {\n    if (state.isNextPage) {\n      context.commit('INCREMENT_PAGE');\n      context.dispatch('LOAD_DATA_LIST');\n    }\n  },\n  PREV_PAGE: function PREV_PAGE(context) {\n    if (state.page) {\n      context.commit('DECREMENT_PAGE');\n      context.dispatch('LOAD_DATA_LIST');\n    }\n  },\n  LOAD_ITEM: function () {\n    var _LOAD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(context, type) {\n      var item;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!state.itemId) {\n                _context8.next = 7;\n                break;\n              }\n\n              _context8.next = 3;\n              return context.dispatch('GET_ITEM');\n\n            case 3:\n              item = _context8.sent;\n              context.commit('SET_ITEM', proxy(item));\n              _context8.next = 8;\n              break;\n\n            case 7:\n              context.dispatch('SET_ITEM_BY_TYPE', type);\n\n            case 8:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function LOAD_ITEM(_x6, _x7) {\n      return _LOAD_ITEM.apply(this, arguments);\n    }\n\n    return LOAD_ITEM;\n  }(),\n  SET_ITEM_BY_TYPE: function SET_ITEM_BY_TYPE(context, type) {\n    var item = {};\n\n    switch (type) {\n      case 'local':\n        item = defaultLocalState();\n        break;\n\n      case 's3':\n        item = defaultS3State();\n        break;\n\n      case 'backblaze':\n        item = defaultBackblazeState();\n        break;\n\n      case 'dropbox':\n        item = defaultDropboxState();\n        break;\n\n      case 'drive':\n        item = defaultDriveState();\n        break;\n    }\n\n    context.commit('SET_ITEM', item);\n  },\n  SET_ITEM_PROPERTY: function SET_ITEM_PROPERTY(context, payload) {\n    context.commit('SET_ITEM_PROPERTY', payload);\n  },\n  SET_ITEM_PROPERTIES_PROPERTY: function SET_ITEM_PROPERTIES_PROPERTY(context, payload) {\n    context.commit('SET_ITEM_PROPERTIES_PROPERTY', payload);\n    context.dispatch('SET_ITEM_PROPERTY', {\n      prop: '_dirty',\n      value: true\n    });\n  },\n  ADD_ITEM: function () {\n    var _ADD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(context) {\n      var id;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (state.itemId) {\n                _context9.next = 6;\n                break;\n              }\n\n              _context9.next = 3;\n              return context.dispatch('POST_ITEM');\n\n            case 3:\n              id = _context9.sent;\n              context.dispatch('SET_ITEM_ID', id);\n              context.dispatch('LOAD_ITEM');\n\n            case 6:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function ADD_ITEM(_x8) {\n      return _ADD_ITEM.apply(this, arguments);\n    }\n\n    return ADD_ITEM;\n  }(),\n  TOGGLE_ITEM_PROPERTY: function () {\n    var _TOGGLE_ITEM_PROPERTY = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(context, index) {\n      var changes;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return context.commit('TOGGLE_ITEM_PROPERTY', index);\n\n            case 2:\n              changes = {\n                disabled: state.dataList[index].disabled\n              };\n\n              try {\n                context.dispatch('PATCH_ITEM', {\n                  id: state.dataList[index].id,\n                  changes: changes\n                });\n              } catch (_unused) {\n                context.dispatch('LOAD_DATA_LIST');\n              }\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    function TOGGLE_ITEM_PROPERTY(_x9, _x10) {\n      return _TOGGLE_ITEM_PROPERTY.apply(this, arguments);\n    }\n\n    return TOGGLE_ITEM_PROPERTY;\n  }(),\n  UPDATE_ITEM: function () {\n    var _UPDATE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee11(context) {\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              if (!state.itemInstance._dirty) {\n                _context11.next = 4;\n                break;\n              }\n\n              _context11.next = 3;\n              return context.dispatch('UPD_ITEM');\n\n            case 3:\n              context.dispatch('LOAD_ITEM');\n\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    function UPDATE_ITEM(_x11) {\n      return _UPDATE_ITEM.apply(this, arguments);\n    }\n\n    return UPDATE_ITEM;\n  }(),\n  REMOVE_ITEM: function () {\n    var _REMOVE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee12(context, index) {\n      var id;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              id = state.dataList[index].id;\n              context.commit('REMOVE_ITEM', index);\n              _context12.prev = 2;\n              _context12.next = 5;\n              return context.dispatch('DELETE_ITEM', id);\n\n            case 5:\n              _context12.next = 9;\n              break;\n\n            case 7:\n              _context12.prev = 7;\n              _context12.t0 = _context12[\"catch\"](2);\n\n            case 9:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[2, 7]]);\n    }));\n\n    function REMOVE_ITEM(_x12, _x13) {\n      return _REMOVE_ITEM.apply(this, arguments);\n    }\n\n    return REMOVE_ITEM;\n  }(),\n  RESET_ITEM_STATE: function () {\n    var _RESET_ITEM_STATE = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee13(context) {\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              context.commit('RESET_ITEM_STATE');\n\n            case 1:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    function RESET_ITEM_STATE(_x14) {\n      return _RESET_ITEM_STATE.apply(this, arguments);\n    }\n\n    return RESET_ITEM_STATE;\n  }()\n};\nvar mutations = {\n  SET_ITEM_ID: function SET_ITEM_ID(state, id) {\n    state.itemId = id;\n  },\n  SET_DATA_LIST: function SET_DATA_LIST(state, list) {\n    state.dataList = list;\n  },\n  SET_SIZE: function SET_SIZE(context, size) {\n    state.size = size;\n  },\n  SET_SEARCH: function SET_SEARCH(context, search) {\n    state.search = search;\n  },\n  INCREMENT_PAGE: function INCREMENT_PAGE(state) {\n    state.page++;\n  },\n  DECREMENT_PAGE: function DECREMENT_PAGE(state) {\n    state.page--;\n  },\n  SET_ITEM_PROPERTY: function SET_ITEM_PROPERTY(state, _ref2) {\n    var prop = _ref2.prop,\n        value = _ref2.value;\n    state.itemInstance[prop] = value;\n  },\n  SET_ITEM_PROPERTIES_PROPERTY: function SET_ITEM_PROPERTIES_PROPERTY(state, _ref3) {\n    var prop = _ref3.prop,\n        value = _ref3.value;\n    state.itemInstance.properties[prop] = value;\n  },\n  TOGGLE_ITEM_PROPERTY: function TOGGLE_ITEM_PROPERTY(state, index) {\n    state.dataList[index].disabled = !state.dataList[index].disabled;\n  },\n  SET_ITEM: function SET_ITEM(state, item) {\n    state.itemInstance = item;\n  },\n  REMOVE_ITEM: function REMOVE_ITEM(state, index) {\n    state.dataList.splice(index, 1);\n  },\n  RESET_ITEM_STATE: function RESET_ITEM_STATE(state) {\n    Object.assign(state, defaultState());\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/home/dev/work/client-auth/src/store/modules/integrations/storage/storage.js"],"names":["proxy","addStorage","deleteStorage","getStorage","getStorageList","patchStorage","updateStorage","defaultState","itemId","itemInstance","name","maxSize","expireDays","defaultLocalState","priority","type","properties","directory","defaultS3State","keyId","accessKey","bucketName","region","endpoint","defaultDigitalOceanState","value","defaultBackblazeState","defaultDropboxState","token","defaultDriveState","email","privateKey","state","dataList","size","search","page","isNextPage","getters","actions","GET_LIST","GET_ITEM","POST_ITEM","PATCH_ITEM","context","id","changes","UPD_ITEM","DELETE_ITEM","SET_ITEM_ID","commit","LOAD_DATA_LIST","dispatch","response","SET_SIZE","SET_SEARCH","NEXT_PAGE","PREV_PAGE","LOAD_ITEM","item","SET_ITEM_BY_TYPE","SET_ITEM_PROPERTY","payload","SET_ITEM_PROPERTIES_PROPERTY","prop","ADD_ITEM","TOGGLE_ITEM_PROPERTY","index","disabled","UPDATE_ITEM","_dirty","REMOVE_ITEM","RESET_ITEM_STATE","mutations","SET_DATA_LIST","list","INCREMENT_PAGE","DECREMENT_PAGE","SET_ITEM","splice","Object","assign","namespaced"],"mappings":"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","sourcesContent":["import proxy from '../../../../utils/editProxy';\nimport {\n    addStorage,\n    deleteStorage,\n    getStorage,\n    getStorageList, patchStorage,\n    updateStorage\n} from \"../../../../api/integrations/storage/storage\";\n\nconst defaultState = () => {\n    return {\n        itemId: 0,\n        itemInstance: {\n            name: '',\n            maxSize: 10,\n            expireDays: 12,\n        },\n    };\n};\n\nconst defaultLocalState = () => {\n    return {\n        name: 'LOCAL NAME',\n        maxSize: 10,\n        expireDays: 12,\n        priority: 0,\n        type: 'local',\n        properties: {directory: '/path/to/local/dir'}\n    };\n};\n\nconst defaultS3State = () => {\n    return {\n        name: 'S3 Storage',\n        maxSize: 10,\n        expireDays: 12,\n        priority: 0,\n        type: 's3',\n        properties: {\n            keyId: '1010',\n            accessKey: '2020',\n            bucketName: '4040',\n            region: {},\n            endpoint: '',\n        },\n    };\n};\n\nconst defaultDigitalOceanState = () => {\n    return {\n        name: 'Digital Ocean Storage',\n        maxSize: 10,\n        expireDays: 12,\n        priority: 0,\n        type: 'digitalOcean',\n        properties: {\n            keyId: '1010',\n            accessKey: '2020',\n            bucketName: '4040',\n            region: {name: 'New York City, United States (NYC1)', value: 'NYC1'},\n        },\n    };\n};\n\nconst defaultBackblazeState = () => {\n    return {\n        name: '',\n        maxSize: 10,\n        expireDays: 12,\n        type: 'backblaze',\n        // account: '',\n        // key: '',\n        // bucket: '',\n        // bucketId: '',\n    };\n};\n\nconst defaultDropboxState = () => {\n    return {\n        name: 'Dropbox Storage',\n        maxSize: 10,\n        expireDays: 12,\n        priority: 0,\n        type: 'dropbox',\n        properties: {\n            token: '10102020',\n        },\n    };\n};\n\nconst defaultDriveState = () => {\n    return {\n        name: 'Drive Storage',\n        maxSize: 10,\n        expireDays: 12,\n        priority: 0,\n        type: 'drive',\n        properties: {\n            directory: 'dir_name',\n            email: 'email@gmail.com',\n            privateKey: '80feoiufewqrewr4t4t43uriot54ut2hrkjt43jk32r',\n        },\n    };\n};\n\nconst state = {\n    dataList: [],\n    size: '10',\n    search: '',\n    page: 0,\n    isNextPage: true,\n    ...defaultState()\n};\n\nconst getters = {};\n\nconst actions = {\n    GET_LIST: async () => {\n        return await getStorageList(state.page, state.size, state.search);\n    },\n\n    GET_ITEM: async () => {\n        return await getStorage(state.itemId);\n    },\n\n    POST_ITEM: async () => {\n        return await addStorage(state.itemInstance);\n    },\n\n    PATCH_ITEM: async (context, {id, changes}) => {\n        await patchStorage(id, changes);\n    },\n\n    UPD_ITEM: async () => {\n        await updateStorage(state.itemId, state.itemInstance);\n    },\n\n    DELETE_ITEM: async (context, id) => {\n        await deleteStorage(id);\n    },\n\n    SET_ITEM_ID: (context, id) => {\n        if (id !== 'new') context.commit('SET_ITEM_ID', id);\n    },\n\n    LOAD_DATA_LIST: async (context) => {\n        const response = await context.dispatch('GET_LIST');\n        context.dispatch('RESET_ITEM_STATE');\n        context.commit('SET_DATA_LIST', response);\n    },\n\n    SET_SIZE: (context, size) => {\n        context.commit('SET_SIZE', size);\n    },\n\n    SET_SEARCH: (context, search) => {\n        context.commit('SET_SEARCH', search);\n    },\n\n    NEXT_PAGE: (context) => {\n        if (state.isNextPage) {\n            context.commit('INCREMENT_PAGE');\n            context.dispatch('LOAD_DATA_LIST');\n        }\n    },\n\n    PREV_PAGE: (context) => {\n        if (state.page) {\n            context.commit('DECREMENT_PAGE');\n            context.dispatch('LOAD_DATA_LIST');\n        }\n    },\n\n    LOAD_ITEM: async (context, type) => {\n        if (state.itemId) {\n            const item = await context.dispatch('GET_ITEM');\n            context.commit('SET_ITEM', proxy(item));\n        } else {\n            context.dispatch('SET_ITEM_BY_TYPE', type);\n        }\n    },\n\n    SET_ITEM_BY_TYPE: (context, type) => {\n        let item = {};\n        switch (type) {\n            case 'local':\n                item = defaultLocalState();\n                break;\n            case 's3':\n                item = defaultS3State();\n                break;\n            case 'backblaze':\n                item = defaultBackblazeState();\n                break;\n            case 'dropbox':\n                item = defaultDropboxState();\n                break;\n            case 'drive':\n                item = defaultDriveState();\n                break;\n        }\n        context.commit('SET_ITEM', item);\n    },\n\n    SET_ITEM_PROPERTY: (context, payload) => {\n        context.commit('SET_ITEM_PROPERTY', payload);\n    },\n\n    SET_ITEM_PROPERTIES_PROPERTY: (context, payload) => {\n        context.commit('SET_ITEM_PROPERTIES_PROPERTY', payload);\n        context.dispatch('SET_ITEM_PROPERTY', {prop: '_dirty', value: true});\n    },\n\n    ADD_ITEM: async (context) => {\n        if (!state.itemId) {\n            const id = await context.dispatch('POST_ITEM');\n            context.dispatch('SET_ITEM_ID', id);\n            context.dispatch('LOAD_ITEM');\n        }\n    },\n\n    TOGGLE_ITEM_PROPERTY: async (context, index) => {\n        await context.commit('TOGGLE_ITEM_PROPERTY', index);\n        let changes = {disabled: state.dataList[index].disabled};\n        try {\n            context.dispatch('PATCH_ITEM', {id: state.dataList[index].id, changes});\n        } catch {\n            context.dispatch('LOAD_DATA_LIST');\n        }\n    },\n\n    UPDATE_ITEM: async (context) => {\n        if (state.itemInstance._dirty) {\n            await context.dispatch('UPD_ITEM');\n            context.dispatch('LOAD_ITEM');\n        }\n    },\n\n    REMOVE_ITEM: async (context, index) => {\n        const id = state.dataList[index].id;\n        context.commit('REMOVE_ITEM', index);\n        try {\n            await context.dispatch('DELETE_ITEM', id);\n        } catch {\n        }\n    },\n\n    RESET_ITEM_STATE: async (context) => {\n        context.commit('RESET_ITEM_STATE');\n    },\n};\n\nconst mutations = {\n    SET_ITEM_ID: (state, id) => {\n        state.itemId = id;\n    },\n\n    SET_DATA_LIST: (state, list) => {\n        state.dataList = list;\n    },\n\n    SET_SIZE: (context, size) => {\n        state.size = size;\n    },\n\n    SET_SEARCH: (context, search) => {\n        state.search = search;\n    },\n\n    INCREMENT_PAGE: (state) => {\n        state.page++;\n    },\n\n    DECREMENT_PAGE: (state) => {\n        state.page--;\n    },\n\n    SET_ITEM_PROPERTY: (state, {prop, value}) => {\n        state.itemInstance[prop] = value;\n    },\n\n    SET_ITEM_PROPERTIES_PROPERTY: (state, {prop, value}) => {\n        state.itemInstance.properties[prop] = value;\n    },\n\n    TOGGLE_ITEM_PROPERTY: (state, index) => {\n        state.dataList[index].disabled = !state.dataList[index].disabled;\n    },\n\n    SET_ITEM: (state, item) => {\n        state.itemInstance = item;\n    },\n\n    REMOVE_ITEM: (state, index) => {\n        state.dataList.splice(index, 1);\n    },\n\n    RESET_ITEM_STATE: (state) => {\n        Object.assign(state, defaultState());\n    },\n};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations,\n};\n"]}]}