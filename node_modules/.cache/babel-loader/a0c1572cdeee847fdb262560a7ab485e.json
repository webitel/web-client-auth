{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/store/modules/routing/gateways/gateways.js","dependencies":[{"path":"/home/dev/work/client-auth/src/store/modules/routing/gateways/gateways.js","mtime":1580975733290},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport router from \"../../../../router/router\";\nimport proxy from \"../../../../utils/editProxy\";\nimport { addGateway, deleteGateway, getGateway, getGatewayList, updateGateway } from \"../../../../api/routing/gateways/gateways\";\n\nvar defaultState = function defaultState() {\n  return _objectSpread({\n    itemId: 0\n  }, defaultTrunkingItem(), {}, defaultRegisterItem());\n};\n\nvar defaultTrunkingItem = function defaultTrunkingItem() {\n  return {\n    itemInstance: {\n      name: '01trunking-test',\n      proxy: '10.12.13.14',\n      description: '',\n      schema: {},\n      id: 0,\n      host: '10.12.13.14',\n      ipacl: [{\n        ip: '10.12.13.14',\n        proto: 'any',\n        port: null\n      }],\n      enable: true\n    }\n  };\n};\n\nvar defaultRegisterItem = function defaultRegisterItem() {\n  return {\n    itemInstance: {\n      register: true,\n      name: '01reg-test',\n      registrar: '10.12.13.14',\n      expires: 600,\n      password: 'fizzbuzz',\n      description: '',\n      username: '',\n      accountName: 'wetel',\n      proxy: '',\n      domain: '',\n      schema: {},\n      enable: true,\n      id: 0\n    }\n  };\n};\n\nvar state = _objectSpread({\n  dataList: [],\n  size: '10',\n  search: '',\n  page: 0,\n  isNextPage: true\n}, defaultState());\n\nvar getters = {};\nvar actions = {\n  GET_LIST: function () {\n    var _GET_LIST = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getGatewayList(state.page, state.size, state.search);\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function GET_LIST() {\n      return _GET_LIST.apply(this, arguments);\n    }\n\n    return GET_LIST;\n  }(),\n  GET_ITEM: function () {\n    var _GET_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getGateway(state.itemId);\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function GET_ITEM() {\n      return _GET_ITEM.apply(this, arguments);\n    }\n\n    return GET_ITEM;\n  }(),\n  POST_ITEM: function () {\n    var _POST_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return addGateway(state.itemInstance);\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function POST_ITEM() {\n      return _POST_ITEM.apply(this, arguments);\n    }\n\n    return POST_ITEM;\n  }(),\n  PATCH_ITEM: function () {\n    var _PATCH_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(context, _ref) {\n      var id, changes;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = _ref.id, changes = _ref.changes;\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function PATCH_ITEM(_x, _x2) {\n      return _PATCH_ITEM.apply(this, arguments);\n    }\n\n    return PATCH_ITEM;\n  }(),\n  UPD_ITEM: function () {\n    var _UPD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5() {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return updateGateway(state.itemId, state.itemInstance);\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function UPD_ITEM() {\n      return _UPD_ITEM.apply(this, arguments);\n    }\n\n    return UPD_ITEM;\n  }(),\n  DELETE_ITEM: function () {\n    var _DELETE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(context, id) {\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return deleteGateway(id);\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function DELETE_ITEM(_x3, _x4) {\n      return _DELETE_ITEM.apply(this, arguments);\n    }\n\n    return DELETE_ITEM;\n  }(),\n  SET_ITEM_ID: function SET_ITEM_ID(context, id) {\n    if (id !== 'new') context.commit('SET_ITEM_ID', id);\n  },\n  LOAD_DATA_LIST: function () {\n    var _LOAD_DATA_LIST = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(context) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return context.dispatch('GET_LIST');\n\n            case 2:\n              response = _context7.sent;\n              context.dispatch('RESET_ITEM_STATE');\n              context.commit('SET_DATA_LIST', response);\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function LOAD_DATA_LIST(_x5) {\n      return _LOAD_DATA_LIST.apply(this, arguments);\n    }\n\n    return LOAD_DATA_LIST;\n  }(),\n  SET_SIZE: function SET_SIZE(context, size) {\n    context.commit('SET_SIZE', size);\n  },\n  SET_SEARCH: function SET_SEARCH(context, search) {\n    context.commit('SET_SEARCH', search);\n  },\n  NEXT_PAGE: function NEXT_PAGE(context) {\n    if (state.isNextPage) {\n      context.commit('INCREMENT_PAGE');\n      context.dispatch('LOAD_DATA_LIST');\n    }\n  },\n  PREV_PAGE: function PREV_PAGE(context) {\n    if (state.page) {\n      context.commit('DECREMENT_PAGE');\n      context.dispatch('LOAD_DATA_LIST');\n    }\n  },\n  TOGGLE_ITEM_PROPERTY: function () {\n    var _TOGGLE_ITEM_PROPERTY = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(context, index) {\n      var changes;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return context.commit('TOGGLE_ITEM_PROPERTY', index);\n\n            case 2:\n              changes = {\n                enable: state.dataList[index].enable\n              };\n\n              try {\n                context.dispatch('PATCH_ITEM', {\n                  id: state.dataList[index].id,\n                  changes: changes\n                });\n              } catch (_unused) {\n                context.dispatch('LOAD_DATA_LIST');\n              }\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function TOGGLE_ITEM_PROPERTY(_x6, _x7) {\n      return _TOGGLE_ITEM_PROPERTY.apply(this, arguments);\n    }\n\n    return TOGGLE_ITEM_PROPERTY;\n  }(),\n  LOAD_REGISTER_ITEM: function () {\n    var _LOAD_REGISTER_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(context) {\n      var item;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (!state.itemId) {\n                _context9.next = 10;\n                break;\n              }\n\n              _context9.next = 3;\n              return context.dispatch('GET_ITEM');\n\n            case 3:\n              item = _context9.sent;\n\n              if (item.register) {\n                _context9.next = 7;\n                break;\n              }\n\n              router.replace('/routing/gateways/trunking/' + item.id);\n              return _context9.abrupt(\"return\");\n\n            case 7:\n              context.commit('SET_REGISTER_ITEM', proxy(item));\n              _context9.next = 11;\n              break;\n\n            case 10:\n              context.commit('SET_REGISTER_ITEM');\n\n            case 11:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function LOAD_REGISTER_ITEM(_x8) {\n      return _LOAD_REGISTER_ITEM.apply(this, arguments);\n    }\n\n    return LOAD_REGISTER_ITEM;\n  }(),\n  LOAD_TRUNKING_ITEM: function () {\n    var _LOAD_TRUNKING_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(context) {\n      var item;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              if (!state.itemId) {\n                _context10.next = 10;\n                break;\n              }\n\n              _context10.next = 3;\n              return context.dispatch('GET_ITEM');\n\n            case 3:\n              item = _context10.sent;\n\n              if (!item.register) {\n                _context10.next = 7;\n                break;\n              }\n\n              router.replace('/routing/gateways/register/' + item.id);\n              return _context10.abrupt(\"return\");\n\n            case 7:\n              context.commit('SET_TRUNKING_ITEM', proxy(item));\n              _context10.next = 11;\n              break;\n\n            case 10:\n              context.commit('SET_TRUNKING_ITEM');\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    function LOAD_TRUNKING_ITEM(_x9) {\n      return _LOAD_TRUNKING_ITEM.apply(this, arguments);\n    }\n\n    return LOAD_TRUNKING_ITEM;\n  }(),\n  SET_ITEM_PROPERTY: function SET_ITEM_PROPERTY(context, payload) {\n    context.commit('SET_ITEM_PROPERTY', payload);\n  },\n  ADD_VARIABLE_PAIR: function ADD_VARIABLE_PAIR(context) {\n    var pair = {\n      ip: '',\n      proto: 'any',\n      port: null\n    };\n    context.commit('ADD_VARIABLE_PAIR', pair);\n    context.commit('SET_ITEM_PROPERTY', {\n      prop: '_dirty',\n      value: true\n    });\n  },\n  SET_VARIABLE_PROP: function SET_VARIABLE_PROP(context, _ref2) {\n    var index = _ref2.index,\n        prop = _ref2.prop,\n        value = _ref2.value;\n    context.commit('SET_VARIABLE_PROP', {\n      index: index,\n      prop: prop,\n      value: value\n    });\n    context.commit('SET_ITEM_PROPERTY', {\n      prop: '_dirty',\n      value: true\n    });\n  },\n  DELETE_VARIABLE_PAIR: function DELETE_VARIABLE_PAIR(context, index) {\n    context.commit('DELETE_VARIABLE_PAIR', index);\n    context.commit('SET_ITEM_PROPERTY', {\n      prop: '_dirty',\n      value: true\n    });\n  },\n  ADD_ITEM: function () {\n    var _ADD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee11(context) {\n      var id;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              if (state.itemId) {\n                _context11.next = 7;\n                break;\n              }\n\n              _context11.next = 3;\n              return context.dispatch('POST_ITEM');\n\n            case 3:\n              id = _context11.sent;\n              _context11.next = 6;\n              return context.dispatch('SET_ITEM_ID', id);\n\n            case 6:\n              state.itemInstance.register ? context.dispatch('LOAD_REGISTER_ITEM') : context.dispatch('LOAD_TRUNKING_ITEM');\n\n            case 7:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    function ADD_ITEM(_x10) {\n      return _ADD_ITEM.apply(this, arguments);\n    }\n\n    return ADD_ITEM;\n  }(),\n  UPDATE_ITEM: function () {\n    var _UPDATE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee12(context) {\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              if (!state.itemInstance._dirty) {\n                _context12.next = 4;\n                break;\n              }\n\n              _context12.next = 3;\n              return context.dispatch('UPD_ITEM');\n\n            case 3:\n              state.itemInstance.register ? context.dispatch('LOAD_REGISTER_ITEM') : context.dispatch('LOAD_TRUNKING_ITEM');\n\n            case 4:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    function UPDATE_ITEM(_x11) {\n      return _UPDATE_ITEM.apply(this, arguments);\n    }\n\n    return UPDATE_ITEM;\n  }(),\n  REMOVE_ITEM: function () {\n    var _REMOVE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee13(context, index) {\n      var id;\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              id = state.dataList[index].id;\n              context.commit('REMOVE_ITEM', index);\n              _context13.prev = 2;\n              _context13.next = 5;\n              return context.dispatch('DELETE_ITEM', id);\n\n            case 5:\n              _context13.next = 9;\n              break;\n\n            case 7:\n              _context13.prev = 7;\n              _context13.t0 = _context13[\"catch\"](2);\n\n            case 9:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[2, 7]]);\n    }));\n\n    function REMOVE_ITEM(_x12, _x13) {\n      return _REMOVE_ITEM.apply(this, arguments);\n    }\n\n    return REMOVE_ITEM;\n  }(),\n  RESET_ITEM_STATE: function () {\n    var _RESET_ITEM_STATE = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee14(context) {\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              context.commit('RESET_ITEM_STATE');\n\n            case 1:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n\n    function RESET_ITEM_STATE(_x14) {\n      return _RESET_ITEM_STATE.apply(this, arguments);\n    }\n\n    return RESET_ITEM_STATE;\n  }()\n};\nvar mutations = {\n  SET_ITEM_ID: function SET_ITEM_ID(state, id) {\n    state.itemId = id;\n  },\n  SET_DATA_LIST: function SET_DATA_LIST(state, list) {\n    state.dataList = list;\n  },\n  SET_SIZE: function SET_SIZE(state, size) {\n    state.size = size;\n  },\n  SET_SEARCH: function SET_SEARCH(state, search) {\n    state.search = search;\n  },\n  INCREMENT_PAGE: function INCREMENT_PAGE(state) {\n    state.page++;\n  },\n  DECREMENT_PAGE: function DECREMENT_PAGE(state) {\n    state.page--;\n  },\n  SET_ITEM_PROPERTY: function SET_ITEM_PROPERTY(state, _ref3) {\n    var prop = _ref3.prop,\n        value = _ref3.value;\n    state.itemInstance[prop] = value;\n  },\n  TOGGLE_ITEM_PROPERTY: function TOGGLE_ITEM_PROPERTY(state, index) {\n    state.dataList[index].enable = !state.dataList[index].enable;\n  },\n  SET_REGISTER_ITEM: function SET_REGISTER_ITEM(state, item) {\n    if (item) {\n      state.itemInstance = item;\n    } else {\n      Object.assign(state, defaultState(), defaultRegisterItem());\n    }\n  },\n  SET_TRUNKING_ITEM: function SET_TRUNKING_ITEM(state, item) {\n    if (item) {\n      state.itemInstance = item;\n    } else {\n      Object.assign(state, defaultState(), defaultTrunkingItem());\n    }\n  },\n  ADD_VARIABLE_PAIR: function ADD_VARIABLE_PAIR(state, pair) {\n    state.itemInstance.ipacl.push(pair);\n  },\n  SET_VARIABLE_PROP: function SET_VARIABLE_PROP(state, _ref4) {\n    var index = _ref4.index,\n        prop = _ref4.prop,\n        value = _ref4.value;\n    state.itemInstance.ipacl[index][prop] = value;\n  },\n  DELETE_VARIABLE_PAIR: function DELETE_VARIABLE_PAIR(state, index) {\n    state.itemInstance.ipacl.splice(index, 1);\n  },\n  REMOVE_ITEM: function REMOVE_ITEM(state, index) {\n    state.dataList.splice(index, 1);\n  },\n  RESET_ITEM_STATE: function RESET_ITEM_STATE(state) {\n    Object.assign(state, defaultState());\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/home/dev/work/client-auth/src/store/modules/routing/gateways/gateways.js"],"names":["router","proxy","addGateway","deleteGateway","getGateway","getGatewayList","updateGateway","defaultState","itemId","defaultTrunkingItem","defaultRegisterItem","itemInstance","name","description","schema","id","host","ipacl","ip","proto","port","enable","register","registrar","expires","password","username","accountName","domain","state","dataList","size","search","page","isNextPage","getters","actions","GET_LIST","GET_ITEM","POST_ITEM","PATCH_ITEM","context","changes","UPD_ITEM","DELETE_ITEM","SET_ITEM_ID","commit","LOAD_DATA_LIST","dispatch","response","SET_SIZE","SET_SEARCH","NEXT_PAGE","PREV_PAGE","TOGGLE_ITEM_PROPERTY","index","LOAD_REGISTER_ITEM","item","replace","LOAD_TRUNKING_ITEM","SET_ITEM_PROPERTY","payload","ADD_VARIABLE_PAIR","pair","prop","value","SET_VARIABLE_PROP","DELETE_VARIABLE_PAIR","ADD_ITEM","UPDATE_ITEM","_dirty","REMOVE_ITEM","RESET_ITEM_STATE","mutations","SET_DATA_LIST","list","INCREMENT_PAGE","DECREMENT_PAGE","SET_REGISTER_ITEM","Object","assign","SET_TRUNKING_ITEM","push","splice","namespaced"],"mappings":"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","sourcesContent":["import router from '../../../../router/router';\nimport proxy from '../../../../utils/editProxy';\nimport {\n    addGateway, deleteGateway,\n    getGateway, getGatewayList, updateGateway\n} from \"../../../../api/routing/gateways/gateways\";\n\nconst defaultState = () => {\n    return {\n        itemId: 0,\n        ...defaultTrunkingItem(),\n        ...defaultRegisterItem(),\n    }\n};\n\nconst defaultTrunkingItem = () => {\n    return {\n        itemInstance: {\n            name: '01trunking-test',\n            proxy: '10.12.13.14',\n            description: '',\n            schema: {},\n            id: 0,\n            host: '10.12.13.14',\n            ipacl: [{\n                ip: '10.12.13.14',\n                proto: 'any',\n                port: null\n            }],\n            enable: true,\n        },\n    }\n};\n\nconst defaultRegisterItem = () => {\n    return {\n        itemInstance: {\n            register: true,\n            name: '01reg-test',\n            registrar: '10.12.13.14',\n            expires: 600,\n            password: 'fizzbuzz',\n            description: '',\n            username: '',\n            accountName: 'wetel',\n            proxy: '',\n            domain: '',\n            schema: {},\n            enable: true,\n            id: 0,\n        },\n    }\n};\n\nconst state = {\n    dataList: [],\n    size: '10',\n    search: '',\n    page: 0,\n    isNextPage: true,\n    ...defaultState()\n};\n\nconst getters = {};\n\nconst actions = {\n    GET_LIST: async () => {\n        return await getGatewayList(state.page, state.size, state.search);\n    },\n\n    GET_ITEM: async () => {\n        return await getGateway(state.itemId);\n    },\n\n    POST_ITEM: async () => {\n        return await addGateway(state.itemInstance);\n    },\n\n    PATCH_ITEM: async (context, {id, changes}) => {\n        // FIXME: ADD PATCH TO SWITCHER\n    },\n\n    UPD_ITEM: async () => {\n        await updateGateway(state.itemId, state.itemInstance);\n    },\n\n    DELETE_ITEM: async (context, id) => {\n        await deleteGateway(id);\n    },\n\n    SET_ITEM_ID: (context, id) => {\n        if (id !== 'new') context.commit('SET_ITEM_ID', id);\n    },\n\n    LOAD_DATA_LIST: async (context) => {\n        const response = await context.dispatch('GET_LIST');\n        context.dispatch('RESET_ITEM_STATE');\n        context.commit('SET_DATA_LIST', response);\n    },\n\n    SET_SIZE: (context, size) => {\n        context.commit('SET_SIZE', size);\n    },\n\n    SET_SEARCH: (context, search) => {\n        context.commit('SET_SEARCH', search);\n    },\n\n    NEXT_PAGE: (context) => {\n        if(state.isNextPage) {\n            context.commit('INCREMENT_PAGE');\n            context.dispatch('LOAD_DATA_LIST');\n        }\n    },\n\n    PREV_PAGE: (context) => {\n        if(state.page) {\n            context.commit('DECREMENT_PAGE');\n            context.dispatch('LOAD_DATA_LIST');\n        }\n    },\n\n    TOGGLE_ITEM_PROPERTY: async (context, index) => {\n        await context.commit('TOGGLE_ITEM_PROPERTY', index);\n        let changes = {enable: state.dataList[index].enable};\n        try {\n            context.dispatch('PATCH_ITEM', {id: state.dataList[index].id, changes});\n        } catch {\n            context.dispatch('LOAD_DATA_LIST');\n        }\n    },\n\n    LOAD_REGISTER_ITEM: async (context) => {\n        if (state.itemId) {\n            const item = await context.dispatch('GET_ITEM');\n            if (!item.register) {\n                router.replace('/routing/gateways/trunking/' + item.id);\n                return;\n            }\n            context.commit('SET_REGISTER_ITEM', proxy(item));\n        } else {\n            context.commit('SET_REGISTER_ITEM');\n        }\n    },\n\n    LOAD_TRUNKING_ITEM: async (context) => {\n        if (state.itemId) {\n            const item = await context.dispatch('GET_ITEM');\n            if (item.register) {\n                router.replace('/routing/gateways/register/' + item.id);\n                return;\n            }\n            context.commit('SET_TRUNKING_ITEM', proxy(item));\n        } else {\n            context.commit('SET_TRUNKING_ITEM');\n        }\n    },\n\n    SET_ITEM_PROPERTY: (context, payload) => {\n        context.commit('SET_ITEM_PROPERTY', payload);\n    },\n\n    ADD_VARIABLE_PAIR: (context) => {\n        const pair = {ip: '', proto: 'any', port: null};\n        context.commit('ADD_VARIABLE_PAIR', pair);\n        context.commit('SET_ITEM_PROPERTY', {prop: '_dirty', value: true});\n    },\n\n    SET_VARIABLE_PROP: (context, {index, prop, value}) => {\n        context.commit('SET_VARIABLE_PROP', {index, prop, value});\n        context.commit('SET_ITEM_PROPERTY', {prop: '_dirty', value: true});\n    },\n\n    DELETE_VARIABLE_PAIR: (context, index) => {\n        context.commit('DELETE_VARIABLE_PAIR', index);\n        context.commit('SET_ITEM_PROPERTY', {prop: '_dirty', value: true});\n    },\n\n    ADD_ITEM: async (context) => {\n        if(!state.itemId) {\n            const id = await context.dispatch('POST_ITEM');\n            await context.dispatch('SET_ITEM_ID', id);\n            state.itemInstance.register ?\n                context.dispatch('LOAD_REGISTER_ITEM') :\n                context.dispatch('LOAD_TRUNKING_ITEM');\n        }\n    },\n\n    UPDATE_ITEM: async (context) => {\n        if (state.itemInstance._dirty) {\n            await context.dispatch('UPD_ITEM');\n            state.itemInstance.register ?\n                context.dispatch('LOAD_REGISTER_ITEM') :\n                context.dispatch('LOAD_TRUNKING_ITEM');\n        }\n    },\n\n    REMOVE_ITEM: async (context, index) => {\n        const id = state.dataList[index].id;\n        context.commit('REMOVE_ITEM', index);\n        try {\n            await context.dispatch('DELETE_ITEM', id);\n        } catch {\n        }\n    },\n\n    RESET_ITEM_STATE: async (context) => {\n        context.commit('RESET_ITEM_STATE');\n    },\n};\n\nconst mutations = {\n    SET_ITEM_ID: (state, id) => {\n        state.itemId = id;\n    },\n\n    SET_DATA_LIST: (state, list) => {\n        state.dataList = list;\n    },\n\n    SET_SIZE: (state, size) => {\n        state.size = size;\n    },\n\n    SET_SEARCH: (state, search) => {\n        state.search = search;\n    },\n\n    INCREMENT_PAGE: (state) => {\n        state.page++;\n    },\n\n    DECREMENT_PAGE: (state) => {\n        state.page--;\n    },\n\n    SET_ITEM_PROPERTY: (state, {prop, value}) => {\n        state.itemInstance[prop] = value;\n    },\n\n    TOGGLE_ITEM_PROPERTY: (state, index) => {\n        state.dataList[index].enable = !state.dataList[index].enable;\n    },\n\n    SET_REGISTER_ITEM: (state, item) => {\n        if(item) {\n            state.itemInstance = item;\n        } else {\n            Object.assign(state, defaultState(), defaultRegisterItem());\n        }\n    },\n\n    SET_TRUNKING_ITEM: (state, item) => {\n        if(item) {\n            state.itemInstance = item;\n        } else {\n            Object.assign(state, defaultState(), defaultTrunkingItem());\n        }\n    },\n\n    ADD_VARIABLE_PAIR: (state, pair) => {\n        state.itemInstance.ipacl.push(pair);\n    },\n\n    SET_VARIABLE_PROP: (state, {index, prop, value}) => {\n        state.itemInstance.ipacl[index][prop] = value;\n    },\n\n    DELETE_VARIABLE_PAIR: (state, index) => {\n        state.itemInstance.ipacl.splice(index, 1);\n    },\n\n    REMOVE_ITEM: (state, index) => {\n        state.dataList.splice(index, 1);\n    },\n\n    RESET_ITEM_STATE: (state) => {\n        Object.assign(state, defaultState());\n    },\n};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations,\n};\n"]}]}