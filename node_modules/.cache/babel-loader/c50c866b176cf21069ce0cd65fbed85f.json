{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/utils/monacoSingleton.js","dependencies":[{"path":"/home/dev/work/client-auth/src/utils/monacoSingleton.js","mtime":1581327769352},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var createProposals = function createProposals(range) {\n  // returning a static list of proposals, not even looking at the prefix (filtering is done by the Monaco editor),\n  // here you could do a server side lookup\n  return [{\n    label: '\"agent\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Modify agent status.\",\n    insertText: JSON.stringify({\n      \"agent\": {\n        \"name\": \"1000\",\n        \"status\": \"Available\",\n        \"state\": \"Waiting\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"if\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Use if … then to specify a block of code to be executed, if a specified condition is true.\",\n    insertText: JSON.stringify({\n      \"if\": {\n        \"expression\": \"${myVar} != ''\",\n        \"then\": [],\n        \"else\": []\n      }\n    }, null, 4)\n  }, {\n    label: '\"switch\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Use switch to specify many alternative blocks of code to be executed.\",\n    insertText: JSON.stringify({\n      \"switch\": {\n        \"variable\": \"${IVR}\",\n        \"case\": {\n          \"1\": [],\n          \"2\": [],\n          \"3\": [],\n          \"default\": []\n        }\n      }\n    }, null, 4)\n  }, {\n    label: '\"amd\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Answering machine detection (voice activity detection).\",\n    insertText: JSON.stringify({\n      \"amd\": {\n        \"maximumWordLength\": 5000,\n        \"maximumNumberOfWords\": 3,\n        \"betweenWordsSilence\": 50,\n        \"minWordLength\": 100,\n        \"totalAnalysisTime\": 5000,\n        \"silenceThreshold\": 256,\n        \"afterGreetingSilence\": 800,\n        \"greeting\": 1500,\n        \"initialSilence\": 2500\n      }\n    }, null, 4)\n  }, {\n    label: '\"answer\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Answers an incoming call or session.\",\n    insertText: JSON.stringify({\n      \"answer\": \"200 OK\"\n    }, null, 4)\n  }, {\n    label: '\"blackList\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"The blackList application executes various actions for the blacklisted numbers.\",\n    insertText: JSON.stringify({\n      \"blackList\": {\n        \"name\": \"myNewBlackList\",\n        \"number\": \"${caller_id_number}\",\n        \"actions\": [{\n          \"hangup\": \"INCOMING_CALL_BARRED\"\n        }]\n      }\n    }, null, 4)\n  }, {\n    label: '\"bridge\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Bridge a new channel to the existing one.Generally used to route an incoming call to one or more endpoints. Multiple endpoints can be dialed simultaneously or sequentially.\",\n    insertText: JSON.stringify({\n      \"bridge\": {\n        \"strategy\": \"multiple\",\n        \"pickup\": \"mygroup\",\n        \"codecs\": [\"G729\", \"PCMA\"],\n        \"parameters\": [\"instant_ringback=true\"],\n        \"endpoints\": [{\n          \"name\": \"gw_name1\",\n          \"type\": \"sipGateway\",\n          \"dialString\": \"$1\",\n          \"parameters\": [\"sip_invite_params=user=phone\"]\n        }, {\n          \"name\": \"1000\",\n          \"type\": \"device\",\n          \"parameters\": [\"leg_timeout=15\"]\n        }]\n      }\n    }, null, 4)\n  }, {\n    label: '\"cache\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"The application can be used to distribute key/value pairs without having to resort to using a database.\",\n    insertText: JSON.stringify({\n      \"cache\": {\n        \"method\": \"add\",\n        \"expire\": 10,\n        \"key\": \"CID\",\n        \"value\": \"${caller_id_number}\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"calendar\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Set true or false into the variable when current datetime is in the Calendar.\",\n    insertText: JSON.stringify({\n      \"calendar\": {\n        \"name\": \"my Business Calendar\",\n        \"extended\": false,\n        \"setVar\": \"isWorkDay\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"callback\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Add number to the callback queue.\",\n    insertText: JSON.stringify({\n      \"callback\": {\n        \"setVar\": \"return_value\",\n        \"widget\": \"myWidget\",\n        \"queue\": \"callbackQueueName\",\n        \"number\": \"${caller_id_number}\",\n        \"comment\": \"Additional comment\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"cdr\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Create search request into the CDR.\",\n    insertText: JSON.stringify({\n      \"cdr\": {\n        \"exportVar\": {\n          \"avg_wait\": \"aggregations.waiting.value\"\n        },\n        \"elastic\": {\n          \"aggs\": {\n            \"waiting\": {\n              \"avg\": {\n                \"field\": \"queue.wait_duration\"\n              }\n            }\n          },\n          \"index\": \"cdr-a*\",\n          \"limit\": 0,\n          \"query\": \"*\",\n          \"filter\": {\n            \"bool\": {\n              \"must\": [{\n                \"match\": {\n                  \"queue.name\": \"myQueue\"\n                }\n              }, {\n                \"range\": {\n                  \"created_time\": {\n                    \"gte\": \"now-1h\",\n                    \"lte\": \"now\"\n                  }\n                }\n              }]\n            }\n          }\n        }\n      }\n    }, null, 4)\n  }, {\n    label: '\"conference\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"The inbound and outbound conference bridge service.\",\n    insertText: JSON.stringify({\n      \"conference\": {\n        \"name\": \"ConferenceName\",\n        \"pin\": \"1234\",\n        \"flags\": [\"mute\", \"moderator\"]\n      }\n    }, null, 4)\n  }, {\n    label: '\"inBandDTMF\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"You can use inBandDTMF to enable in-band DTMF detection (i.e. the detection of DTMF tones on a channel). You should do this when you want to be able to identify DTMF tones on a channel that doesn’t otherwise support another signaling method (like RFC2833 or INFO).\",\n    insertText: JSON.stringify({\n      \"inBandDTMF\": \"start\"\n    }, null, 4)\n  }, {\n    label: '\"flushDTMF\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Flushes DTMFs received on a channel. Useful in cases where callers may have entered extra digits in one dialog and you want to flush them out before sending them into another dialog.\",\n    insertText: JSON.stringify({\n      \"eavesdrop\": {\n        \"user\": \"1000\",\n        \"spy\": false\n      }\n    }, null, 4)\n  }, {\n    label: '\"echo\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Simply returns all audio sent, including voice, DTMF, etc after the specified delay milliseconds.\",\n    insertText: JSON.stringify({\n      echo: \"0\"\n    }, null, 4)\n  }, {\n    label: '\"exists\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Determines whether the given resource exists or not.\",\n    insertText: JSON.stringify({\n      \"exists\": {\n        \"resource\": \"media\",\n        \"name\": \"myFile.wav\",\n        \"type\": \"wav\",\n        \"setVar\": \"DoesMyFileExist\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"sendEmail\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Sending an Email.\",\n    insertText: JSON.stringify({\n      \"sendEmail\": {\n        \"to\": [\"office@gmail.com\", \"support@webitel.ua\"],\n        \"subject\": \"[webitel](${Caller - Caller - ID - Number}) SMS notification\",\n        \"message\": \"<h3>Turn on SMS</h3>\\\\n<b>Creditcard</b>: \\${Creditcard[0]} <i>***</i> \\${Creditcard[1]}\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"receiveFax\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Receive a FAX as a PDF file.\",\n    insertText: JSON.stringify({\n      \"receiveFax\": {\n        \"enable_t38\": false,\n        \"email\": [\"office@webitel.com\", \"admin@webitel.com\"]\n      }\n    }, null, 4)\n  }, {\n    label: '\"js\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Executes JavaScript code.\",\n    insertText: JSON.stringify({\n      \"js\": {\n        \"data\": \"var time = LocalDate(); time.setDate(time.getDate() + (+${dpd}*-1)); return time.getMonth() + '-' + time.getDate() + '-' + time.getFullYear()\",\n        \"setVar\": \"myVar\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"goto\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Immediately goto an another extension (or route) and exit from current extension.\",\n    insertText: JSON.stringify({\n      \"goto\": \"public:my_extension\"\n    }, null, 4)\n  }, {\n    label: '\"hangup\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Hangs up a current channel, with an optional cause code supplied.\",\n    insertText: JSON.stringify({\n      \"hangup\": \"\"\n    }, null, 4)\n  }, {\n    label: '\"httpRequest\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Send HTTP Request.\",\n    insertText: JSON.stringify({\n      \"httpRequest\": {\n        \"url\": \"https://sales.bpmonline.com/ServiceModel/AuthService.svc/Login\",\n        \"method\": \"POST\",\n        \"timeout\": 2000,\n        \"responseCode\": \"http_response_code\",\n        \"exportCookie\": \"my_cookie\",\n        \"data\": {\n          \"UserName\": \"Supervisor\",\n          \"UserPassword\": \"Supervisor\"\n        }\n      }\n    }, null, 4)\n  }, {\n    label: '\"log\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Logs a string of text to the console.\",\n    insertText: JSON.stringify({\n      \"log\": \"my log message\"\n    }, null, 4)\n  }, {\n    label: '\"math\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Math application allows you to perform mathematical tasks on numbers.\",\n    insertText: JSON.stringify({\n      \"math\": {\n        \"data\": \"${caller_id_array}\",\n        \"setVar\": \"new_random_caller_id\",\n        \"fn\": \"random\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"member\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Add new member to the dilaer.\",\n    insertText: JSON.stringify({\n      \"member\": {\n        \"dialer\": \"57a77ecbe5440b0c002ca16d\",\n        \"name\": \"${effective_caller_id_name}\",\n        \"priority\": 10,\n        \"variables\": {\n          \"DID\": \"380322530550\"\n        },\n        \"communications\": [{\n          \"number\": \"380442228392\",\n          \"priority\": 5,\n          \"type\": \"1\",\n          \"description\": \"call was missed\"\n        }]\n      }\n    }, null, 4)\n  }, {\n    label: '\"originate\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Originate a new call.\",\n    insertText: JSON.stringify({\n      \"originate\": {\n        \"uuid\": \"${new_uuid}\",\n        \"delay\": 2,\n        \"timeout\": 40,\n        \"cid_num\": \"${caller_id_number}\",\n        \"cid_name\": \"${caller_id_name}\",\n        \"exportVar\": {\n          \"other_uuid\": \"${uuid}\",\n          \"new_uuid\": \"${new_uuid}\"\n        },\n        \"endpoint\": {\n          \"name\": \"gw_name1\",\n          \"type\": \"sipGateway\",\n          \"dialString\": \"${caller_id2}\",\n          \"parameters\": [\"ignore_early_media=true\"]\n        },\n        \"actions\": [{\n          \"playback\": {\n            \"name\": \"my.mp3\",\n            \"type\": \"mp3\"\n          }\n        }, {\n          \"bridge\": {\n            \"uuid\": \"${new_uuid}\",\n            \"other_uuid\": \"${other_uuid}\"\n          }\n        }]\n      }\n    }, null, 4)\n  }, {\n    label: '\"park\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Places a channel “on hold” in the switch, instead of in the phone.\",\n    insertText: JSON.stringify({\n      \"park\": {\n        \"name\": \"myPark\",\n        \"lot\": \"1000-2000\",\n        \"auto\": \"in\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"pickup\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Permits proper answering of multiple simultaneous calls to the same pickup group.\",\n    insertText: JSON.stringify({\n      \"pickup\": \"mygroup\"\n    }, null, 4)\n  }, {\n    label: '\"playback\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Play an audio file or tone stream.\",\n    insertText: JSON.stringify({\n      \"playback\": {\n        \"name\": \"enter_ext.wav\",\n        \"type\": \"wav\",\n        \"getDigits\": {\n          \"setVar\": \"getIvrDigit\",\n          \"min\": 3,\n          \"max\": 4,\n          \"tries\": 1,\n          \"timeout\": 2000,\n          \"flushDTMF\": true\n        }\n      }\n    }, null, 4)\n  }, {\n    label: '\"queue\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"An inbound call queuing application that can be used for call center needs.\",\n    insertText: JSON.stringify({\n      \"queue\": {\n        \"name\": \"myQueueName\",\n        \"transferAfterBridge\": \"public:feedback_ivr_menu\",\n        \"timer\": {\n          \"interval\": 90,\n          \"tries\": 1,\n          \"actions\": [{\n            \"ccPosition\": {\n              \"var\": \"cc_my_position\"\n            }\n          }, {\n            \"playback\": {\n              \"files\": [{\n                \"name\": \"ivr/ivr-you_are_number.wav\",\n                \"type\": \"local\"\n              }, {\n                \"name\": \"${cc_my_position}\",\n                \"type\": \"say\",\n                \"lang\": \"en\",\n                \"method\": \"number pronounced\"\n              }]\n            }\n          }]\n        }\n      }\n    }, null, 4)\n  }, {\n    label: '\"recordFile\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Record to a file from the channel’s input media stream.\",\n    insertText: JSON.stringify({\n      \"recordFile\": {\n        \"name\": \"MySuperFile\",\n        \"terminators\": \"#\",\n        \"type\": \"mp3\",\n        \"maxSec\": 60,\n        \"silenceHits\": 5,\n        \"email\": [\"office@webitel.com\", \"admin@webitel.com\"],\n        \"emailSubject\": \"You have a new message!\",\n        \"emailBody\": \"Message fom ${caller_id_number}\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"recordSession\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Records an entire phone call or session.\",\n    insertText: JSON.stringify({\n      \"recordSession\": {\n        \"action\": \"start\",\n        \"type\": \"mp3\",\n        \"stereo\": true,\n        \"bridged\": true,\n        \"minSec\": 2,\n        \"followTransfer\": true,\n        \"email\": [\"office@webitel.com\", \"admin@webitel.com\"],\n        \"emailSubject\": \"You have a new message!\",\n        \"emailBody\": \"Message fom ${caller_id_number}\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"ringback\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Ringback call lets you set artificial ringback on a channel that is waiting for an originated call to be answered.\",\n    insertText: JSON.stringify({\n      \"ringback\": {\n        \"call\": {\n          \"name\": \"my.mp3\",\n          \"type\": \"mp3\"\n        },\n        \"hold\": {\n          \"type\": \"silence\"\n        },\n        \"transfer\": {\n          \"name\": \"${us-ring}\",\n          \"type\": \"tone\"\n        }\n      }\n    }, null, 4)\n  }, {\n    label: '\"schedule\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Schedule a hangup or goto in the future. Also, you can schedule a callback.\",\n    insertText: JSON.stringify({\n      \"schedule\": {\n        \"action\": \"hangup\",\n        \"seconds\": 360,\n        \"data\": \"ALLOTTED_TIMEOUT\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"sendEvent\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"sendEvent application can be used to fire arbitrary events.\",\n    insertText: JSON.stringify({\n      \"sendEvent\": {\n        \"dump\": false,\n        \"data\": {\n          \"myUUID\": \"${uuid}\"\n        }\n      }\n    }, null, 4)\n  }, {\n    label: '\"sipRedirect\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Can redirect a SIP channel to another endpoint.\",\n    insertText: JSON.stringify({\n      \"sipRedirect\": [\"sip:foo@bar.com\", \"sip:foo@end.com\"]\n    }, null, 4)\n  }, {\n    label: '\"setSounds\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Set sound file package. There are a number of sound file packages available.\",\n    insertText: JSON.stringify({\n      \"setSounds\": {\n        \"voice\": \"elena\",\n        \"lang\": \"ru_RU\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"sleep\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Pause the channel for a given number of milliseconds, consuming the audio for that period of time. Calling sleep also will consume any outstanding RTP on the operating system’s input queue, which can be very useful in situations where audio becomes backlogged.\",\n    insertText: JSON.stringify({\n      \"sleep\": 1000\n    }, null, 4)\n  }, {\n    label: '\"script\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"String application help you to work with strings.\",\n    insertText: JSON.stringify({\n      \"string\": {\n        \"data\": \"${caller_id_number}\",\n        \"fn\": \"replace\",\n        \"setVar\": \"effective_caller_id_number\",\n        \"args\": [\"/^0/\", \"+84\"]\n      }\n    }, null, 4)\n  }, {\n    label: '\"stt\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Speech-To-Text.\",\n    insertText: JSON.stringify({\n      \"stt\": {\n        \"lang\": \"uk-UA\",\n        \"maxSec\": 15,\n        \"silenceThresh\": 200,\n        \"silenceHits\": 3,\n        \"setVar\": \"myTextVar\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"tts\"',\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Text-To-Speech.\",\n    insertText: JSON.stringify({\n      \"tts\": {\n        \"provider\": \"polly\",\n        \"accessKey\": \"GDNYEHJWNNYYWBJNOZA\",\n        \"accessToken\": \"c1j5QSPx9H63jmwtwMojSZiQ9QeO+3v\",\n        \"voice\": \"Maxim\",\n        \"textType\": \"ssml\",\n        \"text\": \"<speak><amazon:effect name=\\\"whispered\\\">If you make any noise, </amazon:effect> she said, <amazon:effect name=\\\"whispered\\\">they will hear us.</amazon:effect></speak>\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"setUser\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Pulls all of the channel variables defined for a user as if the user had auth’d.\",\n    insertText: JSON.stringify({\n      \"setUser\": {\n        \"name\": \"102\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"findUser\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Find an user by variables or parameters.\",\n    insertText: JSON.stringify({\n      \"findUser\": {\n        \"filter\": {\n          \"vm-password\": \"${userPIN}\"\n        },\n        \"columns\": [\"id\", \"effective_caller_id_name\"],\n        \"exportVariables\": {\n          \"ext_id\": \"0.id\",\n          \"effective_caller_id_name\": \"0.effective_caller_id_name\"\n        }\n      }\n    }, null, 4)\n  }, {\n    label: '\"userData\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Retrieves user variables as defined in the directory.\",\n    insertText: JSON.stringify({\n      \"userData\": {\n        \"name\": \"102\",\n        \"var\": \"account_state\",\n        \"setVar\": \"acc_state\"\n      }\n    }, null, 4)\n  }, {\n    label: '\"setVar\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Set a channel variable.\",\n    insertText: JSON.stringify({\n      \"setVar\": [\"a=1\", \"b=2\", \"c=3\"]\n    }, null, 4)\n  }, {\n    label: '\"setArray\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Set array of variables\",\n    insertText: JSON.stringify({\n      \"setArray\": {\n        \"myArray\": [\"val1\", \"val2\", \"val3\"]\n      }\n    }, null, 4)\n  }, {\n    label: '\"setProfileVar\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Set profile variable.\",\n    insertText: JSON.stringify({\n      \"setProfileVar\": [\"caller_id_name=Customer\"]\n    }, null, 4)\n  }, {\n    label: '\"exportVars\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"exportVars lists variables to be exported to the webitel client side upon JavaScript library.\",\n    insertText: JSON.stringify({\n      \"exportVars\": [\"ivrLang\", \"mainMenuAction\", \"subMenuAction\"]\n    }, null, 4)\n  }, {\n    label: '\"unSet\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Clears out a channel variable.\",\n    insertText: JSON.stringify({\n      \"unSet\": \"sip_h_call-info\"\n    }, null, 4)\n  }, {\n    label: '\"voicemail\"',\n    range: range,\n    kind: monaco.languages.CompletionItemKind.Function,\n    documentation: \"Voicemail application lets you send calls to voicemail, which allows callers to leave messages for users and allows users to retrieve and manage any messages left by callers.\",\n    insertText: JSON.stringify({\n      \"voicemail\": {\n        \"user\": \"100\",\n        \"skip_greeting\": true,\n        \"skip_instructions\": true,\n        \"cc\": [\"1001\", \"1002\"]\n      }\n    }, null, 4)\n  }];\n};\n\nexport var Monaco = function () {\n  var instance;\n\n  var createInstance = function createInstance() {\n    return monaco;\n  };\n\n  var registerCompletion = function registerCompletion(instance) {\n    instance.languages.registerCompletionItemProvider('json', {\n      provideCompletionItems: function provideCompletionItems(model, position, context, token) {\n        var word = model.getWordUntilPosition(position);\n        var range = {\n          startLineNumber: position.lineNumber,\n          startColumn: word.startColumn,\n          endLineNumber: position.lineNumber,\n          endColumn: word.endColumn\n        };\n        return {\n          suggestions: createProposals(range)\n        };\n      }\n    });\n  };\n\n  return {\n    getInstance: function getInstance() {\n      if (!instance) {\n        instance = createInstance();\n        registerCompletion(instance);\n      }\n\n      return instance;\n    }\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/utils/monacoSingleton.js"],"names":["createProposals","range","label","kind","monaco","languages","CompletionItemKind","Function","documentation","insertText","JSON","stringify","echo","Monaco","instance","createInstance","registerCompletion","registerCompletionItemProvider","provideCompletionItems","model","position","context","token","word","getWordUntilPosition","startLineNumber","lineNumber","startColumn","endLineNumber","endColumn","suggestions","getInstance"],"mappings":"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","sourcesContent":["const createProposals = (range) => {\n    // returning a static list of proposals, not even looking at the prefix (filtering is done by the Monaco editor),\n    // here you could do a server side lookup\n    return [\n        {\n            label: '\"agent\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Modify agent status.\",\n            insertText: JSON.stringify({\n                \"agent\": {\n                    \"name\": \"1000\",\n                    \"status\": \"Available\",\n                    \"state\": \"Waiting\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"if\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Use if … then to specify a block of code to be executed, if a specified condition is true.\",\n            insertText: JSON.stringify({\n                \"if\": {\n                    \"expression\": \"${myVar} != ''\",\n                    \"then\": [],\n                    \"else\": []\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"switch\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Use switch to specify many alternative blocks of code to be executed.\",\n            insertText: JSON.stringify({\n                \"switch\": {\n                    \"variable\": \"${IVR}\",\n                    \"case\": {\n                        \"1\": [],\n                        \"2\": [],\n                        \"3\": [],\n                        \"default\": []\n                    }\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"amd\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Answering machine detection (voice activity detection).\",\n            insertText: JSON.stringify({\n                \"amd\": {\n                    \"maximumWordLength\": 5000,\n                    \"maximumNumberOfWords\": 3,\n                    \"betweenWordsSilence\": 50,\n                    \"minWordLength\": 100,\n                    \"totalAnalysisTime\": 5000,\n                    \"silenceThreshold\": 256,\n                    \"afterGreetingSilence\": 800,\n                    \"greeting\": 1500,\n                    \"initialSilence\": 2500\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"answer\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Answers an incoming call or session.\",\n            insertText: JSON.stringify({\n                \"answer\": \"200 OK\"\n            }, null, 4),\n        },\n        {\n            label: '\"blackList\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"The blackList application executes various actions for the blacklisted numbers.\",\n            insertText: JSON.stringify({\n                \"blackList\": {\n                    \"name\": \"myNewBlackList\",\n                    \"number\": \"${caller_id_number}\",\n                    \"actions\": [\n                        {\n                            \"hangup\": \"INCOMING_CALL_BARRED\"\n                        }\n                    ]\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"bridge\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Bridge a new channel to the existing one.Generally used to route an incoming call to one or more endpoints. Multiple endpoints can be dialed simultaneously or sequentially.\",\n            insertText: JSON.stringify({\n                \"bridge\": {\n                    \"strategy\": \"multiple\",\n                    \"pickup\": \"mygroup\",\n                    \"codecs\": [\"G729\", \"PCMA\"],\n                    \"parameters\": [\"instant_ringback=true\"],\n                    \"endpoints\": [\n                        {\n                            \"name\": \"gw_name1\",\n                            \"type\": \"sipGateway\",\n                            \"dialString\": \"$1\",\n                            \"parameters\": [\"sip_invite_params=user=phone\"]\n                        },\n                        {\n                            \"name\": \"1000\",\n                            \"type\": \"device\",\n                            \"parameters\": [\"leg_timeout=15\"]\n                        },\n                    ]\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"cache\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"The application can be used to distribute key/value pairs without having to resort to using a database.\",\n            insertText: JSON.stringify({\n                    \"cache\": {\n                        \"method\": \"add\",\n                        \"expire\": 10,\n                        \"key\": \"CID\",\n                        \"value\": \"${caller_id_number}\"\n                    }\n                }, null, 4),\n        },\n        {\n            label: '\"calendar\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Set true or false into the variable when current datetime is in the Calendar.\",\n            insertText: JSON.stringify({\n                \"calendar\": {\n                    \"name\": \"my Business Calendar\",\n                    \"extended\": false,\n                    \"setVar\": \"isWorkDay\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"callback\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Add number to the callback queue.\",\n            insertText: JSON.stringify({\n                \"callback\": {\n                    \"setVar\": \"return_value\",\n                    \"widget\": \"myWidget\",\n                    \"queue\": \"callbackQueueName\",\n                    \"number\": \"${caller_id_number}\",\n                    \"comment\": \"Additional comment\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"cdr\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Create search request into the CDR.\",\n            insertText: JSON.stringify({\n                \"cdr\": {\n                    \"exportVar\": {\n                        \"avg_wait\": \"aggregations.waiting.value\"\n                    },\n                    \"elastic\": {\n                        \"aggs\": {\n                            \"waiting\": {\n                                \"avg\": {\n                                    \"field\": \"queue.wait_duration\"\n                                }\n                            }\n                        },\n                        \"index\": \"cdr-a*\",\n                        \"limit\": 0,\n                        \"query\": \"*\",\n                        \"filter\": {\n                            \"bool\": {\n                                \"must\": [\n                                    {\n                                        \"match\": {\n                                            \"queue.name\": \"myQueue\"\n                                        }\n                                    },\n                                    {\n                                        \"range\": {\n                                            \"created_time\": {\n                                                \"gte\": \"now-1h\",\n                                                \"lte\": \"now\"\n                                            }\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    }\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"conference\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"The inbound and outbound conference bridge service.\",\n            insertText: JSON.stringify({\n                \"conference\": {\n                    \"name\": \"ConferenceName\",\n                    \"pin\": \"1234\",\n                    \"flags\": [\"mute\", \"moderator\"]\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"inBandDTMF\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"You can use inBandDTMF to enable in-band DTMF detection (i.e. the detection of DTMF tones on a channel). You should do this when you want to be able to identify DTMF tones on a channel that doesn’t otherwise support another signaling method (like RFC2833 or INFO).\",\n            insertText: JSON.stringify({\n                    \"inBandDTMF\": \"start\"\n                }, null, 4),\n        },\n        {\n            label: '\"flushDTMF\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Flushes DTMFs received on a channel. Useful in cases where callers may have entered extra digits in one dialog and you want to flush them out before sending them into another dialog.\",\n            insertText: JSON.stringify({\n                \"eavesdrop\": {\n                    \"user\": \"1000\",\n                    \"spy\": false\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"echo\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Simply returns all audio sent, including voice, DTMF, etc after the specified delay milliseconds.\",\n            insertText: JSON.stringify({echo: \"0\"}, null, 4),\n        },\n        {\n            label: '\"exists\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Determines whether the given resource exists or not.\",\n            insertText: JSON.stringify({\n                \"exists\": {\n                    \"resource\": \"media\",\n                    \"name\": \"myFile.wav\",\n                    \"type\": \"wav\",\n                    \"setVar\": \"DoesMyFileExist\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"sendEmail\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Sending an Email.\",\n            insertText: JSON.stringify({\n                \"sendEmail\": {\n                    \"to\": [\n                        \"office@gmail.com\",\n                        \"support@webitel.ua\"\n                    ],\n                    \"subject\": \"[webitel](${Caller - Caller - ID - Number}) SMS notification\",\n                    \"message\": \"<h3>Turn on SMS</h3>\\\\n<b>Creditcard</b>: \\${Creditcard[0]} <i>***</i> \\${Creditcard[1]}\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"receiveFax\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Receive a FAX as a PDF file.\",\n            insertText: JSON.stringify({\n                \"receiveFax\": {\n                    \"enable_t38\": false,\n                    \"email\": [\"office@webitel.com\", \"admin@webitel.com\"]\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"js\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Executes JavaScript code.\",\n            insertText: JSON.stringify({\n                \"js\": {\n                    \"data\": \"var time = LocalDate(); time.setDate(time.getDate() + (+${dpd}*-1)); return time.getMonth() + '-' + time.getDate() + '-' + time.getFullYear()\",\n                    \"setVar\": \"myVar\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"goto\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Immediately goto an another extension (or route) and exit from current extension.\",\n            insertText: JSON.stringify({\n                    \"goto\": \"public:my_extension\"\n                }, null, 4),\n        },\n        {\n            label: '\"hangup\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Hangs up a current channel, with an optional cause code supplied.\",\n            insertText: JSON.stringify({\n                \"hangup\": \"\"\n            }, null, 4),\n        },\n        {\n            label: '\"httpRequest\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Send HTTP Request.\",\n            insertText: JSON.stringify({\n                \"httpRequest\": {\n                    \"url\": \"https://sales.bpmonline.com/ServiceModel/AuthService.svc/Login\",\n                    \"method\": \"POST\",\n                    \"timeout\": 2000,\n                    \"responseCode\": \"http_response_code\",\n                    \"exportCookie\": \"my_cookie\",\n                    \"data\": {\n                        \"UserName\": \"Supervisor\",\n                        \"UserPassword\": \"Supervisor\"\n                    }\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"log\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Logs a string of text to the console.\",\n            insertText: JSON.stringify({\n                \"log\": \"my log message\"\n            }, null, 4),\n        },\n        {\n            label: '\"math\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Math application allows you to perform mathematical tasks on numbers.\",\n            insertText: JSON.stringify({\n                \"math\": {\n                    \"data\": \"${caller_id_array}\",\n                    \"setVar\": \"new_random_caller_id\",\n                    \"fn\": \"random\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"member\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Add new member to the dilaer.\",\n            insertText: JSON.stringify({\n                \"member\": {\n                    \"dialer\": \"57a77ecbe5440b0c002ca16d\",\n                    \"name\": \"${effective_caller_id_name}\",\n                    \"priority\": 10,\n                    \"variables\": {\n                        \"DID\": \"380322530550\"\n                    },\n                    \"communications\": [\n                        {\n                            \"number\": \"380442228392\",\n                            \"priority\": 5,\n                            \"type\": \"1\",\n                            \"description\": \"call was missed\"\n                        }\n                    ]\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"originate\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Originate a new call.\",\n            insertText: JSON.stringify({\n                \"originate\": {\n                    \"uuid\": \"${new_uuid}\",\n                    \"delay\": 2,\n                    \"timeout\": 40,\n                    \"cid_num\": \"${caller_id_number}\",\n                    \"cid_name\": \"${caller_id_name}\",\n                    \"exportVar\": {\n                        \"other_uuid\": \"${uuid}\",\n                        \"new_uuid\": \"${new_uuid}\"\n                    },\n                    \"endpoint\": {\n                        \"name\": \"gw_name1\",\n                        \"type\": \"sipGateway\",\n                        \"dialString\": \"${caller_id2}\",\n                        \"parameters\": [\"ignore_early_media=true\"]\n                    },\n                    \"actions\": [\n                        {\n                            \"playback\": {\n                                \"name\": \"my.mp3\",\n                                \"type\": \"mp3\"\n                            }\n                        },\n                        {\n                            \"bridge\": {\n                                \"uuid\": \"${new_uuid}\",\n                                \"other_uuid\": \"${other_uuid}\"\n                            }\n                        }\n                    ]\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"park\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Places a channel “on hold” in the switch, instead of in the phone.\",\n            insertText: JSON.stringify({\n                \"park\": {\n                    \"name\": \"myPark\",\n                    \"lot\": \"1000-2000\",\n                    \"auto\": \"in\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"pickup\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Permits proper answering of multiple simultaneous calls to the same pickup group.\",\n            insertText: JSON.stringify({\n                \"pickup\": \"mygroup\"\n            }, null, 4),\n        },\n        {\n            label: '\"playback\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Play an audio file or tone stream.\",\n            insertText: JSON.stringify({\n                \"playback\": {\n                    \"name\": \"enter_ext.wav\",\n                    \"type\": \"wav\",\n                    \"getDigits\": {\n                        \"setVar\": \"getIvrDigit\",\n                        \"min\": 3,\n                        \"max\": 4,\n                        \"tries\": 1,\n                        \"timeout\": 2000,\n                        \"flushDTMF\": true\n                    }\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"queue\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"An inbound call queuing application that can be used for call center needs.\",\n            insertText: JSON.stringify({\n                \"queue\": {\n                    \"name\": \"myQueueName\",\n                    \"transferAfterBridge\": \"public:feedback_ivr_menu\",\n                    \"timer\": {\n                        \"interval\": 90,\n                        \"tries\": 1,\n                        \"actions\": [\n                            {\n                                \"ccPosition\": {\n                                    \"var\": \"cc_my_position\"\n                                }\n                            },\n                            {\n                                \"playback\": {\n                                    \"files\": [\n                                        {\n                                            \"name\": \"ivr/ivr-you_are_number.wav\",\n                                            \"type\": \"local\"\n                                        },\n                                        {\n                                            \"name\": \"${cc_my_position}\",\n                                            \"type\": \"say\",\n                                            \"lang\": \"en\",\n                                            \"method\": \"number pronounced\"\n                                        }\n                                    ]\n                                }\n                            }\n                        ]\n                    }\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"recordFile\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Record to a file from the channel’s input media stream.\",\n            insertText: JSON.stringify({\n                \"recordFile\": {\n                    \"name\": \"MySuperFile\",\n                    \"terminators\": \"#\",\n                    \"type\": \"mp3\",\n                    \"maxSec\": 60,\n                    \"silenceHits\": 5,\n                    \"email\": [\"office@webitel.com\", \"admin@webitel.com\"],\n                    \"emailSubject\": \"You have a new message!\",\n                    \"emailBody\": \"Message fom ${caller_id_number}\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"recordSession\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Records an entire phone call or session.\",\n            insertText: JSON.stringify({\n                \"recordSession\": {\n                    \"action\": \"start\",\n                    \"type\": \"mp3\",\n                    \"stereo\": true,\n                    \"bridged\": true,\n                    \"minSec\": 2,\n                    \"followTransfer\": true,\n                    \"email\": [\"office@webitel.com\", \"admin@webitel.com\"],\n                    \"emailSubject\": \"You have a new message!\",\n                    \"emailBody\": \"Message fom ${caller_id_number}\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"ringback\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Ringback call lets you set artificial ringback on a channel that is waiting for an originated call to be answered.\",\n            insertText: JSON.stringify({\n                \"ringback\": {\n                    \"call\": {\n                        \"name\": \"my.mp3\",\n                        \"type\": \"mp3\"\n                    },\n                    \"hold\": {\n                        \"type\": \"silence\"\n                    },\n                    \"transfer\": {\n                        \"name\": \"${us-ring}\",\n                        \"type\": \"tone\"\n                    }\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"schedule\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Schedule a hangup or goto in the future. Also, you can schedule a callback.\",\n            insertText: JSON.stringify({\n                    \"schedule\": {\n                        \"action\": \"hangup\",\n                        \"seconds\": 360,\n                        \"data\": \"ALLOTTED_TIMEOUT\"\n                    }\n                }, null, 4),\n        },\n        {\n            label: '\"sendEvent\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"sendEvent application can be used to fire arbitrary events.\",\n            insertText: JSON.stringify({\n                \"sendEvent\": {\n                    \"dump\": false,\n                    \"data\": {\n                        \"myUUID\": \"${uuid}\"\n                    }\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"sipRedirect\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Can redirect a SIP channel to another endpoint.\",\n            insertText: JSON.stringify({\n                    \"sipRedirect\": [\"sip:foo@bar.com\", \"sip:foo@end.com\"]\n                }, null, 4),\n        },\n        {\n            label: '\"setSounds\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Set sound file package. There are a number of sound file packages available.\",\n            insertText: JSON.stringify({\n                \"setSounds\": {\n                    \"voice\": \"elena\",\n                    \"lang\": \"ru_RU\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"sleep\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Pause the channel for a given number of milliseconds, consuming the audio for that period of time. Calling sleep also will consume any outstanding RTP on the operating system’s input queue, which can be very useful in situations where audio becomes backlogged.\",\n            insertText: JSON.stringify({\n                \"sleep\": 1000\n            }, null, 4),\n        },\n        {\n            label: '\"script\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"String application help you to work with strings.\",\n            insertText: JSON.stringify({\n                    \"string\": {\n                        \"data\": \"${caller_id_number}\",\n                        \"fn\": \"replace\",\n                        \"setVar\": \"effective_caller_id_number\",\n                        \"args\": [\n                            \"/^0/\",\n                            \"+84\"\n                        ]\n                    }\n                }, null, 4),\n        },\n        {\n            label: '\"stt\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Speech-To-Text.\",\n            insertText: JSON.stringify({\n                \"stt\": {\n                    \"lang\": \"uk-UA\",\n                    \"maxSec\": 15,\n                    \"silenceThresh\": 200,\n                    \"silenceHits\": 3,\n                    \"setVar\": \"myTextVar\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"tts\"',\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Text-To-Speech.\",\n            insertText: JSON.stringify({\n                \"tts\": {\n                    \"provider\": \"polly\",\n                    \"accessKey\": \"GDNYEHJWNNYYWBJNOZA\",\n                    \"accessToken\": \"c1j5QSPx9H63jmwtwMojSZiQ9QeO+3v\",\n                    \"voice\": \"Maxim\",\n                    \"textType\": \"ssml\",\n                    \"text\": \"<speak><amazon:effect name=\\\"whispered\\\">If you make any noise, </amazon:effect> she said, <amazon:effect name=\\\"whispered\\\">they will hear us.</amazon:effect></speak>\"\n                }\n            }, null, 4)\n        },\n        {\n            label: '\"setUser\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Pulls all of the channel variables defined for a user as if the user had auth’d.\",\n            insertText: JSON.stringify({\n                \"setUser\": {\n                    \"name\": \"102\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"findUser\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Find an user by variables or parameters.\",\n            insertText: JSON.stringify({\n                \"findUser\": {\n                    \"filter\": {\n                        \"vm-password\": \"${userPIN}\"\n                    },\n                    \"columns\": [\n                        \"id\",\n                        \"effective_caller_id_name\"\n                    ],\n                    \"exportVariables\": {\n                        \"ext_id\": \"0.id\",\n                        \"effective_caller_id_name\": \"0.effective_caller_id_name\"\n                    }\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"userData\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Retrieves user variables as defined in the directory.\",\n            insertText: JSON.stringify({\n                \"userData\": {\n                    \"name\": \"102\",\n                    \"var\": \"account_state\",\n                    \"setVar\": \"acc_state\"\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"setVar\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Set a channel variable.\",\n            insertText: JSON.stringify({\n                    \"setVar\": [\"a=1\", \"b=2\", \"c=3\"]\n                }, null, 4),\n        },\n        {\n            label: '\"setArray\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Set array of variables\",\n            insertText: JSON.stringify({\n                \"setArray\": {\n                    \"myArray\": [\n                        \"val1\", \"val2\", \"val3\"\n                    ]\n                }\n            }, null, 4),\n        },\n        {\n            label: '\"setProfileVar\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Set profile variable.\",\n            insertText: JSON.stringify({\n                \"setProfileVar\": [\n                    \"caller_id_name=Customer\"\n                ]\n            }, null, 4),\n        },\n        {\n            label: '\"exportVars\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"exportVars lists variables to be exported to the webitel client side upon JavaScript library.\",\n            insertText: JSON.stringify({\n                \"exportVars\": [\n                    \"ivrLang\",\n                    \"mainMenuAction\",\n                    \"subMenuAction\"\n                ]\n            }, null, 4),\n        },\n        {\n            label: '\"unSet\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Clears out a channel variable.\",\n            insertText: JSON.stringify({\n                \"unSet\": \"sip_h_call-info\"\n            }, null, 4),\n        },\n        {\n            label: '\"voicemail\"',\n            range,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: \"Voicemail application lets you send calls to voicemail, which allows callers to leave messages for users and allows users to retrieve and manage any messages left by callers.\",\n            insertText: JSON.stringify({\n                \"voicemail\": {\n                    \"user\": \"100\",\n                    \"skip_greeting\": true,\n                    \"skip_instructions\": true,\n                    \"cc\": [\n                        \"1001\",\n                        \"1002\"\n                    ]\n                }\n            }, null, 4),\n        },\n    ]\n};\n\nexport const Monaco = (() => {\n    let instance;\n\n    const createInstance = () => {\n        return monaco;\n    };\n\n    const registerCompletion = (instance) => {\n        instance.languages.registerCompletionItemProvider('json', {\n            provideCompletionItems: (model, position, context, token) => {\n                const word = model.getWordUntilPosition(position);\n                const range = {\n                    startLineNumber: position.lineNumber,\n                    startColumn: word.startColumn,\n                    endLineNumber: position.lineNumber,\n                    endColumn: word.endColumn,\n                };\n                return {\n                    suggestions: createProposals(range),\n                }\n            }\n        });\n    };\n\n    return {\n        getInstance() {\n            if(!instance) {\n                instance = createInstance();\n                registerCompletion(instance);\n            }\n            return instance;\n        }\n    }\n})();"]}]}