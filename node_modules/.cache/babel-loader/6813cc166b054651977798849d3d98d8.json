{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/contact-center/queues/queueResGroups.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/contact-center/queues/queueResGroups.js","mtime":1580889261630},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../../instance\";\nimport configuration from \"../../openAPIConfig\";\nimport sanitizer from \"../../utils/sanitizer\";\nimport { QueueResourcesServiceApiFactory } from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport deepCopy from 'deep-copy';\nimport store from \"../../../store/store\";\nvar queueResService = new QueueResourcesServiceApiFactory(configuration, '', instance);\nvar fieldsToSend = ['domainId', 'resourceGroup', 'queueId'];\nexport var getQueueResGroupList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(queueId) {\n    var page,\n        size,\n        search,\n        domainId,\n        defaultObject,\n        response,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n            size = _args.length > 2 && _args[2] !== undefined ? _args[2] : 10;\n            search = _args.length > 3 ? _args[3] : undefined;\n            domainId = store.state.userinfo.domainId || undefined;\n            if (search && search.slice(-1) !== '*') search += '*';\n            defaultObject = {\n              _isSelected: false\n            };\n            _context.prev = 6;\n            _context.next = 9;\n            return queueResService.searchQueueResourceGroup(queueId, page, size, domainId);\n\n          case 9:\n            response = _context.sent;\n\n            if (!response.items) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.items.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", []);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            throw _context.t0;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function getQueueResGroupList(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getQueueResGroup =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(queueId, id) {\n    var domainId, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              _dirty: false\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return queueResService.readQueueResourceGroup(queueId, id, domainId);\n\n          case 5:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", _objectSpread({}, defaultObject, {}, response));\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            throw _context2.t0;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function getQueueResGroup(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var addQueueResGroup =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(queueId, item) {\n    var itemCopy, response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.queuId = queueId;\n            sanitizer(itemCopy, fieldsToSend);\n            _context3.prev = 4;\n            _context3.next = 7;\n            return queueResService.createQueueResourceGroup(queueId, itemCopy);\n\n          case 7:\n            response = _context3.sent;\n            eventBus.$emit('notificationInfo', 'Sucessfully added');\n            return _context3.abrupt(\"return\", response.id);\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](4);\n            throw _context3.t0;\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[4, 12]]);\n  }));\n\n  return function addQueueResGroup(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var updateQueueResGroup =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(queueId, id, item) {\n    var itemCopy;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.queuId = queueId;\n            sanitizer(itemCopy, fieldsToSend);\n            _context4.prev = 4;\n            _context4.next = 7;\n            return queueResService.updateQueueResourceGroup(queueId, id, itemCopy);\n\n          case 7:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context4.next = 13;\n            break;\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](4);\n            throw _context4.t0;\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[4, 10]]);\n  }));\n\n  return function updateQueueResGroup(_x6, _x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var deleteQueueResGroup =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(queueId, id) {\n    var domainId;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return queueResService.deleteQueueResourceGroup(queueId, id, domainId);\n\n          case 4:\n            _context5.next = 9;\n            break;\n\n          case 6:\n            _context5.prev = 6;\n            _context5.t0 = _context5[\"catch\"](1);\n            throw _context5.t0;\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 6]]);\n  }));\n\n  return function deleteQueueResGroup(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/contact-center/queues/queueResGroups.js"],"names":["instance","configuration","sanitizer","QueueResourcesServiceApiFactory","eventBus","deepCopy","store","queueResService","fieldsToSend","getQueueResGroupList","queueId","page","size","search","domainId","state","userinfo","undefined","slice","defaultObject","_isSelected","searchQueueResourceGroup","response","items","map","item","getQueueResGroup","id","_dirty","readQueueResourceGroup","addQueueResGroup","itemCopy","queuId","createQueueResourceGroup","$emit","updateQueueResGroup","updateQueueResourceGroup","deleteQueueResGroup","deleteQueueResourceGroup"],"mappings":";;;;;;;;;;;AAAA,OAAOA,QAAP;AACA,OAAOC,aAAP;AACA,OAAOC,SAAP;AACA,SAAQC,+BAAR,QAA8C,aAA9C;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP;AAEA,IAAMC,eAAe,GAAG,IAAIJ,+BAAJ,CACvBF,aADuB,EACR,EADQ,EACJD,QADI,CAAxB;AAGA,IAAMQ,YAAY,GAAG,CAAC,UAAD,EAAa,eAAb,EAA8B,SAA9B,CAArB;AAEA,OAAO,IAAMC,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,YAAAA,IAAhB,2DAAuB,CAAvB;AAA0BC,YAAAA,IAA1B,2DAAiC,EAAjC;AAAqCC,YAAAA,MAArC;AAC1BC,YAAAA,QAD0B,GACfR,KAAK,CAACS,KAAN,CAAYC,QAAZ,CAAqBF,QAArB,IAAiCG,SADlB;AAEhC,gBAAIJ,MAAM,IAAIA,MAAM,CAACK,KAAP,CAAa,CAAC,CAAd,MAAqB,GAAnC,EAAwCL,MAAM,IAAI,GAAV;AAClCM,YAAAA,aAH0B,GAGV;AAClBC,cAAAA,WAAW,EAAE;AADK,aAHU;AAAA;AAAA;AAAA,mBAQLb,eAAe,CAACc,wBAAhB,CAAyCX,OAAzC,EAAkDC,IAAlD,EAAwDC,IAAxD,EAA8DE,QAA9D,CARK;;AAAA;AAQtBQ,YAAAA,QARsB;;AAAA,iBASxBA,QAAQ,CAACC,KATe;AAAA;AAAA;AAAA;;AAAA,6CAUjBD,QAAQ,CAACC,KAAT,CAAeC,GAAf,CAAmB,UAAAC,IAAI,EAAI;AAC9B,uCAAWN,aAAX,MAA6BM,IAA7B;AACH,aAFM,CAViB;;AAAA;AAAA,6CAcrB,EAdqB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBhB,oBAAoB;AAAA;AAAA;AAAA,GAA1B;AAoBP,OAAO,IAAMiB,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOhB,OAAP,EAAgBiB,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBb,YAAAA,QADsB,GACXR,KAAK,CAACS,KAAN,CAAYC,QAAZ,CAAqBF,QAArB,IAAiCG,SADtB;AAEtBE,YAAAA,aAFsB,GAEN;AAClBS,cAAAA,MAAM,EAAE;AADU,aAFM;AAAA;AAAA;AAAA,mBAMHrB,eAAe,CAACsB,sBAAhB,CAAuCnB,OAAvC,EAAgDiB,EAAhD,EAAoDb,QAApD,CANG;;AAAA;AAMpBQ,YAAAA,QANoB;AAAA,gEAObH,aAPa,MAOKG,QAPL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBI,gBAAgB;AAAA;AAAA;AAAA,GAAtB;AAaP,OAAO,IAAMI,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOpB,OAAP,EAAgBe,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBM,YAAAA,QADwB,GACb1B,QAAQ,CAACoB,IAAD,CADK;AAE5BM,YAAAA,QAAQ,CAACjB,QAAT,GAAoBR,KAAK,CAACS,KAAN,CAAYC,QAAZ,CAAqBF,QAArB,IAAiCG,SAArD;AACAc,YAAAA,QAAQ,CAACC,MAAT,GAAkBtB,OAAlB;AACAR,YAAAA,SAAS,CAAC6B,QAAD,EAAWvB,YAAX,CAAT;AAJ4B;AAAA;AAAA,mBAMDD,eAAe,CAAC0B,wBAAhB,CAAyCvB,OAAzC,EAAkDqB,QAAlD,CANC;;AAAA;AAMlBT,YAAAA,QANkB;AAOxBlB,YAAAA,QAAQ,CAAC8B,KAAT,CAAe,kBAAf,EAAmC,mBAAnC;AAPwB,8CAQjBZ,QAAQ,CAACK,EARQ;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBG,gBAAgB;AAAA;AAAA;AAAA,GAAtB;AAcP,OAAO,IAAMK,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOzB,OAAP,EAAgBiB,EAAhB,EAAoBF,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BM,YAAAA,QAD2B,GAChB1B,QAAQ,CAACoB,IAAD,CADQ;AAE/BM,YAAAA,QAAQ,CAACjB,QAAT,GAAoBR,KAAK,CAACS,KAAN,CAAYC,QAAZ,CAAqBF,QAArB,IAAiCG,SAArD;AACAc,YAAAA,QAAQ,CAACC,MAAT,GAAkBtB,OAAlB;AACAR,YAAAA,SAAS,CAAC6B,QAAD,EAAWvB,YAAX,CAAT;AAJ+B;AAAA;AAAA,mBAMrBD,eAAe,CAAC6B,wBAAhB,CAAyC1B,OAAzC,EAAkDiB,EAAlD,EAAsDI,QAAtD,CANqB;;AAAA;AAO3B3B,YAAAA,QAAQ,CAAC8B,KAAT,CAAe,kBAAf,EAAmC,qBAAnC;AAP2B;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAnBC,mBAAmB;AAAA;AAAA;AAAA,GAAzB;AAaP,OAAO,IAAME,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAO3B,OAAP,EAAgBiB,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBb,YAAAA,QADyB,GACdR,KAAK,CAACS,KAAN,CAAYC,QAAZ,CAAqBF,QAArB,IAAiCG,SADnB;AAAA;AAAA;AAAA,mBAGrBV,eAAe,CAAC+B,wBAAhB,CAAyC5B,OAAzC,EAAkDiB,EAAlD,EAAsDb,QAAtD,CAHqB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAnBuB,mBAAmB;AAAA;AAAA;AAAA,GAAzB","sourcesContent":["import instance from '../../instance';\nimport configuration from '../../openAPIConfig';\nimport sanitizer from '../../utils/sanitizer';\nimport {QueueResourcesServiceApiFactory} from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport deepCopy from 'deep-copy';\nimport store from '../../../store/store';\n\nconst queueResService = new QueueResourcesServiceApiFactory\n(configuration, '', instance);\n\nconst fieldsToSend = ['domainId', 'resourceGroup', 'queueId'];\n\nexport const getQueueResGroupList = async (queueId, page = 0, size = 10, search) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    if (search && search.slice(-1) !== '*') search += '*';\n    const defaultObject = {\n        _isSelected: false,\n    };\n\n    try {\n        const response = await queueResService.searchQueueResourceGroup(queueId, page, size, domainId);\n        if (response.items) {\n            return response.items.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return [];\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getQueueResGroup = async (queueId, id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        _dirty: false,\n    };\n    try {\n        let response = await queueResService.readQueueResourceGroup(queueId, id, domainId);\n        return {...defaultObject, ...response};\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const addQueueResGroup = async (queueId, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.queuId = queueId;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        const response = await queueResService.createQueueResourceGroup(queueId, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully added');\n        return response.id;\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const updateQueueResGroup = async (queueId, id, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.queuId = queueId;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        await queueResService.updateQueueResourceGroup(queueId, id, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const deleteQueueResGroup = async (queueId, id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    try {\n        await queueResService.deleteQueueResourceGroup(queueId, id, domainId);\n    } catch (err) {\n        throw err;\n    }\n};"]}]}