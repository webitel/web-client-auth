{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/integrations/tokens/opened-token.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/integrations/tokens/opened-token.vue","mtime":1578657456666},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport tokenPopup from \"./copy-token-popup\";\nimport openedTokenGeneral from \"./opened-token-general\";\nimport editComponentMixin from '@/mixins/editComponentMixin';\nimport { required } from 'vuelidate/lib/validators';\nexport default {\n  name: \"opened-token\",\n  mixins: [editComponentMixin],\n  components: {\n    tokenPopup: tokenPopup,\n    openedTokenGeneral: openedTokenGeneral\n  },\n  data: function data() {\n    return {\n      itemInstance: {\n        name: 'Trigger name',\n        role: {\n          name: 'Role name'\n        },\n        expires: Date.now().toLocaleString()\n      },\n      tabs: [{\n        text: this.$t('objects.general'),\n        value: 'general'\n      }],\n      popupTriggerIf: false\n    };\n  },\n  // by vuelidate\n  validations: {\n    itemInstance: {\n      name: {\n        required: required\n      }\n    }\n  },\n  methods: {\n    save: function () {\n      var _save = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.id) {// upd\n                } else {//add\n                  }\n\n                this.close();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n  }\n};",{"version":3,"sources":["opened-token.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,UAAA;AACA,OAAA,kBAAA;AACA,OAAA,kBAAA,MAAA,6BAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,MAAA,EAAA,CAAA,kBAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,kBAAA,EAAA;AAFA,GAHA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AACA,QAAA,IAAA,EAAA,cADA;AAEA,QAAA,IAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAFA;AAGA,QAAA,OAAA,EAAA,IAAA,CAAA,GAAA,GAAA,cAAA;AAHA,OADA;AAMA,MAAA,IAAA,EAAA,CAAA;AACA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,iBAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA,CANA;AAUA,MAAA,cAAA,EAAA;AAVA,KAAA;AAYA,GApBA;AAsBA;AACA,EAAA,WAAA,EAAA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA;AADA;AADA,GAvBA;AA+BA,EAAA,OAAA,EAAA;AACA,IAAA,IADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,oBAAA,KAAA,EAAA,EAAA,CACA;AACA,iBAFA,MAEA,CACA;AACA;;AACA,qBAAA,KAAA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA/BA,CAAA","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryText=\"$t('objects.save')\"\n                :primaryAction=\"() => {this.popupTriggerIf = true}\"\n                close\n        >\n            <span>{{$tc('objects.integrations.tokens.tokens', 1)}}</span> | {{computeTitle}}\n        </object-header>\n        <token-popup v-if=\"popupTriggerIf\" @close=\"popupTriggerIf = false\"></token-popup>\n        <tabs-component\n                :tabs=\"tabs\"\n                :itemInstance=\"itemInstance\"\n                :v=\"$v\"\n                :root=\"$options.name\"\n        >\n            <template slot=\"component\" slot-scope=\"props\">\n                <component\n                        class=\"tabs-inner-component\"\n                        :is=\"props.currentTab\"\n                        :itemInstanceProp=\"itemInstance\"\n                        :v=\"$v\"\n                ></component>\n            </template>\n        </tabs-component>\n    </div>\n</template>\n\n<script>\n    import tokenPopup from './copy-token-popup';\n    import openedTokenGeneral from './opened-token-general';\n    import editComponentMixin from '@/mixins/editComponentMixin';\n    import {required} from 'vuelidate/lib/validators';\n\n    export default {\n        name: \"opened-token\",\n        mixins: [editComponentMixin],\n        components: {\n            tokenPopup,\n            openedTokenGeneral,\n        },\n        data() {\n            return {\n                itemInstance: {\n                    name: 'Trigger name',\n                    role: {name: 'Role name'},\n                    expires: Date.now().toLocaleString()\n                },\n                tabs: [{\n                        text: this.$t('objects.general'),\n                        value: 'general',\n                    }],\n                popupTriggerIf: false,\n            };\n        },\n\n        // by vuelidate\n        validations: {\n            itemInstance: {\n                name: {\n                    required\n                },\n            }\n        },\n\n        methods: {\n            async save() {\n                if (this.id) {\n                    // upd\n                } else {\n                    //add\n                }\n                this.close();\n            },\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/components/integrations/tokens"}]}