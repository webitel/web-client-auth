{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/the-settings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/the-settings.vue","mtime":1581340388169},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport objectHeader from \"./object-utils/the-object-header\";\nimport DropdownSelect from \"./utils/dropdown-select\";\nimport btn from \"./utils/btn\";\nimport formInput from \"./utils/form-input\";\nimport { sameAs, required } from 'vuelidate/lib/validators';\nexport default {\n  name: \"the-settings\",\n  components: {\n    DropdownSelect: DropdownSelect,\n    objectHeader: objectHeader,\n    btn: btn,\n    formInput: formInput\n  },\n  data: function data() {\n    return {\n      password: '',\n      confirmPassword: '',\n      language: {\n        name: 'English',\n        id: 'en'\n      },\n      languageOptions: [{\n        name: 'English',\n        id: 'en'\n      }, {\n        name: 'Русский',\n        id: 'ru'\n      }]\n    };\n  },\n  validations: {\n    password: {\n      required: required\n    },\n    confirmPassword: {\n      sameAs: sameAs('password')\n    }\n  },\n  mounted: function mounted() {\n    var lang = localStorage.getItem('lang'); // get default lang\n    // if there's a previously set lang, set it\n\n    if (lang) this.language = this.languageOptions.find(function (item) {\n      return item.id === lang;\n    });\n  },\n  computed: {\n    computeDisabled: function computeDisabled() {\n      this.$v.$touch();\n      return this.$v.$pending || this.$v.$error;\n    }\n  },\n  methods: {\n    changePassword: function changePassword() {},\n    changeLanguage: function changeLanguage(value) {\n      localStorage.setItem('lang', value.id);\n      this.language = value;\n      this.$i18n.locale = value.id;\n    }\n  }\n};",{"version":3,"sources":["the-settings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,OAAA,YAAA;AACA,OAAA,cAAA;AACA,OAAA,GAAA;AACA,OAAA,SAAA;AACA,SAAA,MAAA,EAAA,QAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,cAAA,EAAA,cAAA;AAAA,IAAA,YAAA,EAAA,YAAA;AAAA,IAAA,GAAA,EAAA,GAAA;AAAA,IAAA,SAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,eAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,EAAA,EAAA;AAAA,OAHA;AAIA,MAAA,eAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,EAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,EAAA,EAAA;AAAA,OAFA;AAJA,KAAA;AAAA,GAHA;AAaA,EAAA,WAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA,KADA;AAIA,IAAA,eAAA,EAAA;AACA,MAAA,MAAA,EAAA,MAAA,CAAA,UAAA;AADA;AAJA,GAbA;AAsBA,EAAA,OAtBA,qBAsBA;AACA,QAAA,IAAA,GAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CADA,CACA;AACA;;AACA,QAAA,IAAA,EAAA,KAAA,QAAA,GAAA,KAAA,eAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,aAAA,IAAA,CAAA,EAAA,KAAA,IAAA;AAAA,KAAA,CAAA;AACA,GA1BA;AA4BA,EAAA,QAAA,EAAA;AACA,IAAA,eADA,6BACA;AACA,WAAA,EAAA,CAAA,MAAA;AACA,aAAA,KAAA,EAAA,CAAA,QAAA,IAAA,KAAA,EAAA,CAAA,MAAA;AACA;AAJA,GA5BA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA,CAAA,CADA;AAGA,IAAA,cAHA,0BAGA,KAHA,EAGA;AACA,MAAA,YAAA,CAAA,OAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA;AACA,WAAA,QAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,MAAA,GAAA,KAAA,CAAA,EAAA;AACA;AAPA;AAnCA,CAAA","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header hide-primary-action>\n            {{$t('settings.settings')}}\n        </object-header>\n\n        <section class=\"object-content\">\n            <section class=\"settings-section\">\n                <header class=\"content-header\">\n                    <h3 class=\"content-title\">{{$t('settings.changePassword')}}</h3>\n                </header>\n                <form class=\"object-input-grid grid-w50\">\n                    <div>\n                        <form-input\n                                v-model=\"password\"\n                                :v=\"$v.password\"\n                                :label=\"$t('auth.password')\"\n                                required\n                        ></form-input>\n                        <form-input\n                                v-model=\"confirmPassword\"\n                                :v=\"$v.confirmPassword\"\n                                :label=\"$t('auth.confirmPassword')\"\n                                required\n                        ></form-input>\n                        <btn\n                                :disabled=\"computeDisabled\"\n                            @click=\"changePassword\"\n                        >{{$t('objects.save')}}</btn>\n                    </div>\n                </form>\n            </section>\n\n            <section class=\"settings-section\">\n                <header class=\"content-header\">\n                    <h3 class=\"content-title\">{{$t('settings.language')}}</h3>\n                </header>\n                <form class=\"object-input-grid grid-w50\">\n                    <dropdown-select\n                        class=\"language-list\"\n                        :value=\"language\"\n                        :options=\"languageOptions\"\n                        :label=\"$t('settings.language')\"\n                        @input=\"changeLanguage\"\n                    ></dropdown-select>\n                </form>\n            </section>\n        </section>\n    </div>\n</template>\n\n<script>\n    import objectHeader from './object-utils/the-object-header';\n    import DropdownSelect from \"./utils/dropdown-select\";\n    import btn from \"./utils/btn\";\n    import formInput from \"./utils/form-input\";\n    import {sameAs, required} from 'vuelidate/lib/validators';\n\n    export default {\n        name: \"the-settings\",\n        components: {DropdownSelect, objectHeader, btn, formInput, },\n        data: () => ({\n            password: '',\n            confirmPassword: '',\n            language: {name: 'English', id: 'en'},\n            languageOptions: [\n                {name: 'English', id: 'en'},\n                {name: 'Русский', id: 'ru'},\n            ]\n        }),\n\n        validations: {\n            password: {\n                required\n            },\n            confirmPassword: {\n                sameAs: sameAs('password'),\n            },\n        },\n\n        mounted() {\n            const lang = localStorage.getItem('lang'); // get default lang\n            // if there's a previously set lang, set it\n            if(lang) this.language = this.languageOptions.find(item => item.id === lang);\n        },\n\n        computed: {\n            computeDisabled() {\n                this.$v.$touch();\n                return this.$v.$pending || this.$v.$error;\n            }\n        },\n\n        methods: {\n            changePassword() {},\n\n            changeLanguage(value) {\n                localStorage.setItem('lang', value.id);\n                this.language = value;\n                this.$i18n.locale = value.id;\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .settings-section {\n        margin-bottom: 28px;\n\n        .btn {\n            display: block;\n            margin: 3px 0 0 auto;\n        }\n    }\n</style>"],"sourceRoot":"src/components"}]}