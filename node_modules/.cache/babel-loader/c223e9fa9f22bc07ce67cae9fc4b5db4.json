{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/routing/dialplan/opened-dialplan.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/routing/dialplan/opened-dialplan.vue","mtime":1579875250266},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport editComponentMixin from '@/mixins/editComponentMixin';\nimport { required } from 'vuelidate/lib/validators';\nimport { mapActions, mapState } from \"vuex\";\nimport { getFlowList } from \"../../../api/routing/flow/flow\";\nexport default {\n  name: \"opened-dialplan\",\n  mixins: [editComponentMixin],\n  data: function data() {\n    return {};\n  },\n  // by vuelidate\n  validations: {\n    itemInstance: {\n      name: {\n        required: required\n      },\n      schema: {\n        required: required\n      },\n      pattern: {\n        required: required\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.id = this.$route.params.id;\n    this.loadItem();\n    this.loadDropdownOptionsList();\n  },\n  computed: _objectSpread({}, mapState('routing/dialplan', {\n    itemInstance: function itemInstance(state) {\n      return state.itemInstance;\n    }\n  }), {\n    id: {\n      get: function get() {\n        return this.$store.state.routing.dialplan.itemId;\n      },\n      set: function set(value) {\n        this.setId(value);\n      }\n    },\n    name: {\n      get: function get() {\n        return this.$store.state.routing.dialplan.itemInstance.name;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'name',\n          value: value\n        });\n      }\n    },\n    schema: {\n      get: function get() {\n        return this.$store.state.routing.dialplan.itemInstance.schema;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'schema',\n          value: value\n        });\n      }\n    },\n    pattern: {\n      get: function get() {\n        return this.$store.state.routing.dialplan.itemInstance.pattern;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'pattern',\n          value: value\n        });\n      }\n    },\n    description: {\n      get: function get() {\n        return this.$store.state.routing.dialplan.itemInstance.description;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'description',\n          value: value\n        });\n      }\n    }\n  }),\n  methods: _objectSpread({\n    loadDropdownOptionsList: function () {\n      var _loadDropdownOptionsList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(search) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getFlowList(0, 10, search);\n\n              case 2:\n                response = _context.sent;\n                this.dropdownOptionsList = response.map(function (item) {\n                  return {\n                    name: item.name,\n                    id: item.id\n                  };\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadDropdownOptionsList(_x) {\n        return _loadDropdownOptionsList.apply(this, arguments);\n      }\n\n      return loadDropdownOptionsList;\n    }()\n  }, mapActions('routing/dialplan', {\n    setId: 'SET_ITEM_ID',\n    loadItem: 'LOAD_ITEM',\n    addItem: 'ADD_ITEM',\n    updateItem: 'UPDATE_ITEM',\n    setItemProp: 'SET_ITEM_PROPERTY'\n  }))\n};",{"version":3,"sources":["opened-dialplan.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryText=\"computePrimaryText\"\n                :primaryAction=\"save\"\n                :primaryDisabled=\"computeDisabled\"\n                close\n        >\n            <span>{{$t('objects.routing.dialplan.dialplanRule')}}</span> | {{computeTitle}}\n        </object-header>\n        <section class=\"object-content module-new\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">{{$t('objects.generalInfo')}}</h3>\n            </header>\n            <form class=\"object-input-grid\">\n                <form-input\n                        v-model.trim=\"name\"\n                        :v=\"$v.itemInstance.name\"\n                        :label=\"$t('objects.name')\"\n                        required\n                ></form-input>\n\n                <dropdown-select\n                    v-model=\"schema\"\n                    :v=\"$v.itemInstance.schema\"\n                    :label=\"$tc('objects.routing.schema', 1)\"\n                    :options=\"dropdownOptionsList\"\n                    @search=\"loadDropdownOptionsList\"\n                    required\n                ></dropdown-select>\n\n<!--                1 col container-->\n                <div>\n                    <form-input\n                            v-model.trim=\"pattern\"\n                            :v=\"$v.itemInstance.pattern\"\n                            :label=\"$t('objects.routing.dialplan.pattern')\"\n                            required\n                    ></form-input>\n\n                    <form-input\n                            v-model=\"description\"\n                            :label=\"$t('objects.description')\"\n                            textarea\n                    ></form-input>\n                </div>\n            </form>\n        </section>\n    </div>\n</template>\n\n<script>\n    import editComponentMixin from '@/mixins/editComponentMixin';\n\n    import {required} from 'vuelidate/lib/validators';\n    import {mapActions, mapState} from \"vuex\";\n    import {getFlowList} from \"../../../api/routing/flow/flow\";\n\n    export default {\n        name: \"opened-dialplan\",\n        mixins: [editComponentMixin],\n        data() {\n            return {\n\n            };\n        },\n\n        // by vuelidate\n        validations: {\n            itemInstance: {\n                name: {\n                    required\n                },\n                schema: {\n                    required\n                },\n                pattern: {\n                    required\n                }\n            }\n        },\n\n        mounted() {\n            this.id = this.$route.params.id;\n            this.loadItem();\n            this.loadDropdownOptionsList();\n        },\n\n        computed: {\n            ...mapState('routing/dialplan', {\n                itemInstance: state => state.itemInstance,\n            }),\n            id: {\n                get() {return this.$store.state.routing.dialplan.itemId},\n                set(value) {this.setId(value)}\n            },\n            name: {\n                get() {return this.$store.state.routing.dialplan.itemInstance.name},\n                set(value) {this.setItemProp({prop: 'name', value})}\n            },\n            schema: {\n                get() {return this.$store.state.routing.dialplan.itemInstance.schema},\n                set(value) {this.setItemProp({prop: 'schema', value})}\n            },\n            pattern: {\n                get() {return this.$store.state.routing.dialplan.itemInstance.pattern},\n                set(value) {this.setItemProp({prop: 'pattern', value})}\n            },\n            description: {\n                get() {return this.$store.state.routing.dialplan.itemInstance.description},\n                set(value) {this.setItemProp({prop: 'description', value})}\n            },\n        },\n\n        methods: {\n            async loadDropdownOptionsList(search) {\n                const response = await getFlowList(0, 10, search);\n                this.dropdownOptionsList = response.map(item => {\n                    return {\n                        name: item.name,\n                        id: item.id\n                    };\n                });\n            },\n\n            ...mapActions('routing/dialplan', {\n                setId: 'SET_ITEM_ID',\n                loadItem: 'LOAD_ITEM',\n                addItem: 'ADD_ITEM',\n                updateItem: 'UPDATE_ITEM',\n                setItemProp: 'SET_ITEM_PROPERTY',\n            }),\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components/routing/dialplan"}]}