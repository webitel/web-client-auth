{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/integrations/triggers/the-triggers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/integrations/triggers/the-triggers.vue","mtime":1578657456666},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport tableComponentMixin from '@/mixins/tableComponentMixin';\nimport { _checkboxTableField, _actionsTableField_2, _switcherWidth } from \"@/utils/tableFieldPresets\";\nimport triggerPopup from \"./create-trigger-popup\";\nexport default {\n  name: \"the-triggers\",\n  mixins: [tableComponentMixin],\n  components: {\n    triggerPopup: triggerPopup\n  },\n  data: function data() {\n    return {\n      fields: [_checkboxTableField, {\n        name: 'name',\n        title: this.$t('objects.name')\n      }, {\n        name: 'type',\n        title: this.$t('objects.integrations.triggers.type')\n      }, {\n        name: 'enabled',\n        title: this.$t('objects.enabled'),\n        width: _switcherWidth\n      }, {\n        name: 'schema',\n        title: this.$t('objects.integrations.triggers.schema')\n      }, _actionsTableField_2]\n    };\n  },\n  methods: {\n    create: function create() {\n      this.popupTriggerIf = true;\n    },\n    edit: function edit(rowId) {\n      this.$router.push({\n        name: 'trigger-edit',\n        params: {\n          id: this.filteredDataList[rowId].id\n        }\n      });\n    },\n    deleteItem: function () {\n      var _deleteItem = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(item) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function deleteItem(_x) {\n        return _deleteItem.apply(this, arguments);\n      }\n\n      return deleteItem;\n    }(),\n    loadDataList: function () {\n      var _loadDataList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var i;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // this.dataList = await getCommunicationsList();\n                for (i = 0; i < 10; i++) {\n                  this.dataList.push({\n                    name: 'Trigger name ' + i,\n                    type: i % 2 ? 'On event' : 'At time',\n                    enabled: !!Math.round(Math.random()),\n                    schema: {\n                      name: 'Schema name'\n                    },\n                    isSelected: false\n                  });\n                }\n\n                this.filterData();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadDataList() {\n        return _loadDataList.apply(this, arguments);\n      }\n\n      return loadDataList;\n    }()\n  }\n};",{"version":3,"sources":["the-triggers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA,OAAA,mBAAA,MAAA,8BAAA;AACA,SAAA,mBAAA,EAAA,oBAAA,EAAA,cAAA,QAAA,2BAAA;AACA,OAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,MAAA,EAAA,CAAA,mBAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GAHA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,CACA,mBADA,EAEA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,cAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,oCAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,iBAAA,CAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,IAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,sCAAA;AAAA,OALA,EAMA,oBANA;AADA,KAAA;AAUA,GAjBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,cAAA,GAAA,IAAA;AACA,KAHA;AAKA,IAAA,IALA,gBAKA,KALA,EAKA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,cADA;AAEA,QAAA,MAAA,EAAA;AAAA,UAAA,EAAA,EAAA,KAAA,gBAAA,CAAA,KAAA,EAAA;AAAA;AAFA,OAAA;AAIA,KAVA;AAYA,IAAA,UAZA;AAAA;AAAA;AAAA,+CAYA,IAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgBA,IAAA,YAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA,qBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,EAAA;AACA,uBAAA,QAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA,kBAAA,CADA;AAEA,oBAAA,IAAA,EAAA,CAAA,GAAA,CAAA,GAAA,UAAA,GAAA,SAFA;AAGA,oBAAA,OAAA,EAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,EAAA,CAHA;AAIA,oBAAA,MAAA,EAAA;AACA,sBAAA,IAAA,EAAA;AADA,qBAJA;AAOA,oBAAA,UAAA,EAAA;AAPA,mBAAA;AASA;;AAEA,qBAAA,UAAA;;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnBA,CAAA","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n\n        <object-header\n                :primaryAction=\"create\"\n        >\n            {{$t('objects.integrations.integrations')}} |\n            {{$tc('objects.integrations.triggers.triggers', 2)}}\n        </object-header>\n\n        <trigger-popup\n                v-if=\"true\"\n                @close=\"popupTriggerIf = false\"\n        >\n        </trigger-popup>\n\n        <section class=\"object-content\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">{{$t('objects.integrations.triggers.allTriggers')}}</h3>\n                <div class=\"content-header__actions-wrap\">\n                    <search\n                            @filterData=\"filterData\"\n                    ></search>\n                    <i\n                            class=\"icon-icon_delete icon-action\"\n                            :class=\"{'hidden': anySelected}\"\n                            @click=\"deleteSelected\"\n                    ></i>\n                </div>\n            </header>\n\n            <vuetable\n                    ref=\"vuetable\"\n                    :api-mode=\"false\"\n                    :fields=\"fields\"\n                    :data=\"filteredDataList\"\n            >\n                <template slot=\"name\" slot-scope=\"props\">\n                    <div class=\"tt-capitalize\">\n                        <span class=\"nameLink\" @click=\"edit(props.rowIndex)\">\n                        {{filteredDataList[props.rowIndex].name}}\n                        </span>\n                    </div>\n                </template>\n\n                <template slot=\"type\" slot-scope=\"props\">\n                    <div>\n                        {{filteredDataList[props.rowIndex].type}}\n                    </div>\n                </template>\n\n                <template slot=\"enabled\" slot-scope=\"props\">\n                    <switcher\n                            v-model=\"filteredDataList[props.rowIndex].enabled\"\n                    ></switcher>\n                </template>\n\n                <template slot=\"schema\" slot-scope=\"props\">\n                    <div>\n                        {{filteredDataList[props.rowIndex].schema.name}}\n                    </div>\n                </template>\n\n                <template slot=\"actions\" slot-scope=\"props\">\n                    <i class=\"vuetable-action icon-icon_edit\"\n                       @click=\"edit(props.rowIndex)\"\n                    ></i>\n                    <i class=\"vuetable-action icon-icon_delete\"\n                       @click=\"remove(props.rowIndex)\"\n                    ></i>\n                </template>\n            </vuetable>\n            <pagination></pagination>\n        </section>\n    </div>\n</template>\n\n<script>\n    import tableComponentMixin from '@/mixins/tableComponentMixin';\n    import {_checkboxTableField, _actionsTableField_2, _switcherWidth} from \"@/utils/tableFieldPresets\";\n    import triggerPopup from './create-trigger-popup';\n\n    export default {\n        name: \"the-triggers\",\n        mixins: [tableComponentMixin],\n        components: {\n            triggerPopup\n        },\n        data() {\n            return {\n                fields: [\n                    _checkboxTableField,\n                    {name: 'name', title: this.$t('objects.name')},\n                    {name: 'type', title: this.$t('objects.integrations.triggers.type')},\n                    {name: 'enabled', title: this.$t('objects.enabled'), width: _switcherWidth},\n                    {name: 'schema', title: this.$t('objects.integrations.triggers.schema')},\n                    _actionsTableField_2,\n                ],\n            };\n        },\n\n        methods: {\n            create() {\n                this.popupTriggerIf = true;\n            },\n\n            edit(rowId) {\n                this.$router.push({\n                    name: 'trigger-edit',\n                    params: {id: this.filteredDataList[rowId].id},\n                });\n            },\n\n            async deleteItem(item) {\n                // await deleteCommunication(item.id);\n            },\n\n            async loadDataList() {\n                // this.dataList = await getCommunicationsList();\n                for (let i = 0; i < 10; i++) {\n                    this.dataList.push({\n                        name: 'Trigger name ' + i,\n                        type: i%2 ? 'On event' : 'At time',\n                        enabled: !!Math.round(Math.random()),\n                        schema: {\n                            name: 'Schema name',\n                        },\n                        isSelected: false,\n                    });\n                }\n\n                this.filterData();\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/components/integrations/triggers"}]}