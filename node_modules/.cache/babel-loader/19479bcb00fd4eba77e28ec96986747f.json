{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/store/modules/contact-center/queues/queues.js","dependencies":[{"path":"/home/dev/work/client-auth/src/store/modules/contact-center/queues/queues.js","mtime":1580903321701},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport proxy from \"../../../../utils/editProxy\";\nimport buckets from \"./queue-buckets\";\nimport resGroups from \"./queue-res-groups\";\nimport members from \"./queue-members\";\nimport permissions from \"./permissions\";\nimport { addQueue, deleteQueue, patchQueue, getQueue, getQueuesList, updateQueue } from \"../../../../api/contact-center/queues/queues\";\n\nvar defaultState = function defaultState() {\n  return {\n    itemId: 0,\n    itemInstance: {\n      name: '',\n      payload: {},\n      calendar: {},\n      priority: 0,\n      dncList: {},\n      description: '',\n      schema: {},\n      team: {},\n      strategy: {}\n    }\n  };\n};\n\nvar defaultInboundQueueState = function defaultInboundQueueState() {\n  return {\n    name: 'INBOUND QUEUE',\n    type: 1,\n    payload: {},\n    calendar: {},\n    priority: '0',\n    dncList: {},\n    // blacklist\n    schema: {},\n    team: {},\n    variables: [{\n      key: 'var key',\n      value: 'value'\n    }],\n    description: 'DESCRIPTION'\n  };\n};\n\nvar defaultOutboundIVRQueueState = function defaultOutboundIVRQueueState() {\n  return {\n    name: 'OUTBOUND IVR QUEUE',\n    type: 2,\n    calendar: {},\n    priority: '0',\n    dncList: {},\n    // blacklist\n    schema: {},\n    variables: [{\n      key: 'var key',\n      value: 'value'\n    }],\n    strategy: {},\n    description: 'DESCRIPTION',\n    timeout: 10,\n    payload: {\n      secBetweenRetries: 30 * 3600,\n      //30h\n      originateTimeout: 15,\n      maxCalls: 10,\n      maxOfRetry: 10\n    }\n  };\n};\n\nvar defaultOfflineQueueState = function defaultOfflineQueueState() {\n  return {\n    name: 'OFFLINE QUEUE',\n    type: 0,\n    calendar: {},\n    priority: '0',\n    dncList: {},\n    // blacklist\n    schema: {},\n    team: {},\n    variables: [{\n      key: 'var key',\n      value: 'value'\n    }],\n    strategy: {},\n    description: 'DESCRIPTION',\n    timeout: 10,\n    payload: {\n      secBetweenRetries: 30 * 3600,\n      //30h\n      originateTimeout: 15,\n      waitForResultStatus: true,\n      maxOfRetry: 10\n    }\n  };\n};\n\nvar defaultPredictiveDialerState = function defaultPredictiveDialerState() {\n  return {\n    name: 'PREDICTIVE DIALER',\n    type: 5,\n    calendar: {},\n    priority: '0',\n    dncList: {},\n    // blacklist\n    schema: {},\n    team: {},\n    variables: [{\n      key: 'var key',\n      value: 'value'\n    }],\n    strategy: {},\n    description: 'DESCRIPTION',\n    timeout: 10,\n    payload: {\n      secBetweenRetries: 30 * 3600,\n      //30h\n      originateTimeout: 15,\n      waitForResultStatus: true,\n      maxOfRetry: 10\n    }\n  };\n};\n\nvar defaultPreviewDialerState = function defaultPreviewDialerState() {\n  return {\n    name: 'PREVIEW DIALER',\n    type: 3,\n    calendar: {},\n    priority: '0',\n    dncList: {},\n    // blacklist\n    schema: {},\n    team: {},\n    variables: [{\n      key: 'var key',\n      value: 'value'\n    }],\n    strategy: {},\n    description: 'DESCRIPTION',\n    timeout: 10,\n    payload: {\n      secBetweenRetries: 30 * 3600,\n      //30h\n      originateTimeout: 15,\n      waitForResultStatus: true,\n      maxOfRetry: 10\n    }\n  };\n};\n\nvar defaultProgressiveDialerState = function defaultProgressiveDialerState() {\n  return {\n    name: 'PROGRESSIVE DIALER',\n    type: 4,\n    calendar: {},\n    priority: '0',\n    dncList: {},\n    // blacklist\n    schema: {},\n    team: {},\n    variables: [{\n      key: 'var key',\n      value: 'value'\n    }],\n    strategy: {},\n    description: 'DESCRIPTION',\n    timeout: 10,\n    payload: {\n      secBetweenRetries: 30 * 3600,\n      //30h\n      originateTimeout: 15,\n      waitForResultStatus: true,\n      maxOfRetry: 10\n    }\n  };\n};\n\nvar state = _objectSpread({\n  dataList: [],\n  size: '10',\n  search: '',\n  page: 0,\n  isNextPage: true\n}, defaultState());\n\nvar getters = {};\nvar actions = {\n  GET_LIST: function () {\n    var _GET_LIST = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getQueuesList(state.page, state.size, state.search);\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function GET_LIST() {\n      return _GET_LIST.apply(this, arguments);\n    }\n\n    return GET_LIST;\n  }(),\n  GET_ITEM: function () {\n    var _GET_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getQueue(state.itemId);\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function GET_ITEM() {\n      return _GET_ITEM.apply(this, arguments);\n    }\n\n    return GET_ITEM;\n  }(),\n  POST_ITEM: function () {\n    var _POST_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return addQueue(state.itemInstance);\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function POST_ITEM() {\n      return _POST_ITEM.apply(this, arguments);\n    }\n\n    return POST_ITEM;\n  }(),\n  PATCH_ITEM: function () {\n    var _PATCH_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(context, _ref) {\n      var id, changes;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = _ref.id, changes = _ref.changes;\n              _context4.next = 3;\n              return patchQueue(id, changes);\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function PATCH_ITEM(_x, _x2) {\n      return _PATCH_ITEM.apply(this, arguments);\n    }\n\n    return PATCH_ITEM;\n  }(),\n  UPD_ITEM: function () {\n    var _UPD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5() {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return updateQueue(state.itemId, state.itemInstance);\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function UPD_ITEM() {\n      return _UPD_ITEM.apply(this, arguments);\n    }\n\n    return UPD_ITEM;\n  }(),\n  DELETE_ITEM: function () {\n    var _DELETE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(context, id) {\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return deleteQueue(id);\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function DELETE_ITEM(_x3, _x4) {\n      return _DELETE_ITEM.apply(this, arguments);\n    }\n\n    return DELETE_ITEM;\n  }(),\n  SET_ITEM_ID: function SET_ITEM_ID(context, id) {\n    if (id !== 'new') context.commit('SET_ITEM_ID', id);\n  },\n  LOAD_DATA_LIST: function () {\n    var _LOAD_DATA_LIST = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(context) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return context.dispatch('GET_LIST');\n\n            case 2:\n              response = _context7.sent;\n              context.dispatch('RESET_ITEM_STATE');\n              context.commit('SET_DATA_LIST', response);\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function LOAD_DATA_LIST(_x5) {\n      return _LOAD_DATA_LIST.apply(this, arguments);\n    }\n\n    return LOAD_DATA_LIST;\n  }(),\n  SET_SIZE: function SET_SIZE(context, size) {\n    context.commit('SET_SIZE', size);\n  },\n  SET_SEARCH: function SET_SEARCH(context, search) {\n    context.commit('SET_SEARCH', search);\n  },\n  NEXT_PAGE: function NEXT_PAGE(context) {\n    if (state.isNextPage) {\n      context.commit('INCREMENT_PAGE');\n      context.dispatch('LOAD_DATA_LIST');\n    }\n  },\n  PREV_PAGE: function PREV_PAGE(context) {\n    if (state.page) {\n      context.commit('DECREMENT_PAGE');\n      context.dispatch('LOAD_DATA_LIST');\n    }\n  },\n  LOAD_ITEM: function () {\n    var _LOAD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(context, type) {\n      var item;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!state.itemId) {\n                _context8.next = 7;\n                break;\n              }\n\n              _context8.next = 3;\n              return context.dispatch('GET_ITEM');\n\n            case 3:\n              item = _context8.sent;\n              context.commit('SET_ITEM', proxy(item));\n              _context8.next = 8;\n              break;\n\n            case 7:\n              context.dispatch('SET_ITEM_BY_TYPE', type);\n\n            case 8:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function LOAD_ITEM(_x6, _x7) {\n      return _LOAD_ITEM.apply(this, arguments);\n    }\n\n    return LOAD_ITEM;\n  }(),\n  SET_ITEM_BY_TYPE: function SET_ITEM_BY_TYPE(context, type) {\n    var item = {};\n\n    switch (type) {\n      case 'inbound-queue':\n        item = defaultInboundQueueState();\n        break;\n\n      case 'outbound-ivr':\n        item = defaultOutboundIVRQueueState();\n        break;\n\n      case 'offline-queue':\n        item = defaultOfflineQueueState();\n        break;\n\n      case 'preview-dialer':\n        item = defaultPreviewDialerState();\n        break;\n\n      case 'predictive-dialer':\n        item = defaultPredictiveDialerState();\n        break;\n\n      case 'progressive-dialer':\n        item = defaultProgressiveDialerState();\n        break;\n    }\n\n    context.commit('SET_ITEM', item);\n  },\n  SET_ITEM_PROPERTY: function SET_ITEM_PROPERTY(context, payload) {\n    context.commit('SET_ITEM_PROPERTY', payload);\n  },\n  SET_PAYLOAD_ITEM_PROPERTY: function SET_PAYLOAD_ITEM_PROPERTY(context, payload) {\n    context.commit('SET_PAYLOAD_ITEM_PROPERTY', payload);\n  },\n  ADD_ITEM: function () {\n    var _ADD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(context) {\n      var id;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (state.itemId) {\n                _context9.next = 6;\n                break;\n              }\n\n              _context9.next = 3;\n              return context.dispatch('POST_ITEM');\n\n            case 3:\n              id = _context9.sent;\n              context.dispatch('SET_ITEM_ID', id);\n              context.dispatch('LOAD_ITEM');\n\n            case 6:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function ADD_ITEM(_x8) {\n      return _ADD_ITEM.apply(this, arguments);\n    }\n\n    return ADD_ITEM;\n  }(),\n  TOGGLE_ITEM_PROPERTY: function () {\n    var _TOGGLE_ITEM_PROPERTY = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(context, _ref2) {\n      var index, prop, changes;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              index = _ref2.index, prop = _ref2.prop;\n              _context10.next = 3;\n              return context.commit('TOGGLE_ITEM_PROPERTY', {\n                index: index,\n                prop: prop\n              });\n\n            case 3:\n              changes = {};\n              changes[prop] = state.dataList[index][prop];\n              _context10.prev = 5;\n              _context10.next = 8;\n              return context.dispatch('PATCH_ITEM', {\n                id: state.dataList[index].id,\n                changes: changes\n              });\n\n            case 8:\n              _context10.next = 13;\n              break;\n\n            case 10:\n              _context10.prev = 10;\n              _context10.t0 = _context10[\"catch\"](5);\n              context.dispatch('LOAD_DATA_LIST');\n\n            case 13:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[5, 10]]);\n    }));\n\n    function TOGGLE_ITEM_PROPERTY(_x9, _x10) {\n      return _TOGGLE_ITEM_PROPERTY.apply(this, arguments);\n    }\n\n    return TOGGLE_ITEM_PROPERTY;\n  }(),\n  UPDATE_ITEM: function () {\n    var _UPDATE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee11(context) {\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              if (!state.itemInstance._dirty) {\n                _context11.next = 4;\n                break;\n              }\n\n              _context11.next = 3;\n              return context.dispatch('UPD_ITEM');\n\n            case 3:\n              context.dispatch('LOAD_ITEM');\n\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    function UPDATE_ITEM(_x11) {\n      return _UPDATE_ITEM.apply(this, arguments);\n    }\n\n    return UPDATE_ITEM;\n  }(),\n  REMOVE_ITEM: function () {\n    var _REMOVE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee12(context, index) {\n      var id;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              id = state.dataList[index].id;\n              context.commit('REMOVE_ITEM', index);\n              _context12.prev = 2;\n              _context12.next = 5;\n              return context.dispatch('DELETE_ITEM', id);\n\n            case 5:\n              _context12.next = 9;\n              break;\n\n            case 7:\n              _context12.prev = 7;\n              _context12.t0 = _context12[\"catch\"](2);\n\n            case 9:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[2, 7]]);\n    }));\n\n    function REMOVE_ITEM(_x12, _x13) {\n      return _REMOVE_ITEM.apply(this, arguments);\n    }\n\n    return REMOVE_ITEM;\n  }(),\n  ADD_VARIABLE_PAIR: function ADD_VARIABLE_PAIR(context) {\n    var pair = {\n      key: '',\n      value: ''\n    };\n    context.commit('ADD_VARIABLE_PAIR', pair);\n    context.commit('SET_ITEM_PROPERTY', {\n      prop: '_dirty',\n      value: true\n    });\n  },\n  SET_VARIABLE_PROP: function SET_VARIABLE_PROP(context, _ref3) {\n    var index = _ref3.index,\n        prop = _ref3.prop,\n        value = _ref3.value;\n    context.commit('SET_VARIABLE_PROP', {\n      index: index,\n      prop: prop,\n      value: value\n    });\n    context.commit('SET_ITEM_PROPERTY', {\n      prop: '_dirty',\n      value: true\n    });\n  },\n  DELETE_VARIABLE_PAIR: function DELETE_VARIABLE_PAIR(context, index) {\n    context.commit('DELETE_VARIABLE_PAIR', index);\n    context.commit('SET_ITEM_PROPERTY', {\n      prop: '_dirty',\n      value: true\n    });\n  },\n  RESET_ITEM_STATE: function () {\n    var _RESET_ITEM_STATE = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee13(context) {\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              context.commit('RESET_ITEM_STATE');\n              context.dispatch('ccenter/queues/buckets/RESET_ITEM_STATE', {}, {\n                root: true\n              });\n              context.dispatch('ccenter/queues/resGroups/RESET_ITEM_STATE', {}, {\n                root: true\n              });\n              context.dispatch('ccenter/queues/members/RESET_ITEM_STATE', {}, {\n                root: true\n              });\n\n            case 4:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    function RESET_ITEM_STATE(_x14) {\n      return _RESET_ITEM_STATE.apply(this, arguments);\n    }\n\n    return RESET_ITEM_STATE;\n  }()\n};\nvar mutations = {\n  SET_ITEM_ID: function SET_ITEM_ID(state, id) {\n    state.itemId = id;\n  },\n  SET_DATA_LIST: function SET_DATA_LIST(state, list) {\n    state.dataList = list;\n  },\n  SET_SIZE: function SET_SIZE(context, size) {\n    state.size = size;\n  },\n  SET_SEARCH: function SET_SEARCH(context, search) {\n    state.search = search;\n  },\n  INCREMENT_PAGE: function INCREMENT_PAGE(state) {\n    state.page++;\n  },\n  DECREMENT_PAGE: function DECREMENT_PAGE(state) {\n    state.page--;\n  },\n  SET_ITEM_PROPERTY: function SET_ITEM_PROPERTY(state, _ref4) {\n    var prop = _ref4.prop,\n        value = _ref4.value;\n    state.itemInstance[prop] = value;\n  },\n  SET_PAYLOAD_ITEM_PROPERTY: function SET_PAYLOAD_ITEM_PROPERTY(state, _ref5) {\n    var prop = _ref5.prop,\n        value = _ref5.value;\n    state.itemInstance.payload[prop] = value;\n  },\n  TOGGLE_ITEM_PROPERTY: function TOGGLE_ITEM_PROPERTY(state, _ref6) {\n    var index = _ref6.index,\n        prop = _ref6.prop;\n    state.dataList[index][prop] = !state.dataList[index][prop];\n  },\n  SET_ITEM: function SET_ITEM(state, item) {\n    state.itemInstance = item;\n  },\n  REMOVE_ITEM: function REMOVE_ITEM(state, index) {\n    state.dataList.splice(index, 1);\n  },\n  ADD_VARIABLE_PAIR: function ADD_VARIABLE_PAIR(state, pair) {\n    state.itemInstance.variables.push(pair);\n  },\n  SET_VARIABLE_PROP: function SET_VARIABLE_PROP(state, _ref7) {\n    var index = _ref7.index,\n        prop = _ref7.prop,\n        value = _ref7.value;\n    state.itemInstance.variables[index][prop] = value;\n  },\n  DELETE_VARIABLE_PAIR: function DELETE_VARIABLE_PAIR(state, index) {\n    state.itemInstance.variables.splice(index, 1);\n  },\n  RESET_ITEM_STATE: function RESET_ITEM_STATE(state) {\n    Object.assign(state, defaultState());\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations,\n  modules: {\n    buckets: buckets,\n    resGroups: resGroups,\n    members: members,\n    permissions: permissions\n  }\n};",{"version":3,"sources":["/home/dev/work/client-auth/src/store/modules/contact-center/queues/queues.js"],"names":["proxy","buckets","resGroups","members","permissions","addQueue","deleteQueue","patchQueue","getQueue","getQueuesList","updateQueue","defaultState","itemId","itemInstance","name","payload","calendar","priority","dncList","description","schema","team","strategy","defaultInboundQueueState","type","variables","key","value","defaultOutboundIVRQueueState","timeout","secBetweenRetries","originateTimeout","maxCalls","maxOfRetry","defaultOfflineQueueState","waitForResultStatus","defaultPredictiveDialerState","defaultPreviewDialerState","defaultProgressiveDialerState","state","dataList","size","search","page","isNextPage","getters","actions","GET_LIST","GET_ITEM","POST_ITEM","PATCH_ITEM","context","id","changes","UPD_ITEM","DELETE_ITEM","SET_ITEM_ID","commit","LOAD_DATA_LIST","dispatch","response","SET_SIZE","SET_SEARCH","NEXT_PAGE","PREV_PAGE","LOAD_ITEM","item","SET_ITEM_BY_TYPE","SET_ITEM_PROPERTY","SET_PAYLOAD_ITEM_PROPERTY","ADD_ITEM","TOGGLE_ITEM_PROPERTY","index","prop","UPDATE_ITEM","_dirty","REMOVE_ITEM","ADD_VARIABLE_PAIR","pair","SET_VARIABLE_PROP","DELETE_VARIABLE_PAIR","RESET_ITEM_STATE","root","mutations","SET_DATA_LIST","list","INCREMENT_PAGE","DECREMENT_PAGE","SET_ITEM","splice","push","Object","assign","namespaced","modules"],"mappings":"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","sourcesContent":["import proxy from '../../../../utils/editProxy';\nimport buckets from './queue-buckets';\nimport resGroups from './queue-res-groups';\nimport members from './queue-members';\nimport permissions from './permissions';\nimport {\n    addQueue, deleteQueue, patchQueue,\n    getQueue, getQueuesList, updateQueue\n} from \"../../../../api/contact-center/queues/queues\";\n\nconst defaultState = () => {\n    return {\n        itemId: 0,\n        itemInstance: {\n            name: '',\n            payload: {},\n            calendar: {},\n            priority: 0,\n            dncList: {},\n            description: '',\n            schema: {},\n            team: {},\n            strategy: {},\n        },\n    };\n};\n\nconst defaultInboundQueueState = () => {\n    return {\n        name: 'INBOUND QUEUE',\n        type: 1,\n        payload: {},\n        calendar: {},\n        priority: '0',\n        dncList: {}, // blacklist\n        schema: {},\n        team: {},\n        variables: [{key: 'var key', value: 'value'}],\n        description: 'DESCRIPTION',\n    }\n};\n\nconst defaultOutboundIVRQueueState = () => {\n    return {\n        name: 'OUTBOUND IVR QUEUE',\n        type: 2,\n        calendar: {},\n        priority: '0',\n        dncList: {}, // blacklist\n        schema: {},\n        variables: [{key: 'var key', value: 'value'}],\n        strategy: {},\n        description: 'DESCRIPTION',\n        timeout: 10,\n        payload: {\n            secBetweenRetries: 30 * 3600, //30h\n            originateTimeout: 15,\n            maxCalls: 10,\n            maxOfRetry: 10,\n        },\n    }\n};\n\nconst defaultOfflineQueueState = () => {\n    return {\n        name: 'OFFLINE QUEUE',\n        type: 0,\n        calendar: {},\n        priority: '0',\n        dncList: {}, // blacklist\n        schema: {},\n        team: {},\n        variables: [{key: 'var key', value: 'value'}],\n        strategy: {},\n        description: 'DESCRIPTION',\n        timeout: 10,\n        payload: {\n            secBetweenRetries: 30 * 3600, //30h\n            originateTimeout: 15,\n            waitForResultStatus: true,\n            maxOfRetry: 10,\n        },\n    }\n};\n\nconst defaultPredictiveDialerState = () => {\n    return {\n        name: 'PREDICTIVE DIALER',\n        type: 5,\n        calendar: {},\n        priority: '0',\n        dncList: {}, // blacklist\n        schema: {},\n        team: {},\n        variables: [{key: 'var key', value: 'value'}],\n        strategy: {},\n        description: 'DESCRIPTION',\n\n        timeout: 10,\n        payload: {\n            secBetweenRetries: 30 * 3600, //30h\n            originateTimeout: 15,\n            waitForResultStatus: true,\n            maxOfRetry: 10,\n        },\n    }\n};\n\nconst defaultPreviewDialerState = () => {\n    return {\n        name: 'PREVIEW DIALER',\n        type: 3,\n        calendar: {},\n        priority: '0',\n        dncList: {}, // blacklist\n        schema: {},\n        team: {},\n        variables: [{key: 'var key', value: 'value'}],\n        strategy: {},\n        description: 'DESCRIPTION',\n\n        timeout: 10,\n        payload: {\n            secBetweenRetries: 30 * 3600, //30h\n            originateTimeout: 15,\n            waitForResultStatus: true,\n            maxOfRetry: 10,\n        },\n    }\n};\n\nconst defaultProgressiveDialerState = () => {\n    return {\n        name: 'PROGRESSIVE DIALER',\n        type: 4,\n        calendar: {},\n        priority: '0',\n        dncList: {}, // blacklist\n        schema: {},\n        team: {},\n        variables: [{key: 'var key', value: 'value'}],\n        strategy: {},\n        description: 'DESCRIPTION',\n\n        timeout: 10,\n        payload: {\n            secBetweenRetries: 30 * 3600, //30h\n            originateTimeout: 15,\n            waitForResultStatus: true,\n            maxOfRetry: 10,\n        },\n    }\n};\n\nconst state = {\n    dataList: [],\n    size: '10',\n    search: '',\n    page: 0,\n    isNextPage: true,\n    ...defaultState()\n};\n\nconst getters = {};\n\nconst actions = {\n    GET_LIST: async () => {\n        return await getQueuesList(state.page, state.size, state.search);\n    },\n\n    GET_ITEM: async () => {\n        return await getQueue(state.itemId);\n    },\n\n    POST_ITEM: async () => {\n        return await addQueue(state.itemInstance);\n    },\n\n    PATCH_ITEM: async (context, {id, changes}) => {\n        return await patchQueue(id, changes);\n    },\n\n    UPD_ITEM: async () => {\n        await updateQueue(state.itemId, state.itemInstance);\n    },\n\n    DELETE_ITEM: async (context, id) => {\n        await deleteQueue(id);\n    },\n\n    SET_ITEM_ID: (context, id) => {\n        if (id !== 'new') context.commit('SET_ITEM_ID', id);\n    },\n\n    LOAD_DATA_LIST: async (context) => {\n        const response = await context.dispatch('GET_LIST');\n        context.dispatch('RESET_ITEM_STATE');\n        context.commit('SET_DATA_LIST', response);\n    },\n\n    SET_SIZE: (context, size) => {\n        context.commit('SET_SIZE', size);\n    },\n\n    SET_SEARCH: (context, search) => {\n        context.commit('SET_SEARCH', search);\n    },\n\n    NEXT_PAGE: (context) => {\n        if (state.isNextPage) {\n            context.commit('INCREMENT_PAGE');\n            context.dispatch('LOAD_DATA_LIST');\n        }\n    },\n\n    PREV_PAGE: (context) => {\n        if (state.page) {\n            context.commit('DECREMENT_PAGE');\n            context.dispatch('LOAD_DATA_LIST');\n        }\n    },\n\n    LOAD_ITEM: async (context, type) => {\n        if (state.itemId) {\n            const item = await context.dispatch('GET_ITEM');\n            context.commit('SET_ITEM', proxy(item));\n        } else {\n            context.dispatch('SET_ITEM_BY_TYPE', type);\n        }\n    },\n\n    SET_ITEM_BY_TYPE: (context, type) => {\n        let item = {};\n        switch (type) {\n            case 'inbound-queue':\n                item = defaultInboundQueueState();\n                break;\n            case 'outbound-ivr':\n                item = defaultOutboundIVRQueueState();\n                break;\n            case 'offline-queue':\n                item = defaultOfflineQueueState();\n                break;\n            case 'preview-dialer':\n                item = defaultPreviewDialerState();\n                break;\n            case 'predictive-dialer':\n                item = defaultPredictiveDialerState();\n                break;\n            case 'progressive-dialer':\n                item = defaultProgressiveDialerState();\n                break;\n        }\n        context.commit('SET_ITEM', item);\n    },\n\n    SET_ITEM_PROPERTY: (context, payload) => {\n        context.commit('SET_ITEM_PROPERTY', payload);\n    },\n\n    SET_PAYLOAD_ITEM_PROPERTY: (context, payload) => {\n        context.commit('SET_PAYLOAD_ITEM_PROPERTY', payload);\n    },\n\n    ADD_ITEM: async (context) => {\n        if (!state.itemId) {\n            const id = await context.dispatch('POST_ITEM');\n            context.dispatch('SET_ITEM_ID', id);\n            context.dispatch('LOAD_ITEM');\n        }\n    },\n\n    TOGGLE_ITEM_PROPERTY: async (context, {index, prop}) => {\n        await context.commit('TOGGLE_ITEM_PROPERTY', {index, prop});\n        let changes = {};\n        changes[prop] = state.dataList[index][prop];\n        try {\n            await context.dispatch('PATCH_ITEM', {id: state.dataList[index].id, changes});\n        } catch {\n            context.dispatch('LOAD_DATA_LIST');\n        }\n    },\n\n    UPDATE_ITEM: async (context) => {\n        if (state.itemInstance._dirty) {\n            await context.dispatch('UPD_ITEM');\n            context.dispatch('LOAD_ITEM');\n        }\n    },\n\n    REMOVE_ITEM: async (context, index) => {\n        const id = state.dataList[index].id;\n        context.commit('REMOVE_ITEM', index);\n        try {\n            await context.dispatch('DELETE_ITEM', id);\n        } catch {\n        }\n    },\n\n    ADD_VARIABLE_PAIR: (context) => {\n        const pair = {key: '', value: ''};\n        context.commit('ADD_VARIABLE_PAIR', pair);\n        context.commit('SET_ITEM_PROPERTY', {prop: '_dirty', value: true});\n    },\n\n    SET_VARIABLE_PROP: (context, {index, prop, value}) => {\n        context.commit('SET_VARIABLE_PROP', {index, prop, value});\n        context.commit('SET_ITEM_PROPERTY', {prop: '_dirty', value: true});\n    },\n\n    DELETE_VARIABLE_PAIR: (context, index) => {\n        context.commit('DELETE_VARIABLE_PAIR', index);\n        context.commit('SET_ITEM_PROPERTY', {prop: '_dirty', value: true});\n    },\n\n    RESET_ITEM_STATE: async (context) => {\n        context.commit('RESET_ITEM_STATE');\n        context.dispatch('ccenter/queues/buckets/RESET_ITEM_STATE', {}, {root: true});\n        context.dispatch('ccenter/queues/resGroups/RESET_ITEM_STATE', {}, {root: true});\n        context.dispatch('ccenter/queues/members/RESET_ITEM_STATE', {}, {root: true});\n    },\n};\n\nconst mutations = {\n    SET_ITEM_ID: (state, id) => {\n        state.itemId = id;\n    },\n\n    SET_DATA_LIST: (state, list) => {\n        state.dataList = list;\n    },\n\n    SET_SIZE: (context, size) => {\n        state.size = size;\n    },\n\n    SET_SEARCH: (context, search) => {\n        state.search = search;\n    },\n\n    INCREMENT_PAGE: (state) => {\n        state.page++;\n    },\n\n    DECREMENT_PAGE: (state) => {\n        state.page--;\n    },\n\n    SET_ITEM_PROPERTY: (state, {prop, value}) => {\n        state.itemInstance[prop] = value;\n    },\n\n    SET_PAYLOAD_ITEM_PROPERTY: (state, {prop, value}) => {\n        state.itemInstance.payload[prop] = value;\n    },\n\n    TOGGLE_ITEM_PROPERTY: (state, {index, prop}) => {\n        state.dataList[index][prop] = !state.dataList[index][prop];\n    },\n\n    SET_ITEM: (state, item) => {\n        state.itemInstance = item;\n    },\n\n    REMOVE_ITEM: (state, index) => {\n        state.dataList.splice(index, 1);\n    },\n\n    ADD_VARIABLE_PAIR: (state, pair) => {\n        state.itemInstance.variables.push(pair);\n    },\n\n    SET_VARIABLE_PROP: (state, {index, prop, value}) => {\n        state.itemInstance.variables[index][prop] = value;\n    },\n\n    DELETE_VARIABLE_PAIR: (state, index) => {\n        state.itemInstance.variables.splice(index, 1);\n    },\n\n    RESET_ITEM_STATE: (state) => {\n        Object.assign(state, defaultState());\n    },\n};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations,\n    modules: {buckets, resGroups, members, permissions}\n};\n"]}]}