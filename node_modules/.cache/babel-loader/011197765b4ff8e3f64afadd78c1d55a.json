{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/store/modules/contact-center/resources/resources.js","dependencies":[{"path":"/home/dev/work/client-auth/src/store/modules/contact-center/resources/resources.js","mtime":1580822440658},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport proxy from \"../../../../utils/editProxy\";\nimport numbers from \"./resource-display\";\nimport permissions from \"./permissions\";\nimport { getResourceList, getResource, addResource, updateResource, deleteResource, patchResource } from \"../../../../api/contact-center/resources/resources\";\n\nvar defaultState = function defaultState() {\n  return {\n    itemId: 0,\n    itemInstance: {\n      name: 'test',\n      gateway: {},\n      cps: 10,\n      limit: 10,\n      description: 'test',\n      maxErrors: 2,\n      errorIds: [{\n        name: '2xx'\n      }]\n    }\n  };\n};\n\nvar state = _objectSpread({\n  dataList: [],\n  size: '10',\n  search: '',\n  page: 0,\n  isNextPage: true\n}, defaultState());\n\nvar getters = {};\nvar actions = {\n  GET_LIST: function () {\n    var _GET_LIST = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getResourceList(state.page, state.size, state.search);\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function GET_LIST() {\n      return _GET_LIST.apply(this, arguments);\n    }\n\n    return GET_LIST;\n  }(),\n  GET_ITEM: function () {\n    var _GET_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getResource(state.itemId);\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function GET_ITEM() {\n      return _GET_ITEM.apply(this, arguments);\n    }\n\n    return GET_ITEM;\n  }(),\n  POST_ITEM: function () {\n    var _POST_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return addResource(state.itemInstance);\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function POST_ITEM() {\n      return _POST_ITEM.apply(this, arguments);\n    }\n\n    return POST_ITEM;\n  }(),\n  PATCH_ITEM: function () {\n    var _PATCH_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(context, _ref) {\n      var id, changes;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = _ref.id, changes = _ref.changes;\n              _context4.next = 3;\n              return patchResource(id, changes);\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function PATCH_ITEM(_x, _x2) {\n      return _PATCH_ITEM.apply(this, arguments);\n    }\n\n    return PATCH_ITEM;\n  }(),\n  UPD_ITEM: function () {\n    var _UPD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5() {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return updateResource(state.itemId, state.itemInstance);\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function UPD_ITEM() {\n      return _UPD_ITEM.apply(this, arguments);\n    }\n\n    return UPD_ITEM;\n  }(),\n  DELETE_ITEM: function () {\n    var _DELETE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(context, id) {\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return deleteResource(id);\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function DELETE_ITEM(_x3, _x4) {\n      return _DELETE_ITEM.apply(this, arguments);\n    }\n\n    return DELETE_ITEM;\n  }(),\n  SET_ITEM_ID: function SET_ITEM_ID(context, id) {\n    if (id !== 'new') context.commit('SET_ITEM_ID', id);\n  },\n  LOAD_DATA_LIST: function () {\n    var _LOAD_DATA_LIST = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(context) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return context.dispatch('GET_LIST');\n\n            case 2:\n              response = _context7.sent;\n              context.dispatch('RESET_ITEM_STATE');\n              context.commit('SET_DATA_LIST', response);\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function LOAD_DATA_LIST(_x5) {\n      return _LOAD_DATA_LIST.apply(this, arguments);\n    }\n\n    return LOAD_DATA_LIST;\n  }(),\n  SET_SIZE: function SET_SIZE(context, size) {\n    context.commit('SET_SIZE', size);\n  },\n  SET_SEARCH: function SET_SEARCH(context, search) {\n    context.commit('SET_SEARCH', search);\n  },\n  NEXT_PAGE: function NEXT_PAGE(context) {\n    if (state.isNextPage) {\n      context.commit('INCREMENT_PAGE');\n      context.dispatch('LOAD_DATA_LIST');\n    }\n  },\n  PREV_PAGE: function PREV_PAGE(context) {\n    if (state.page) {\n      context.commit('DECREMENT_PAGE');\n      context.dispatch('LOAD_DATA_LIST');\n    }\n  },\n  LOAD_ITEM: function () {\n    var _LOAD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(context) {\n      var item;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!state.itemId) {\n                _context8.next = 5;\n                break;\n              }\n\n              _context8.next = 3;\n              return context.dispatch('GET_ITEM');\n\n            case 3:\n              item = _context8.sent;\n              context.commit('SET_ITEM', proxy(item));\n\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function LOAD_ITEM(_x6) {\n      return _LOAD_ITEM.apply(this, arguments);\n    }\n\n    return LOAD_ITEM;\n  }(),\n  SET_ITEM_PROPERTY: function SET_ITEM_PROPERTY(context, payload) {\n    context.commit('SET_ITEM_PROPERTY', payload);\n  },\n  ADD_ITEM: function () {\n    var _ADD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(context) {\n      var id;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (state.itemId) {\n                _context9.next = 6;\n                break;\n              }\n\n              _context9.next = 3;\n              return context.dispatch('POST_ITEM');\n\n            case 3:\n              id = _context9.sent;\n              context.dispatch('SET_ITEM_ID', id);\n              context.dispatch('LOAD_ITEM');\n\n            case 6:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function ADD_ITEM(_x7) {\n      return _ADD_ITEM.apply(this, arguments);\n    }\n\n    return ADD_ITEM;\n  }(),\n  TOGGLE_ITEM_PROPERTY: function () {\n    var _TOGGLE_ITEM_PROPERTY = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(context, _ref2) {\n      var index, prop, changes;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              index = _ref2.index, prop = _ref2.prop;\n              _context10.next = 3;\n              return context.commit('TOGGLE_ITEM_PROPERTY', {\n                index: index,\n                prop: prop\n              });\n\n            case 3:\n              changes = {};\n              changes[prop] = state.dataList[index][prop];\n              _context10.prev = 5;\n              _context10.next = 8;\n              return context.dispatch('PATCH_ITEM', {\n                id: state.dataList[index].id,\n                changes: changes\n              });\n\n            case 8:\n              _context10.next = 13;\n              break;\n\n            case 10:\n              _context10.prev = 10;\n              _context10.t0 = _context10[\"catch\"](5);\n              context.dispatch('LOAD_DATA_LIST');\n\n            case 13:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[5, 10]]);\n    }));\n\n    function TOGGLE_ITEM_PROPERTY(_x8, _x9) {\n      return _TOGGLE_ITEM_PROPERTY.apply(this, arguments);\n    }\n\n    return TOGGLE_ITEM_PROPERTY;\n  }(),\n  UPDATE_ITEM: function () {\n    var _UPDATE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee11(context) {\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              if (!state.itemInstance._dirty) {\n                _context11.next = 4;\n                break;\n              }\n\n              _context11.next = 3;\n              return context.dispatch('UPD_ITEM');\n\n            case 3:\n              context.dispatch('LOAD_ITEM');\n\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    function UPDATE_ITEM(_x10) {\n      return _UPDATE_ITEM.apply(this, arguments);\n    }\n\n    return UPDATE_ITEM;\n  }(),\n  REMOVE_ITEM: function () {\n    var _REMOVE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee12(context, index) {\n      var id;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              id = state.dataList[index].id;\n              context.commit('REMOVE_ITEM', index);\n              _context12.prev = 2;\n              _context12.next = 5;\n              return context.dispatch('DELETE_ITEM', id);\n\n            case 5:\n              _context12.next = 9;\n              break;\n\n            case 7:\n              _context12.prev = 7;\n              _context12.t0 = _context12[\"catch\"](2);\n\n            case 9:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[2, 7]]);\n    }));\n\n    function REMOVE_ITEM(_x11, _x12) {\n      return _REMOVE_ITEM.apply(this, arguments);\n    }\n\n    return REMOVE_ITEM;\n  }(),\n  RESET_ITEM_STATE: function () {\n    var _RESET_ITEM_STATE = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee13(context) {\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              context.commit('RESET_ITEM_STATE');\n              context.dispatch('ccenter/res/numbers/RESET_ITEM_STATE', {}, {\n                root: true\n              });\n\n            case 2:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    function RESET_ITEM_STATE(_x13) {\n      return _RESET_ITEM_STATE.apply(this, arguments);\n    }\n\n    return RESET_ITEM_STATE;\n  }()\n};\nvar mutations = {\n  SET_ITEM_ID: function SET_ITEM_ID(state, id) {\n    state.itemId = id;\n  },\n  SET_DATA_LIST: function SET_DATA_LIST(state, list) {\n    state.dataList = list;\n  },\n  SET_SIZE: function SET_SIZE(context, size) {\n    state.size = size;\n  },\n  SET_SEARCH: function SET_SEARCH(context, search) {\n    state.search = search;\n  },\n  INCREMENT_PAGE: function INCREMENT_PAGE(state) {\n    state.page++;\n  },\n  DECREMENT_PAGE: function DECREMENT_PAGE(state) {\n    state.page--;\n  },\n  SET_ITEM_PROPERTY: function SET_ITEM_PROPERTY(state, _ref3) {\n    var prop = _ref3.prop,\n        value = _ref3.value;\n    state.itemInstance[prop] = value;\n  },\n  TOGGLE_ITEM_PROPERTY: function TOGGLE_ITEM_PROPERTY(state, _ref4) {\n    var index = _ref4.index,\n        prop = _ref4.prop;\n    state.dataList[index][prop] = !state.dataList[index][prop];\n  },\n  SET_ITEM: function SET_ITEM(state, item) {\n    state.itemInstance = item;\n  },\n  REMOVE_ITEM: function REMOVE_ITEM(state, index) {\n    state.dataList.splice(index, 1);\n  },\n  RESET_ITEM_STATE: function RESET_ITEM_STATE(state) {\n    Object.assign(state, defaultState());\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations,\n  modules: {\n    numbers: numbers,\n    permissions: permissions\n  }\n};",{"version":3,"sources":["/home/dev/work/client-auth/src/store/modules/contact-center/resources/resources.js"],"names":["proxy","numbers","permissions","getResourceList","getResource","addResource","updateResource","deleteResource","patchResource","defaultState","itemId","itemInstance","name","gateway","cps","limit","description","maxErrors","errorIds","state","dataList","size","search","page","isNextPage","getters","actions","GET_LIST","GET_ITEM","POST_ITEM","PATCH_ITEM","context","id","changes","UPD_ITEM","DELETE_ITEM","SET_ITEM_ID","commit","LOAD_DATA_LIST","dispatch","response","SET_SIZE","SET_SEARCH","NEXT_PAGE","PREV_PAGE","LOAD_ITEM","item","SET_ITEM_PROPERTY","payload","ADD_ITEM","TOGGLE_ITEM_PROPERTY","index","prop","UPDATE_ITEM","_dirty","REMOVE_ITEM","RESET_ITEM_STATE","root","mutations","SET_DATA_LIST","list","INCREMENT_PAGE","DECREMENT_PAGE","value","SET_ITEM","splice","Object","assign","namespaced","modules"],"mappings":"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","sourcesContent":["import proxy from '../../../../utils/editProxy';\nimport numbers from './resource-display';\nimport permissions from './permissions';\nimport {\n    getResourceList, getResource,\n    addResource, updateResource, deleteResource, patchResource\n} from \"../../../../api/contact-center/resources/resources\";\n\nconst defaultState = () => {\n    return {\n        itemId: 0,\n        itemInstance: {\n            name: 'test',\n            gateway: {},\n            cps: 10,\n            limit: 10,\n            description: 'test',\n            maxErrors: 2,\n            errorIds: [{name: '2xx'}],\n        },\n    };\n};\n\nconst state = {\n    dataList: [],\n    size: '10',\n    search: '',\n    page: 0,\n    isNextPage: true,\n    ...defaultState()\n};\n\nconst getters = {};\n\nconst actions = {\n    GET_LIST: async () => {\n        return await getResourceList(state.page, state.size, state.search);\n    },\n\n    GET_ITEM: async () => {\n        return await getResource(state.itemId);\n    },\n\n    POST_ITEM: async () => {\n        return await addResource(state.itemInstance);\n    },\n\n    PATCH_ITEM: async (context, {id, changes}) => {\n        return await patchResource(id, changes);\n    },\n\n    UPD_ITEM: async () => {\n        await updateResource(state.itemId, state.itemInstance);\n    },\n\n    DELETE_ITEM: async (context, id) => {\n        await deleteResource(id);\n    },\n\n    SET_ITEM_ID: (context, id) => {\n        if (id !== 'new') context.commit('SET_ITEM_ID', id);\n    },\n\n    LOAD_DATA_LIST: async (context) => {\n        const response = await context.dispatch('GET_LIST');\n        context.dispatch('RESET_ITEM_STATE');\n        context.commit('SET_DATA_LIST', response);\n    },\n\n    SET_SIZE: (context, size) => {\n        context.commit('SET_SIZE', size);\n    },\n\n    SET_SEARCH: (context, search) => {\n        context.commit('SET_SEARCH', search);\n    },\n\n    NEXT_PAGE: (context) => {\n        if(state.isNextPage) {\n            context.commit('INCREMENT_PAGE');\n            context.dispatch('LOAD_DATA_LIST');\n        }\n    },\n\n    PREV_PAGE: (context) => {\n        if(state.page) {\n            context.commit('DECREMENT_PAGE');\n            context.dispatch('LOAD_DATA_LIST');\n        }\n    },\n\n    LOAD_ITEM: async (context) => {\n        if (state.itemId) {\n            const item = await context.dispatch('GET_ITEM');\n            context.commit('SET_ITEM', proxy(item));\n        }\n    },\n\n    SET_ITEM_PROPERTY: (context, payload) => {\n        context.commit('SET_ITEM_PROPERTY', payload);\n    },\n\n    ADD_ITEM: async (context) => {\n        if (!state.itemId) {\n            const id = await context.dispatch('POST_ITEM');\n            context.dispatch('SET_ITEM_ID', id);\n            context.dispatch('LOAD_ITEM');\n        }\n    },\n\n    TOGGLE_ITEM_PROPERTY: async (context, {index, prop}) => {\n        await context.commit('TOGGLE_ITEM_PROPERTY', {index, prop});\n        let changes = {};\n        changes[prop] = state.dataList[index][prop];\n        try {\n            await context.dispatch('PATCH_ITEM', {id: state.dataList[index].id, changes});\n        } catch  {\n            context.dispatch('LOAD_DATA_LIST');\n        }\n    },\n\n    UPDATE_ITEM: async (context) => {\n        if (state.itemInstance._dirty) {\n            await context.dispatch('UPD_ITEM');\n            context.dispatch('LOAD_ITEM');\n        }\n    },\n\n    REMOVE_ITEM: async (context, index) => {\n        const id = state.dataList[index].id;\n        context.commit('REMOVE_ITEM', index);\n        try {\n            await context.dispatch('DELETE_ITEM', id);\n        } catch {\n        }\n    },\n\n    RESET_ITEM_STATE: async (context) => {\n        context.commit('RESET_ITEM_STATE');\n        context.dispatch('ccenter/res/numbers/RESET_ITEM_STATE', {}, {root: true});\n    },\n};\n\nconst mutations = {\n    SET_ITEM_ID: (state, id) => {\n        state.itemId = id;\n    },\n\n    SET_DATA_LIST: (state, list) => {\n        state.dataList = list;\n    },\n\n    SET_SIZE: (context, size) => {\n        state.size = size;\n    },\n\n    SET_SEARCH: (context, search) => {\n        state.search = search;\n    },\n\n    INCREMENT_PAGE: (state) => {\n        state.page++;\n    },\n\n    DECREMENT_PAGE: (state) => {\n        state.page--;\n    },\n\n    SET_ITEM_PROPERTY: (state, {prop, value}) => {\n        state.itemInstance[prop] = value;\n    },\n\n    TOGGLE_ITEM_PROPERTY: (state, {index, prop}) => {\n        state.dataList[index][prop] = !state.dataList[index][prop];\n    },\n\n    SET_ITEM: (state, item) => {\n        state.itemInstance = item;\n    },\n\n    REMOVE_ITEM: (state, index) => {\n        state.dataList.splice(index, 1);\n    },\n\n    RESET_ITEM_STATE: (state) => {\n        Object.assign(state, defaultState());\n    },\n};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations,\n    modules: {numbers, permissions}\n};\n"]}]}