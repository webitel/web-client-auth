{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/integrations/tokens/the-tokens.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/integrations/tokens/the-tokens.vue","mtime":1578657456666},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport tableComponentMixin from '@/mixins/tableComponentMixin';\nimport { _checkboxTableField, _actionsTableField_1 } from \"@/utils/tableFieldPresets\";\nexport default {\n  name: \"the-tokens\",\n  mixins: [tableComponentMixin],\n  data: function data() {\n    return {\n      fields: [_checkboxTableField, {\n        name: 'name',\n        title: this.$t('objects.name')\n      }, {\n        name: 'role',\n        title: this.$tc('objects.permissions.permissionsRole', 1)\n      }, {\n        name: 'expires',\n        title: this.$t('objects.integrations.tokens.expires')\n      }, _actionsTableField_1]\n    };\n  },\n  methods: {\n    create: function create() {\n      this.$router.push('/integrations/tokens/new');\n    },\n    deleteItem: function () {\n      var _deleteItem = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(item) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function deleteItem(_x) {\n        return _deleteItem.apply(this, arguments);\n      }\n\n      return deleteItem;\n    }(),\n    loadDataList: function () {\n      var _loadDataList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var i;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // this.dataList = await getCommunicationsList();\n                for (i = 0; i < 10; i++) {\n                  this.dataList.push({\n                    name: 'Token name ' + i,\n                    role: {\n                      name: 'Role name'\n                    },\n                    expires: Date.now().toLocaleString(),\n                    isSelected: false\n                  });\n                }\n\n                this.filterData();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadDataList() {\n        return _loadDataList.apply(this, arguments);\n      }\n\n      return loadDataList;\n    }()\n  }\n};",{"version":3,"sources":["the-tokens.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA,OAAA,mBAAA,MAAA,8BAAA;AACA,SAAA,mBAAA,EAAA,oBAAA,QAAA,2BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,MAAA,EAAA,CAAA,mBAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,CACA,mBADA,EAEA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,cAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,KAAA,GAAA,CAAA,qCAAA,EAAA,CAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,qCAAA;AAAA,OAJA,EAKA,oBALA;AADA,KAAA;AASA,GAbA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,0BAAA;AACA,KAHA;AAKA,IAAA,UALA;AAAA;AAAA;AAAA,+CAKA,IALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AASA,IAAA,YATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA,qBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,EAAA;AACA,uBAAA,QAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA,gBAAA,CADA;AAEA,oBAAA,IAAA,EAAA;AAAA,sBAAA,IAAA,EAAA;AAAA,qBAFA;AAGA,oBAAA,OAAA,EAAA,IAAA,CAAA,GAAA,GAAA,cAAA,EAHA;AAIA,oBAAA,UAAA,EAAA;AAJA,mBAAA;AAMA;;AACA,qBAAA,UAAA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAfA,CAAA","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryAction=\"create\"\n        >\n            {{$t('objects.integrations.integrations')}} |\n            {{$tc('objects.integrations.tokens.tokens', 2)}}\n        </object-header>\n\n        <section class=\"object-content\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">{{$t('objects.integrations.tokens.allTokens')}}</h3>\n                <div class=\"content-header__actions-wrap\">\n                    <search\n                            @filterData=\"filterData\"\n                    ></search>\n                    <i\n                            class=\"icon-icon_delete icon-action\"\n                            :class=\"{'hidden': anySelected}\"\n                            @click=\"deleteSelected\"\n                    ></i>\n                </div>\n            </header>\n\n            <vuetable\n                    :api-mode=\"false\"\n                    :fields=\"fields\"\n                    :data=\"filteredDataList\"\n            >\n                <template slot=\"name\" slot-scope=\"props\">\n                    <div class=\"tt-capitalize\">\n                        <span class=\"nameLink\" @click=\"edit(props.rowIndex)\">\n                        {{filteredDataList[props.rowIndex].name}}\n                        </span>\n                    </div>\n                </template>\n\n                <template slot=\"role\" slot-scope=\"props\">\n                    <div>\n                        {{filteredDataList[props.rowIndex].role.name}}\n                    </div>\n                </template>\n\n                <template slot=\"expires\" slot-scope=\"props\">\n                    <div>\n                        {{filteredDataList[props.rowIndex].expires}}\n                    </div>\n                </template>\n\n                <template slot=\"actions\" slot-scope=\"props\">\n                    <i class=\"vuetable-action icon-icon_delete\"\n                       @click=\"remove(props.rowIndex)\"\n                    ></i>\n                </template>\n            </vuetable>\n            <pagination></pagination>\n        </section>\n    </div>\n</template>\n\n<script>\n    import tableComponentMixin from '@/mixins/tableComponentMixin';\n    import {_checkboxTableField, _actionsTableField_1} from \"@/utils/tableFieldPresets\";\n\n    export default {\n        name: \"the-tokens\",\n        mixins: [tableComponentMixin],\n        data() {\n            return {\n                fields: [\n                    _checkboxTableField,\n                    {name: 'name', title: this.$t('objects.name')},\n                    {name: 'role', title: this.$tc('objects.permissions.permissionsRole', 1)},\n                    {name: 'expires', title: this.$t('objects.integrations.tokens.expires')},\n                    _actionsTableField_1,\n                ],\n            };\n        },\n\n        methods: {\n            create() {\n                this.$router.push('/integrations/tokens/new');\n            },\n\n            async deleteItem(item) {\n                // await deleteCommunication(item.id);\n            },\n\n            async loadDataList() {\n                // this.dataList = await getCommunicationsList();\n                for(let i = 0; i < 10; i++) {\n                    this.dataList.push({\n                        name: 'Token name '+i,\n                        role: {name: 'Role name'},\n                        expires: Date.now().toLocaleString(),\n                        isSelected: false,\n                    });\n                }\n                this.filterData();\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/components/integrations/tokens"}]}