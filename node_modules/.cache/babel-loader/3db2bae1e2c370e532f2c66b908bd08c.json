{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/directory/devices/opened-device-general.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/directory/devices/opened-device-general.vue","mtime":1581330903048},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport eventBus from \"../../../utils/eventBus\";\nimport openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\nimport { getUsersList } from \"../../../api/directory/users/users\";\nimport { mapActions } from \"vuex\";\nexport default {\n  name: \"opened-device-general\",\n  mixins: [openedTabComponentMixin],\n  data: function data() {\n    return {\n      copyMessage: '',\n      copyTriggerShow: false\n    };\n  },\n  mounted: function mounted() {\n    this.loadDropdownOptionsList();\n  },\n  computed: {\n    name: {\n      get: function get() {\n        return this.$store.state.directory.devices.itemInstance.name;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'name',\n          value: value\n        });\n      }\n    },\n    account: {\n      get: function get() {\n        return this.$store.state.directory.devices.itemInstance.account;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'account',\n          value: value\n        });\n      }\n    },\n    password: {\n      get: function get() {\n        return this.$store.state.directory.devices.itemInstance.password;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'password',\n          value: value\n        });\n      }\n    },\n    user: {\n      get: function get() {\n        return this.$store.state.directory.devices.itemInstance.user;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'user',\n          value: value\n        });\n      }\n    },\n    computePasswordRepresentation: function computePasswordRepresentation() {\n      return this.password.length <= 12 ? this.password : this.password.slice(0, 12);\n    }\n  },\n  methods: _objectSpread({\n    loadDropdownOptionsList: function () {\n      var _loadDropdownOptionsList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(search) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getUsersList(10, search);\n\n              case 2:\n                response = _context.sent;\n                this.dropdownOptionsList = response.map(function (item) {\n                  return {\n                    name: item.name,\n                    id: item.id\n                  };\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadDropdownOptionsList(_x) {\n        return _loadDropdownOptionsList.apply(this, arguments);\n      }\n\n      return loadDropdownOptionsList;\n    }(),\n    generatePassword: function generatePassword() {\n      var length = 12;\n      var charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n      var result = '';\n\n      for (var i = 0; i < length; i++) {\n        result += charset.charAt(Math.floor(Math.random() * charset.length));\n      }\n\n      this.password = result;\n      this.copyTriggerShow = true;\n    },\n    copyToClipboard: function copyToClipboard() {\n      var _this = this;\n\n      if (this.password) {\n        eventBus.$emit('copyToClipboard', this.password);\n        this.copyMessage = this.$t('objects.copied');\n        setTimeout(function () {\n          return _this.copyMessage = '';\n        }, 2000);\n      }\n    }\n  }, mapActions('directory/devices', {\n    setItemProp: 'SET_ITEM_PROPERTY'\n  }))\n};",{"version":3,"sources":["opened-device-general.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <section>\n        <header class=\"content-header\">\n            <h3 class=\"content-title\">{{$t('objects.generalInfo')}}</h3>\n        </header>\n        <form class=\"object-input-grid\">\n            <form-input\n                    v-model.trim=\"name\"\n                    :v=\"v.itemInstance.name\"\n                    :label=\"$t('objects.name')\"\n                    required\n            ></form-input>\n            <form-input\n                    v-model.trim=\"account\"\n                    :v=\"v.itemInstance.account\"\n                    :label=\"$t('objects.directory.devices.authId')\"\n                    required\n            ></form-input>\n\n            <div class=\"input-extension-wrap\">\n                <form-input\n                        ref=\"input-password\"\n                        :value=\"computePasswordRepresentation\"\n                        :label=\"$t('objects.password')\"\n                        :type=\"'password'\"\n                        @input=\"password = $event\"\n                ></form-input>\n\n                <div class=\"input-extension\">\n                    <div class=\"input-extension__copy\" v-show=\"copyTriggerShow\" @click=\"copyToClipboard\">\n                        <span>{{$t('objects.copy')}}</span>\n\n                        <div class=\"hint\" v-if=\"copyMessage\">\n                            <div class=\"tooltip-top active\">\n<!--                                <i class=\"icon-icon_approve\"></i>-->\n                                <span>{{this.copyMessage}}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <i\n                            class=\"input-extension__generate icon-icon_generate\"\n                            :title=\"$t('iconHints.generate')\"\n                            @click=\"generatePassword\"\n                    ></i>\n                </div>\n            </div>\n\n            <dropdown-select\n                    v-model=\"user\"\n                    :options=\"dropdownOptionsList\"\n                    :label=\"$t('objects.user')\"\n                    @search=\"loadDropdownOptionsList\"\n            ></dropdown-select>\n        </form>\n    </section>\n</template>\n\n<script>\n    import eventBus from \"../../../utils/eventBus\";\n    import openedTabComponentMixin from '@/mixins/openedTabComponentMixin';\n    import {getUsersList} from \"../../../api/directory/users/users\";\n    import {mapActions} from \"vuex\";\n\n    export default {\n        name: \"opened-device-general\",\n        mixins: [openedTabComponentMixin],\n        data() {\n            return {\n                copyMessage: '',\n                copyTriggerShow: false,\n            }\n        },\n\n        mounted() {\n            this.loadDropdownOptionsList();\n        },\n\n        computed: {\n            name: {\n                get() {return this.$store.state.directory.devices.itemInstance.name},\n                set(value) {this.setItemProp({prop: 'name', value})}\n            },\n            account: {\n                get() {return this.$store.state.directory.devices.itemInstance.account},\n                set(value) {this.setItemProp({prop: 'account', value})}\n            },\n            password: {\n                get() {return this.$store.state.directory.devices.itemInstance.password},\n                set(value) {this.setItemProp({prop: 'password', value})}\n            },\n            user: {\n                get() {return this.$store.state.directory.devices.itemInstance.user},\n                set(value) {this.setItemProp({prop: 'user', value})}\n            },\n\n            computePasswordRepresentation() {\n                return this.password.length <= 12 ? this.password : this.password.slice(0, 12);\n            }\n        },\n\n        methods: {\n            async loadDropdownOptionsList(search) {\n                const response = await getUsersList(10, search);\n                this.dropdownOptionsList = response.map(item => {\n                    return {\n                        name: item.name,\n                        id: item.id,\n                    }\n                });\n            },\n\n            generatePassword() {\n                const length = 12;\n                const charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n                let result = '';\n                for (let i = 0; i < length; i++) {\n                    result += charset.charAt(Math.floor(Math.random() * charset.length));\n                }\n                this.password = result;\n                this.copyTriggerShow = true;\n            },\n\n            copyToClipboard() {\n                if (this.password) {\n                    eventBus.$emit('copyToClipboard', this.password);\n                    this.copyMessage = this.$t('objects.copied');\n                    setTimeout(() => this.copyMessage = '', 2000);\n                }\n            },\n\n            ...mapActions('directory/devices', {\n                setItemProp: 'SET_ITEM_PROPERTY',\n            }),\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/components/directory/devices"}]}