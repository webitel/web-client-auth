{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/directory/devices/devices.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/directory/devices/devices.js","mtime":1580814855498},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../../instance\";\nimport sanitizer from \"../../utils/sanitizer\";\nimport eventBus from \"../../../utils/eventBus\";\nimport deepCopy from \"deep-copy\";\nvar BASE_URL = '/devices';\nvar fieldsToSend = ['name', 'account', 'password', 'user' // 'mac', 'ip', 'vendor', 'model'\n];\nexport function getDeviceList() {\n  return _getDeviceList.apply(this, arguments);\n}\n\nfunction _getDeviceList() {\n  _getDeviceList = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5() {\n    var page,\n        size,\n        search,\n        defaultObject,\n        url,\n        response,\n        _args5 = arguments;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            page = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : 0;\n            size = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : 100;\n            search = _args5.length > 2 ? _args5[2] : undefined;\n            defaultObject = {\n              // default object prototype, to merge response with it to get all fields\n              _isSelected: false,\n              name: 'name undefined',\n              account: 'auth id undefined',\n              user: {\n                name: 'user undefined'\n              },\n              state: 0,\n              id: 0\n            }; // let url = BASE_URL + `?page=${page}size=${size}`;\n\n            url = BASE_URL + \"?size=\".concat(size);\n            if (search) url += \"&name=\".concat(search, \"*\");\n            _context5.prev = 6;\n            _context5.next = 9;\n            return instance.get(url);\n\n          case 9:\n            response = _context5.sent;\n\n            if (!response.devices) {\n              _context5.next = 12;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", response.devices.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 12:\n            return _context5.abrupt(\"return\", []);\n\n          case 15:\n            _context5.prev = 15;\n            _context5.t0 = _context5[\"catch\"](6);\n            throw _context5.t0;\n\n          case 18:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[6, 15]]);\n  }));\n  return _getDeviceList.apply(this, arguments);\n}\n\nexport function getDevice(_x) {\n  return _getDevice.apply(this, arguments);\n}\n\nfunction _getDevice() {\n  _getDevice = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(id) {\n    var url, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            url = BASE_URL + '/' + id;\n            defaultObject = {\n              // default object prototype, to merge response with it to get all fields\n              name: 'name undefined',\n              account: 'auth id undefined',\n              user: {\n                name: 'user undefined'\n              },\n              state: 0,\n              id: 0,\n              _dirty: false\n            };\n            _context6.prev = 2;\n            _context6.next = 5;\n            return instance.get(url);\n\n          case 5:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", _objectSpread({}, defaultObject, {}, response.device));\n\n          case 9:\n            _context6.prev = 9;\n            _context6.t0 = _context6[\"catch\"](2);\n            throw _context6.t0;\n\n          case 12:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[2, 9]]);\n  }));\n  return _getDevice.apply(this, arguments);\n}\n\nexport var addDevice =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(item) {\n    var itemCopy, response;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            sanitizer(itemCopy, fieldsToSend);\n            _context.prev = 2;\n            _context.next = 5;\n            return instance.post(BASE_URL, {\n              device: itemCopy\n            });\n\n          case 5:\n            response = _context.sent;\n            eventBus.$emit('notificationInfo', 'Sucessfully added');\n            return _context.abrupt(\"return\", response.device.id);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n            throw _context.t0;\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 10]]);\n  }));\n\n  return function addDevice(_x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var updateDevice =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(id, item) {\n    var url, itemCopy;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            url = BASE_URL + '/' + id;\n            itemCopy = deepCopy(item);\n            sanitizer(itemCopy, fieldsToSend);\n            _context2.prev = 3;\n            _context2.next = 6;\n            return instance.put(url, {\n              device: itemCopy\n            });\n\n          case 6:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](3);\n            throw _context2.t0;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 9]]);\n  }));\n\n  return function updateDevice(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var deleteDevice =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(id) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            url = BASE_URL + '/' + id + '?permanent=true';\n            _context3.prev = 1;\n            _context3.next = 4;\n            return instance.delete(url);\n\n          case 4:\n            _context3.next = 9;\n            break;\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](1);\n            throw _context3.t0;\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 6]]);\n  }));\n\n  return function deleteDevice(_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getDeviceHistory =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(id, date) {\n    var page,\n        url,\n        defaultObject,\n        response,\n        _args4 = arguments;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            page = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : 0;\n            url = \"\".concat(BASE_URL, \"/\").concat(id, \"/users/audit?time_from=\").concat(date);\n            defaultObject = {\n              loggedIn: 'unknown',\n              loggedOut: 'currently active',\n              user: {\n                name: 'unknown user'\n              }\n            };\n            _context4.prev = 3;\n            _context4.next = 6;\n            return instance.get(url);\n\n          case 6:\n            response = _context4.sent;\n\n            if (!response.auditLogs) {\n              _context4.next = 9;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", response.auditLogs.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 9:\n            return _context4.abrupt(\"return\", []);\n\n          case 12:\n            _context4.prev = 12;\n            _context4.t0 = _context4[\"catch\"](3);\n            throw _context4.t0;\n\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[3, 12]]);\n  }));\n\n  return function getDeviceHistory(_x6, _x7) {\n    return _ref4.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/directory/devices/devices.js"],"names":["instance","sanitizer","eventBus","deepCopy","BASE_URL","fieldsToSend","getDeviceList","page","size","search","defaultObject","_isSelected","name","account","user","state","id","url","get","response","devices","map","item","getDevice","_dirty","device","addDevice","itemCopy","post","$emit","updateDevice","put","deleteDevice","delete","getDeviceHistory","date","loggedIn","loggedOut","auditLogs"],"mappings":"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","sourcesContent":["import instance from '../../instance';\nimport sanitizer from \"../../utils/sanitizer\";\nimport eventBus from \"../../../utils/eventBus\";\nimport deepCopy from \"deep-copy\";\n\nconst BASE_URL = '/devices';\nconst fieldsToSend = ['name', 'account', 'password', 'user',\n    // 'mac', 'ip', 'vendor', 'model'\n];\n\nexport async function getDeviceList(page = 0, size = 100, search) {\n    const defaultObject = {  // default object prototype, to merge response with it to get all fields\n        _isSelected: false,\n        name: 'name undefined',\n        account: 'auth id undefined',\n        user: {name: 'user undefined'},\n        state: 0,\n        id: 0\n    };\n\n    // let url = BASE_URL + `?page=${page}size=${size}`;\n    let url = BASE_URL + `?size=${size}`;\n    if (search) url += `&name=${search}*`;\n\n    try {\n        let response = await instance.get(url);\n        if (response.devices) {\n            return response.devices.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return [];\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function getDevice(id) {\n    const url = BASE_URL + '/' + id;\n\n    const defaultObject = {  // default object prototype, to merge response with it to get all fields\n        name: 'name undefined',\n        account: 'auth id undefined',\n        user: {name: 'user undefined'},\n        state: 0,\n        id: 0,\n        _dirty: false,\n    };\n    try {\n        let response = await instance.get(url);\n        // response.data.device.mac = response.data.device.mac.toUpperCase();\n        return {...defaultObject, ...response.device};\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const addDevice = async (item) => {\n    let itemCopy = deepCopy(item);\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        const response = await instance.post(BASE_URL, {device: itemCopy});\n        eventBus.$emit('notificationInfo', 'Sucessfully added');\n        return response.device.id;\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const updateDevice = async (id, item) => {\n    const url = BASE_URL + '/' + id;\n    let itemCopy = deepCopy(item);\n    sanitizer(itemCopy, fieldsToSend);\n\n    try {\n        await instance.put(url, {device: itemCopy});\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const deleteDevice = async (id) => {\n    const url = BASE_URL + '/' + id + '?permanent=true';\n\n    try {\n        await instance.delete(url);\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getDeviceHistory = async (id, date, page = 0) => {\n    const url = `${BASE_URL}/${id}/users/audit?time_from=${date}`;\n    const defaultObject = {\n        loggedIn: 'unknown',\n        loggedOut: 'currently active',\n        user: {name: 'unknown user'}\n    };\n\n    try {\n        let response = await instance.get(url);\n        if (response.auditLogs) {\n            return response.auditLogs.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return [];\n    } catch (err) {\n        throw err;\n    }\n};"]}]}