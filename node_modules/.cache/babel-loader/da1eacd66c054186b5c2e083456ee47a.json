{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/routing/flow/opened-flow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/routing/flow/opened-flow.vue","mtime":1581319602552},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport editComponentMixin from '@/mixins/editComponentMixin';\nimport codeEditor from '@/components/utils/code-editor';\nimport { required } from 'vuelidate/lib/validators';\nimport { mapActions, mapState } from \"vuex\";\nexport default {\n  name: \"opened-flow\",\n  mixins: [editComponentMixin],\n  components: {\n    codeEditor: codeEditor\n  },\n  data: function data() {\n    return {\n      options: {\n        autoClosingBrackets: false\n      },\n      isSyntaxError: true\n    };\n  },\n  // by vuelidate\n  validations: {\n    itemInstance: {\n      name: {\n        required: required\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.id = this.$route.params.id;\n    this.loadItem();\n  },\n  computed: _objectSpread({}, mapState('routing/flow', {\n    itemInstance: function itemInstance(state) {\n      return state.itemInstance;\n    }\n  }), {\n    id: {\n      get: function get() {\n        return this.$store.state.routing.flow.itemId;\n      },\n      set: function set(value) {\n        this.setId(value);\n      }\n    },\n    name: {\n      get: function get() {\n        return this.$store.state.routing.flow.itemInstance.name;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'name',\n          value: value\n        });\n      }\n    },\n    schema: {\n      get: function get() {\n        return this.$store.state.routing.flow.itemInstance.schema;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'schema',\n          value: value\n        });\n      }\n    }\n  }),\n  methods: _objectSpread({\n    // override validations check to compute disabled SAVE properly\n    // can't just add isSyntaxError to validations because checkValidation checks\n    // only itemInstance props\n    checkValidations: function checkValidations() {\n      var validatedInstance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'itemInstance';\n      var v = this.$v ? this.$v : this.v;\n      v[validatedInstance].$touch(); // if its still pending or an error is returned do not submit\n\n      return v[validatedInstance].$pending || v[validatedInstance].$error || this.isSyntaxError;\n    }\n  }, mapActions('routing/flow', {\n    setId: 'SET_ITEM_ID',\n    loadItem: 'LOAD_ITEM',\n    addItem: 'ADD_ITEM',\n    updateItem: 'UPDATE_ITEM',\n    setItemProp: 'SET_ITEM_PROPERTY'\n  }))\n};",{"version":3,"sources":["opened-flow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,OAAA,kBAAA,MAAA,6BAAA;AACA,OAAA,UAAA,MAAA,gCAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AACA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,MAAA,EAAA,CAAA,kBAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GAHA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,mBAAA,EAAA;AADA,OADA;AAIA,MAAA,aAAA,EAAA;AAJA,KAAA;AAMA,GAbA;AAeA;AACA,EAAA,WAAA,EAAA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA;AADA;AADA,GAhBA;AAwBA,EAAA,OAxBA,qBAwBA;AACA,SAAA,EAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,SAAA,QAAA;AACA,GA3BA;AA6BA,EAAA,QAAA,oBACA,QAAA,CAAA,cAAA,EAAA;AACA,IAAA,YAAA,EAAA,sBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,YAAA;AAAA;AADA,GAAA,CADA;AAIA,IAAA,EAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,MAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,KAAA,CAAA,KAAA;AACA;AANA,KAJA;AAYA,IAAA,IAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,YAAA,CAAA,IAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,WAAA,CAAA;AAAA,UAAA,IAAA,EAAA,MAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AACA;AANA,KAZA;AAoBA,IAAA,MAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,YAAA,CAAA,MAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,WAAA,CAAA;AAAA,UAAA,IAAA,EAAA,QAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AACA;AANA;AApBA,IA7BA;AA2DA,EAAA,OAAA;AACA;AACA;AACA;AACA,IAAA,gBAJA,8BAIA;AAAA,UAAA,iBAAA,uEAAA,cAAA;AACA,UAAA,CAAA,GAAA,KAAA,EAAA,GAAA,KAAA,EAAA,GAAA,KAAA,CAAA;AACA,MAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,MAAA,GAFA,CAGA;;AACA,aAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,QAAA,IACA,CAAA,CAAA,iBAAA,CAAA,CAAA,MADA,IACA,KAAA,aADA;AAEA;AAVA,KAYA,UAAA,CAAA,cAAA,EAAA;AACA,IAAA,KAAA,EAAA,aADA;AAEA,IAAA,QAAA,EAAA,WAFA;AAGA,IAAA,OAAA,EAAA,UAHA;AAIA,IAAA,UAAA,EAAA,aAJA;AAKA,IAAA,WAAA,EAAA;AALA,GAAA,CAZA;AA3DA,CAAA","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryText=\"computePrimaryText\"\n                :primaryAction=\"save\"\n                :primaryDisabled=\"computeDisabled\"\n                close\n        >\n            {{$t('objects.routing.flow.flowSchema')}} |\n            {{computeTitle}}\n        </object-header>\n        <section class=\"object-content module-new\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">{{$t('objects.generalInfo')}}</h3>\n            </header>\n            <form class=\"object-input-grid\">\n                <form-input\n                        v-model.trim=\"name\"\n                        :v=\"$v.itemInstance.name\"\n                        :label=\"$t('objects.name')\"\n                        required\n                ></form-input>\n            </form>\n            <code-editor\n                    v-model=\"schema\"\n                    :label=\"$t('objects.routing.flow.callflow')\"\n                    @errorListener=\"isSyntaxError = $event\"\n            ></code-editor>\n        </section>\n    </div>\n</template>\n\n<script>\n    import editComponentMixin from '@/mixins/editComponentMixin';\n    import codeEditor from '@/components/utils/code-editor';\n    import {required} from 'vuelidate/lib/validators';\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: \"opened-flow\",\n        mixins: [editComponentMixin],\n        components: {\n            codeEditor\n        },\n        data() {\n            return {\n                options: {\n                    autoClosingBrackets: false\n                },\n                isSyntaxError: true,\n            };\n        },\n\n        // by vuelidate\n        validations: {\n            itemInstance: {\n                name: {\n                    required\n                },\n            },\n        },\n\n        mounted() {\n            this.id = this.$route.params.id;\n            this.loadItem();\n        },\n\n        computed: {\n            ...mapState('routing/flow', {\n                itemInstance: state => state.itemInstance,\n            }),\n            id: {\n                get() {\n                    return this.$store.state.routing.flow.itemId\n                },\n                set(value) {\n                    this.setId(value)\n                }\n            },\n            name: {\n                get() {\n                    return this.$store.state.routing.flow.itemInstance.name\n                },\n                set(value) {\n                    this.setItemProp({prop: 'name', value})\n                }\n            },\n            schema: {\n                get() {\n                    return this.$store.state.routing.flow.itemInstance.schema\n                },\n                set(value) {\n                    this.setItemProp({prop: 'schema', value})\n                }\n            },\n        },\n\n        methods: {\n            // override validations check to compute disabled SAVE properly\n            // can't just add isSyntaxError to validations because checkValidation checks\n            // only itemInstance props\n            checkValidations(validatedInstance = 'itemInstance') {\n                const v = this.$v ? this.$v : this.v;\n                v[validatedInstance].$touch();\n                // if its still pending or an error is returned do not submit\n                return v[validatedInstance].$pending ||\n                    v[validatedInstance].$error || this.isSyntaxError;\n            },\n\n            ...mapActions('routing/flow', {\n                setId: 'SET_ITEM_ID',\n                loadItem: 'LOAD_ITEM',\n                addItem: 'ADD_ITEM',\n                updateItem: 'UPDATE_ITEM',\n                setItemProp: 'SET_ITEM_PROPERTY',\n            }),\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .editor-wrap {\n        margin-top: 8px;\n    }\n</style>"],"sourceRoot":"src/components/routing/flow"}]}