{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/contact-center/queues/queues.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/contact-center/queues/queues.js","mtime":1580995671157},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../../instance\";\nimport configuration from \"../../openAPIConfig\";\nimport sanitizer from \"../../utils/sanitizer\";\nimport { QueueServiceApiFactory } from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport { coerceObjectPermissionsResponse } from \"../../permissions/objects/objects\";\nimport deepCopy from 'deep-copy';\nimport store from \"../../../store/store\";\nvar queueService = new QueueServiceApiFactory(configuration, '', instance);\nvar BASE_URL = '/call_center/queues';\nvar fieldsToSend = ['domainId', 'name', 'type', 'strategy', 'team', 'priority', 'dncList', 'schema', 'payload', 'maxOfRetry', 'timeout', 'secBetweenRetries', 'variables', 'calendar', 'description'];\nexport var strategiesList = {\n  'random': 'Random',\n  'strict-circuit': 'Strict circuit',\n  'next-try-circuit': 'Next try circuit',\n  'by-buckets': 'By buckets',\n  'by-skills': 'By skills'\n};\nexport var getQueuesList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var page,\n        size,\n        search,\n        domainId,\n        defaultObject,\n        response,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;\n            size = _args.length > 1 && _args[1] !== undefined ? _args[1] : 10;\n            search = _args.length > 2 ? _args[2] : undefined;\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              type: 0,\n              enabled: false,\n              activeCalls: 'undefined',\n              waiting: 'undefined',\n              priority: '0',\n              _isSelected: false\n            };\n            if (search && search.slice(-1) !== '*') search += '*';\n            _context.prev = 6;\n            _context.next = 9;\n            return queueService.searchQueue(page, size, search, domainId);\n\n          case 9:\n            response = _context.sent;\n\n            if (!response.items) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.items.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", []);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            throw _context.t0;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function getQueuesList() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getQueue =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(id) {\n    var domainId, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              name: '',\n              id: 0,\n              payload: {},\n              calendar: {},\n              priority: '0',\n              dncList: {},\n              // blacklist\n              schema: {},\n              team: {},\n              strategy: {},\n              description: 'DESCRIPTION',\n              variables: [{\n                key: '',\n                value: ''\n              }],\n              _dirty: false\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return queueService.readQueue(id, domainId);\n\n          case 5:\n            response = _context2.sent;\n\n            if (response.variables) {\n              response.variables = Object.keys(response.variables).map(function (key) {\n                return {\n                  key: key,\n                  value: response.variables[key]\n                };\n              });\n            }\n\n            if (response.priority) response.priority += '';\n            response.strategy = {\n              name: strategiesList[response.strategy],\n              value: response.strategy\n            };\n            return _context2.abrupt(\"return\", _objectSpread({}, defaultObject, {}, response));\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](2);\n            throw _context2.t0;\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 12]]);\n  }));\n\n  return function getQueue(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var addQueue =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(item) {\n    var itemCopy, response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            if (itemCopy.strategy) itemCopy.strategy = itemCopy.strategy.value;\n            sanitizer(itemCopy, fieldsToSend);\n            itemCopy.variables = {};\n            item.variables.forEach(function (variable) {\n              itemCopy.variables[variable.key] = variable.value;\n            });\n            _context3.prev = 6;\n            _context3.next = 9;\n            return queueService.createQueue(itemCopy);\n\n          case 9:\n            response = _context3.sent;\n            eventBus.$emit('notificationInfo', 'Sucessfully added');\n            return _context3.abrupt(\"return\", response.id);\n\n          case 14:\n            _context3.prev = 14;\n            _context3.t0 = _context3[\"catch\"](6);\n            throw _context3.t0;\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[6, 14]]);\n  }));\n\n  return function addQueue(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var patchQueue =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(id, item) {\n    var itemCopy;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            _context4.prev = 2;\n            _context4.next = 5;\n            return queueService.patchQueue(id, itemCopy);\n\n          case 5:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context4.next = 11;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](2);\n            throw _context4.t0;\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[2, 8]]);\n  }));\n\n  return function patchQueue(_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var updateQueue =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(id, item) {\n    var itemCopy;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            itemCopy.strategy = itemCopy.strategy.value;\n            sanitizer(itemCopy, fieldsToSend);\n            itemCopy.variables = {};\n            item.variables.forEach(function (variable) {\n              itemCopy.variables[variable.key] = variable.value;\n            });\n            _context5.prev = 6;\n            _context5.next = 9;\n            return queueService.updateQueue(id, itemCopy);\n\n          case 9:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context5.next = 15;\n            break;\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](6);\n            throw _context5.t0;\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[6, 12]]);\n  }));\n\n  return function updateQueue(_x5, _x6) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var deleteQueue =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(id) {\n    var domainId;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            _context6.prev = 1;\n            _context6.next = 4;\n            return queueService.deleteQueue(id, domainId);\n\n          case 4:\n            _context6.next = 9;\n            break;\n\n          case 6:\n            _context6.prev = 6;\n            _context6.t0 = _context6[\"catch\"](1);\n            throw _context6.t0;\n\n          case 9:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 6]]);\n  }));\n\n  return function deleteQueue(_x7) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var getQueuePermissions =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(id) {\n    var page,\n        size,\n        search,\n        url,\n        response,\n        _args7 = arguments;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            page = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : 0;\n            size = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : 10;\n            search = _args7.length > 3 ? _args7[3] : undefined;\n            // let url = BASE_URL + `?page=${page}size=${size}`;\n            url = BASE_URL + '/' + id + '/acl' + \"?size=\".concat(size);\n            if (search) url += \"&name=\".concat(search, \"*\");\n            _context7.prev = 5;\n            _context7.next = 8;\n            return instance.get(url);\n\n          case 8:\n            response = _context7.sent;\n            return _context7.abrupt(\"return\", coerceObjectPermissionsResponse(response));\n\n          case 12:\n            _context7.prev = 12;\n            _context7.t0 = _context7[\"catch\"](5);\n            throw _context7.t0;\n\n          case 15:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[5, 12]]);\n  }));\n\n  return function getQueuePermissions(_x8) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var patchQueuePermissions =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(id, item) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            url = BASE_URL + '/' + id + '/acl';\n            _context8.prev = 1;\n            _context8.next = 4;\n            return instance.patch(url, {\n              changes: item\n            });\n\n          case 4:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context8.next = 10;\n            break;\n\n          case 7:\n            _context8.prev = 7;\n            _context8.t0 = _context8[\"catch\"](1);\n            throw _context8.t0;\n\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[1, 7]]);\n  }));\n\n  return function patchQueuePermissions(_x9, _x10) {\n    return _ref8.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/contact-center/queues/queues.js"],"names":["instance","configuration","sanitizer","QueueServiceApiFactory","eventBus","coerceObjectPermissionsResponse","deepCopy","store","queueService","BASE_URL","fieldsToSend","strategiesList","getQueuesList","page","size","search","domainId","state","userinfo","undefined","defaultObject","type","enabled","activeCalls","waiting","priority","_isSelected","slice","searchQueue","response","items","map","item","getQueue","id","name","payload","calendar","dncList","schema","team","strategy","description","variables","key","value","_dirty","readQueue","Object","keys","addQueue","itemCopy","forEach","variable","createQueue","$emit","patchQueue","updateQueue","deleteQueue","getQueuePermissions","url","get","patchQueuePermissions","patch","changes"],"mappings":"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","sourcesContent":["import instance from '../../instance';\nimport configuration from '../../openAPIConfig';\nimport sanitizer from '../../utils/sanitizer';\nimport {QueueServiceApiFactory} from 'webitel-sdk';\nimport eventBus from \"../../../utils/eventBus\";\nimport {coerceObjectPermissionsResponse} from \"../../permissions/objects/objects\";\nimport deepCopy from 'deep-copy';\nimport store from '../../../store/store';\n\nconst queueService = new QueueServiceApiFactory\n(configuration, '', instance);\n\nconst BASE_URL = '/call_center/queues';\nconst fieldsToSend = ['domainId', 'name', 'type', 'strategy', 'team', 'priority', 'dncList', 'schema',\n    'payload', 'maxOfRetry', 'timeout', 'secBetweenRetries', 'variables', 'calendar', 'description'];\n\nexport const strategiesList = {\n    'random': 'Random',\n    'strict-circuit': 'Strict circuit',\n    'next-try-circuit': 'Next try circuit',\n    'by-buckets': 'By buckets',\n    'by-skills': 'By skills',\n};\n\nexport const getQueuesList = async (page = 0, size = 10, search) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        type: 0,\n        enabled: false,\n        activeCalls: 'undefined',\n        waiting: 'undefined',\n        priority: '0',\n        _isSelected: false,\n    };\n    if (search && search.slice(-1) !== '*') search += '*';\n\n    try {\n        const response = await queueService.searchQueue(page, size, search, domainId);\n        if (response.items) {\n            return response.items.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return []\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getQueue = async (id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        name: '',\n        id: 0,\n        payload: {},\n        calendar: {},\n        priority: '0',\n        dncList: {}, // blacklist\n        schema: {},\n        team: {},\n        strategy: {},\n        description: 'DESCRIPTION',\n        variables: [{key: '', value: ''}],\n        _dirty: false,\n    };\n\n    try {\n        let response = await queueService.readQueue(id, domainId);\n        if (response.variables) {\n            response.variables = Object.keys(response.variables).map(key => {\n                return {key, value: response.variables[key]}\n            });\n        }\n        if (response.priority) response.priority += '';\n        response.strategy = {\n            name: strategiesList[response.strategy],\n            value: response.strategy,\n        };\n        return {...defaultObject, ...response};\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const addQueue = async (item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    if(itemCopy.strategy) itemCopy.strategy = itemCopy.strategy.value;\n    sanitizer(itemCopy, fieldsToSend);\n    itemCopy.variables = {};\n    item.variables.forEach(variable => {\n        itemCopy.variables[variable.key] = variable.value;\n    });\n    try {\n        const response = await queueService.createQueue(itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully added');\n        return response.id;\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const patchQueue = async (id, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    try {\n        await queueService.patchQueue(id, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const updateQueue = async (id, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    itemCopy.strategy = itemCopy.strategy.value;\n    sanitizer(itemCopy, fieldsToSend);\n    itemCopy.variables = {};\n    item.variables.forEach(variable => {\n        itemCopy.variables[variable.key] = variable.value;\n    });\n    try {\n        await queueService.updateQueue(id, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const deleteQueue = async (id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    try {\n        await queueService.deleteQueue(id, domainId);\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getQueuePermissions = async (id, page = 0, size = 10, search) => {\n    // let url = BASE_URL + `?page=${page}size=${size}`;\n    let url = BASE_URL + '/' + id + '/acl' + `?size=${size}`;\n    if (search) url += `&name=${search}*`;\n    try {\n        const response = await instance.get(url);\n        return coerceObjectPermissionsResponse(response);\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const patchQueuePermissions = async (id, item) => {\n    const url = BASE_URL + '/' + id + '/acl';\n\n    try {\n        await instance.patch(url, {changes: item});\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (error) {\n        throw error;\n    }\n};"]}]}