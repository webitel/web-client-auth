{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/api/lookups/blacklists/blacklists.js","dependencies":[{"path":"/home/dev/work/client-auth/src/api/lookups/blacklists/blacklists.js","mtime":1580815302326},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport instance from \"../../instance\";\nimport configuration from \"../../openAPIConfig\";\nimport { ListServiceApiFactory } from 'webitel-sdk';\nimport sanitizer from \"../../utils/sanitizer\";\nimport eventBus from \"../../../utils/eventBus\";\nimport { coerceObjectPermissionsResponse } from \"../../permissions/objects/objects\";\nimport deepCopy from 'deep-copy';\nimport store from \"../../../store/store\";\nvar listService = new ListServiceApiFactory(configuration, '', instance);\nvar BASE_URL = '/call_center/list';\nvar fieldsToSend = ['domainId', 'name', 'description'];\nexport var getBlacklistList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(page, size, search) {\n    var domainId, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            if (search && search.slice(-1) !== '*') search += '*';\n            defaultObject = {\n              name: '',\n              _isSelected: false\n            };\n            _context.prev = 3;\n            _context.next = 6;\n            return listService.searchList(page, size, search, domainId);\n\n          case 6:\n            response = _context.sent;\n\n            if (!response.items) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.items.map(function (item) {\n              return _objectSpread({}, defaultObject, {}, item);\n            }));\n\n          case 9:\n            return _context.abrupt(\"return\", []);\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](3);\n            throw _context.t0;\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 12]]);\n  }));\n\n  return function getBlacklistList(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getBlacklist =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(id) {\n    var domainId, defaultObject, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            defaultObject = {\n              _dirty: false\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return listService.readList(id, domainId);\n\n          case 5:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", _objectSpread({}, defaultObject, {}, response));\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            throw _context2.t0;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function getBlacklist(_x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var addBlacklist =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(item) {\n    var itemCopy, response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            sanitizer(itemCopy, fieldsToSend);\n            _context3.prev = 3;\n            _context3.next = 6;\n            return listService.createList(itemCopy);\n\n          case 6:\n            response = _context3.sent;\n            eventBus.$emit('notificationInfo', 'Sucessfully added');\n            return _context3.abrupt(\"return\", response.id);\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](3);\n            throw _context3.t0;\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 11]]);\n  }));\n\n  return function addBlacklist(_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var updateBlacklist =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(id, item) {\n    var itemCopy;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            itemCopy = deepCopy(item);\n            itemCopy.domainId = store.state.userinfo.domainId || undefined;\n            sanitizer(itemCopy, fieldsToSend);\n            _context4.prev = 3;\n            _context4.next = 6;\n            return listService.updateList(id, itemCopy);\n\n          case 6:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context4.next = 12;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](3);\n            throw _context4.t0;\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[3, 9]]);\n  }));\n\n  return function updateBlacklist(_x6, _x7) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var deleteBlacklist =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(id) {\n    var domainId;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            domainId = store.state.userinfo.domainId || undefined;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return listService.deleteList(id, domainId);\n\n          case 4:\n            _context5.next = 9;\n            break;\n\n          case 6:\n            _context5.prev = 6;\n            _context5.t0 = _context5[\"catch\"](1);\n            throw _context5.t0;\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 6]]);\n  }));\n\n  return function deleteBlacklist(_x8) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var getBlacklistPermissions =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(id) {\n    var page,\n        size,\n        search,\n        url,\n        response,\n        _args6 = arguments;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            page = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : 0;\n            size = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : 10;\n            search = _args6.length > 3 ? _args6[3] : undefined;\n            // let url = BASE_URL + `?page=${page}size=${size}`;\n            url = BASE_URL + '/' + id + '/acl' + \"?size=\".concat(size);\n            if (search) url += \"&name=\".concat(search, \"*\");\n            _context6.prev = 5;\n            _context6.next = 8;\n            return instance.get(url);\n\n          case 8:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", coerceObjectPermissionsResponse(response));\n\n          case 12:\n            _context6.prev = 12;\n            _context6.t0 = _context6[\"catch\"](5);\n            throw _context6.t0;\n\n          case 15:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[5, 12]]);\n  }));\n\n  return function getBlacklistPermissions(_x9) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var patchBlacklistPermissions =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(id, item) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            url = BASE_URL + '/' + id + '/acl';\n            _context7.prev = 1;\n            _context7.next = 4;\n            return instance.patch(url, {\n              changes: item\n            });\n\n          case 4:\n            eventBus.$emit('notificationInfo', 'Sucessfully updated');\n            _context7.next = 10;\n            break;\n\n          case 7:\n            _context7.prev = 7;\n            _context7.t0 = _context7[\"catch\"](1);\n            throw _context7.t0;\n\n          case 10:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 7]]);\n  }));\n\n  return function patchBlacklistPermissions(_x10, _x11) {\n    return _ref7.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["/home/dev/work/client-auth/src/api/lookups/blacklists/blacklists.js"],"names":["instance","configuration","ListServiceApiFactory","sanitizer","eventBus","coerceObjectPermissionsResponse","deepCopy","store","listService","BASE_URL","fieldsToSend","getBlacklistList","page","size","search","domainId","state","userinfo","undefined","slice","defaultObject","name","_isSelected","searchList","response","items","map","item","getBlacklist","id","_dirty","readList","addBlacklist","itemCopy","createList","$emit","updateBlacklist","updateList","deleteBlacklist","deleteList","getBlacklistPermissions","url","get","patchBlacklistPermissions","patch","changes"],"mappings":";;;;;;;;;;;AAAA,OAAOA,QAAP;AACA,OAAOC,aAAP;AACA,SAAQC,qBAAR,QAAoC,aAApC;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,SAAQC,+BAAR;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP;AAEA,IAAMC,WAAW,GAAG,IAAIN,qBAAJ,CACnBD,aADmB,EACJ,EADI,EACAD,QADA,CAApB;AAGA,IAAMS,QAAQ,GAAG,mBAAjB;AACA,IAAMC,YAAY,GAAG,CAAC,UAAD,EAAa,MAAb,EAAqB,aAArB,CAArB;AAEA,OAAO,IAAMC,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,IAAP,EAAaC,IAAb,EAAmBC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,YAAAA,QADsB,GACXR,KAAK,CAACS,KAAN,CAAYC,QAAZ,CAAqBF,QAArB,IAAiCG,SADtB;AAE5B,gBAAGJ,MAAM,IAAIA,MAAM,CAACK,KAAP,CAAa,CAAC,CAAd,MAAqB,GAAlC,EAAuCL,MAAM,IAAI,GAAV;AACjCM,YAAAA,aAHsB,GAGN;AAClBC,cAAAA,IAAI,EAAE,EADY;AAElBC,cAAAA,WAAW,EAAE;AAFK,aAHM;AAAA;AAAA;AAAA,mBASDd,WAAW,CAACe,UAAZ,CAAuBX,IAAvB,EAA6BC,IAA7B,EAAmCC,MAAnC,EAA2CC,QAA3C,CATC;;AAAA;AASlBS,YAAAA,QATkB;;AAAA,iBAUpBA,QAAQ,CAACC,KAVW;AAAA;AAAA;AAAA;;AAAA,6CAWbD,QAAQ,CAACC,KAAT,CAAeC,GAAf,CAAmB,UAAAC,IAAI,EAAI;AAC9B,uCAAWP,aAAX,MAA6BO,IAA7B;AACH,aAFM,CAXa;;AAAA;AAAA,6CAejB,EAfiB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBhB,gBAAgB;AAAA;AAAA;AAAA,GAAtB;AAqBP,OAAO,IAAMiB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBd,YAAAA,QADkB,GACPR,KAAK,CAACS,KAAN,CAAYC,QAAZ,CAAqBF,QAArB,IAAiCG,SAD1B;AAElBE,YAAAA,aAFkB,GAEF;AAClBU,cAAAA,MAAM,EAAE;AADU,aAFE;AAAA;AAAA;AAAA,mBAOGtB,WAAW,CAACuB,QAAZ,CAAqBF,EAArB,EAAyBd,QAAzB,CAPH;;AAAA;AAOdS,YAAAA,QAPc;AAAA,gEAQTJ,aARS,MAQSI,QART;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZI,YAAY;AAAA;AAAA;AAAA,GAAlB;AAcP,OAAO,IAAMI,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOL,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBM,YAAAA,QADoB,GACT3B,QAAQ,CAACqB,IAAD,CADC;AAExBM,YAAAA,QAAQ,CAAClB,QAAT,GAAoBR,KAAK,CAACS,KAAN,CAAYC,QAAZ,CAAqBF,QAArB,IAAiCG,SAArD;AACAf,YAAAA,SAAS,CAAC8B,QAAD,EAAWvB,YAAX,CAAT;AAHwB;AAAA;AAAA,mBAKGF,WAAW,CAAC0B,UAAZ,CAAuBD,QAAvB,CALH;;AAAA;AAKdT,YAAAA,QALc;AAMpBpB,YAAAA,QAAQ,CAAC+B,KAAT,CAAe,kBAAf,EAAmC,mBAAnC;AANoB,8CAObX,QAAQ,CAACK,EAPI;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZG,YAAY;AAAA;AAAA;AAAA,GAAlB;AAaP,OAAO,IAAMI,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOP,EAAP,EAAWF,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBM,YAAAA,QADuB,GACZ3B,QAAQ,CAACqB,IAAD,CADI;AAE3BM,YAAAA,QAAQ,CAAClB,QAAT,GAAoBR,KAAK,CAACS,KAAN,CAAYC,QAAZ,CAAqBF,QAArB,IAAiCG,SAArD;AACAf,YAAAA,SAAS,CAAC8B,QAAD,EAAWvB,YAAX,CAAT;AAH2B;AAAA;AAAA,mBAKjBF,WAAW,CAAC6B,UAAZ,CAAuBR,EAAvB,EAA2BI,QAA3B,CALiB;;AAAA;AAMvB7B,YAAAA,QAAQ,CAAC+B,KAAT,CAAe,kBAAf,EAAmC,qBAAnC;AANuB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfC,eAAe;AAAA;AAAA;AAAA,GAArB;AAYP,OAAO,IAAME,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOT,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBd,YAAAA,QADqB,GACVR,KAAK,CAACS,KAAN,CAAYC,QAAZ,CAAqBF,QAArB,IAAiCG,SADvB;AAAA;AAAA;AAAA,mBAGjBV,WAAW,CAAC+B,UAAZ,CAAuBV,EAAvB,EAA2Bd,QAA3B,CAHiB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfuB,eAAe;AAAA;AAAA;AAAA,GAArB;AASP,OAAO,IAAME,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOX,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAWjB,YAAAA,IAAX,8DAAkB,CAAlB;AAAqBC,YAAAA,IAArB,8DAA4B,EAA5B;AAAgCC,YAAAA,MAAhC;AACnC;AACI2B,YAAAA,GAF+B,GAEzBhC,QAAQ,GAAG,GAAX,GAAiBoB,EAAjB,GAAsB,MAAtB,mBAAwChB,IAAxC,CAFyB;AAGnC,gBAAIC,MAAJ,EAAY2B,GAAG,oBAAa3B,MAAb,MAAH;AAHuB;AAAA;AAAA,mBAKRd,QAAQ,CAAC0C,GAAT,CAAaD,GAAb,CALQ;;AAAA;AAKzBjB,YAAAA,QALyB;AAAA,8CAMxBnB,+BAA+B,CAACmB,QAAD,CANP;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAvBgB,uBAAuB;AAAA;AAAA;AAAA,GAA7B;AAYP,OAAO,IAAMG,yBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOd,EAAP,EAAWF,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/Bc,YAAAA,GAD+B,GACzBhC,QAAQ,GAAG,GAAX,GAAiBoB,EAAjB,GAAsB,MADG;AAAA;AAAA;AAAA,mBAI3B7B,QAAQ,CAAC4C,KAAT,CAAeH,GAAf,EAAoB;AAACI,cAAAA,OAAO,EAAElB;AAAV,aAApB,CAJ2B;;AAAA;AAKjCvB,YAAAA,QAAQ,CAAC+B,KAAT,CAAe,kBAAf,EAAmC,qBAAnC;AALiC;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAzBQ,yBAAyB;AAAA;AAAA;AAAA,GAA/B","sourcesContent":["import instance from '../../instance';\nimport configuration from '../../openAPIConfig';\nimport {ListServiceApiFactory} from 'webitel-sdk';\nimport sanitizer from \"../../utils/sanitizer\";\nimport eventBus from \"../../../utils/eventBus\";\nimport {coerceObjectPermissionsResponse} from \"../../permissions/objects/objects\";\nimport deepCopy from 'deep-copy';\nimport store from '../../../store/store';\n\nconst listService = new ListServiceApiFactory\n(configuration, '', instance);\n\nconst BASE_URL = '/call_center/list';\nconst fieldsToSend = ['domainId', 'name', 'description'];\n\nexport const getBlacklistList = async (page, size, search) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    if(search && search.slice(-1) !== '*') search += '*';\n    const defaultObject = {\n        name: '',\n        _isSelected: false,\n    };\n\n    try {\n        const response = await listService.searchList(page, size, search, domainId);\n        if (response.items) {\n            return response.items.map(item => {\n                return {...defaultObject, ...item};\n            });\n        }\n        return [];\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getBlacklist = async (id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    const defaultObject = {\n        _dirty: false,\n    };\n\n    try {\n        const response = await listService.readList(id, domainId);\n        return {...defaultObject, ...response};\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const addBlacklist = async (item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        const response = await listService.createList(itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully added');\n        return response.id;\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const updateBlacklist = async (id, item) => {\n    let itemCopy = deepCopy(item);\n    itemCopy.domainId = store.state.userinfo.domainId || undefined;\n    sanitizer(itemCopy, fieldsToSend);\n    try {\n        await listService.updateList(id, itemCopy);\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const deleteBlacklist = async (id) => {\n    const domainId = store.state.userinfo.domainId || undefined;\n    try {\n        await listService.deleteList(id, domainId);\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport const getBlacklistPermissions = async (id, page = 0, size = 10, search) => {\n    // let url = BASE_URL + `?page=${page}size=${size}`;\n    let url = BASE_URL + '/' + id + '/acl' + `?size=${size}`;\n    if (search) url += `&name=${search}*`;\n    try {\n        const response = await instance.get(url);\n        return coerceObjectPermissionsResponse(response);\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const patchBlacklistPermissions = async (id, item) => {\n    const url = BASE_URL + '/' + id + '/acl';\n\n    try {\n        await instance.patch(url, {changes: item});\n        eventBus.$emit('notificationInfo', 'Sucessfully updated');\n    } catch (error) {\n        throw error;\n    }\n};"]}]}