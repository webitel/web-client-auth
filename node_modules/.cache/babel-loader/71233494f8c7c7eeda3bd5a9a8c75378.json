{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/routing/sip-gateways/the-sip-gateways.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/routing/sip-gateways/the-sip-gateways.vue","mtime":1581336980329},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport tableComponentMixin from '@/mixins/tableComponentMixin';\nimport gatewayPopup from \"./create-gateway-popup\";\nimport { _checkboxTableField, _actionsTableField_2, _switcherWidth } from \"@/utils/tableFieldPresets\";\nimport { mapActions, mapState } from \"vuex\";\nexport default {\n  name: \"the-sip-gateways\",\n  mixins: [tableComponentMixin],\n  components: {\n    gatewayPopup: gatewayPopup\n  },\n  data: function data() {\n    return {\n      fields: [_checkboxTableField, {\n        name: 'name',\n        title: this.$t('objects.name')\n      }, {\n        name: 'proxy',\n        title: this.$t('objects.routing.gateways.proxy')\n      }, {\n        name: 'enabled',\n        title: this.$t('objects.enabled'),\n        width: _switcherWidth\n      }, {\n        name: 'status',\n        title: this.$t('objects.status')\n      }, _actionsTableField_2]\n    };\n  },\n  computed: _objectSpread({}, mapState('routing/gateways', {\n    dataList: function dataList(state) {\n      return state.dataList;\n    },\n    page: function page(state) {\n      return state.page;\n    },\n    // acts like a boolean: if page is 0, there's no back page\n    isNextPage: function isNextPage(state) {\n      return state.isNextPage;\n    }\n  }), {\n    size: {\n      get: function get() {\n        return this.$store.state.routing.gateways.size;\n      },\n      set: function set(value) {\n        this.setSize(value);\n      }\n    },\n    search: {\n      get: function get() {\n        return this.$store.state.routing.gateways.search;\n      },\n      set: function set(value) {\n        this.setSearch(value);\n      }\n    }\n  }),\n  methods: _objectSpread({\n    create: function create() {\n      this.popupTriggerIf = true;\n    },\n    edit: function edit(rowId) {\n      var name = this.dataList[rowId].register ? 'reg-gateway-edit' : 'trunk-gateway-edit';\n      this.$router.push({\n        name: name,\n        params: {\n          id: this.dataList[rowId].id\n        }\n      });\n    },\n    computeStatusText: function computeStatusText(stateCode) {\n      if (stateCode === 3) {\n        return this.$t('objects.routing.gateways.stateSuccess');\n      } else if (stateCode > 3 && stateCode < 8) {\n        return this.$t('objects.routing.gateways.stateFailed');\n      } else if (stateCode > 7 && stateCode < 2) {\n        return this.$t('objects.routing.gateways.stateProgress');\n      } else {\n        return this.$t('objects.routing.gateways.stateNonreg');\n      }\n    },\n    computeStatusClass: function computeStatusClass(stateCode) {\n      if (stateCode === 3) {\n        return 'status__true';\n      } else if (stateCode > 3 && stateCode < 8) {\n        return 'status__false';\n      } else if (stateCode > 7 && stateCode < 2) {\n        return 'status__info';\n      } else {\n        return 'not-registered';\n      }\n    }\n  }, mapActions('routing/gateways', {\n    loadDataList: 'LOAD_DATA_LIST',\n    setSize: 'SET_SIZE',\n    setSearch: 'SET_SEARCH',\n    toggleSwitchProperty: 'TOGGLE_ITEM_PROPERTY',\n    nextPage: 'NEXT_PAGE',\n    prevPage: 'PREV_PAGE',\n    removeItem: 'REMOVE_ITEM'\n  }))\n};",{"version":3,"sources":["the-sip-gateways.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"gateways\">\n        <object-header\n                :primaryAction=\"create\"\n        >\n            {{$t('objects.routing.routing')}} |\n            {{$tc('objects.routing.gateways.gateways', 2)}}\n        </object-header>\n\n        <gateway-popup\n                v-if=\"popupTriggerIf\"\n                @close=\"popupTriggerIf = false\"\n        >\n        </gateway-popup>\n\n        <section class=\"object-content\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">\n                    {{$t('objects.routing.gateways.allGateways')}}\n                </h3>\n\n                <div class=\"content-header__actions-wrap\">\n                    <search\n                            v-model=\"search\"\n                            @filterData=\"loadList\"\n                    ></search>\n                    <i\n                            class=\"icon-icon_delete icon-action\"\n                            :class=\"{'hidden': anySelected}\"\n                            :title=\"$t('iconHints.deleteSelected')\"\n                            @click=\"deleteSelected\"\n                    ></i>\n                    <i\n                            class=\"icon-icon_reload icon-action\"\n                            :title=\"$t('iconHints.reload')\"\n                            @click=\"loadList\"\n                    ></i>\n                </div>\n            </header>\n\n            <loader v-show=\"!isLoaded\"></loader>\n\n            <vuetable\n                    v-show=\"isLoaded\"\n                    :api-mode=\"false\"\n                    :fields=\"fields\"\n                    :data=\"dataList\"\n                    no-data-template=\"Empty data message\"\n            >\n\n                <template slot=\"name\" slot-scope=\"props\">\n                    <div class=\"tt-capitalize\">\n                        <span class=\"nameLink\" @click=\"edit(props.rowIndex)\">\n                            {{dataList[props.rowIndex].name}}\n                        </span>\n                    </div>\n                </template>\n\n                <template slot=\"proxy\" slot-scope=\"props\">\n                    <span>\n                        {{dataList[props.rowIndex].proxy}}\n                    </span>\n                </template>\n\n                <template slot=\"enabled\" slot-scope=\"props\">\n                    <switcher\n                            :value=\"dataList[props.rowIndex].enable\"\n                            @input=\"toggleSwitchProperty(props.rowIndex)\"\n                    ></switcher>\n                </template>\n\n                <template slot=\"status\" slot-scope=\"props\">\n                    <status\n                            class=\"status\"\n                            :class=\"computeStatusClass(dataList[props.rowIndex].rState)\"\n                            :text=\"computeStatusText(dataList[props.rowIndex].rState)\"\n                    ></status>\n                </template>\n\n                <template slot=\"actions\" slot-scope=\"props\">\n                    <i class=\"vuetable-action icon-icon_edit\"\n                       :title=\"$t('iconHints.edit')\"\n                       @click=\"edit(props.rowIndex)\"\n                    ></i>\n                    <i class=\"vuetable-action icon-icon_delete\"\n                       :title=\"$t('iconHints.delete')\"\n                       @click=\"remove(props.rowIndex)\"\n                    ></i>\n                </template>\n            </vuetable>\n            <pagination\n                    v-show=\"isLoaded\"\n                    v-model=\"size\"\n                    @loadDataList=\"loadList\"\n                    @next=\"nextPage\"\n                    @prev=\"prevPage\"\n                    :isNext=\"isNextPage\"\n                    :isPrev=\"!!page\"\n            ></pagination>\n        </section>\n    </div>\n</template>\n\n<script>\n    import tableComponentMixin from '@/mixins/tableComponentMixin';\n    import gatewayPopup from './create-gateway-popup';\n    import {_checkboxTableField, _actionsTableField_2, _switcherWidth} from \"@/utils/tableFieldPresets\";\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: \"the-sip-gateways\",\n        mixins: [tableComponentMixin],\n        components: {gatewayPopup},\n        data() {\n            return {\n                fields: [\n                    _checkboxTableField,\n                    {name: 'name', title: this.$t('objects.name')},\n                    {name: 'proxy', title: this.$t('objects.routing.gateways.proxy')},\n                    {name: 'enabled', title: this.$t('objects.enabled'), width: _switcherWidth},\n                    {name: 'status', title: this.$t('objects.status')},\n                    _actionsTableField_2,\n                ],\n            };\n        },\n\n        computed: {\n            ...mapState('routing/gateways', {\n                dataList: state => state.dataList,\n                page: state => state.page, // acts like a boolean: if page is 0, there's no back page\n                isNextPage: state => state.isNextPage,\n            }),\n\n            size: {\n                get() {return this.$store.state.routing.gateways.size},\n                set(value) {this.setSize(value)}\n            },\n\n            search: {\n                get() {return this.$store.state.routing.gateways.search},\n                set(value) {this.setSearch(value)}\n            }\n        },\n\n        methods: {\n            create() {\n                this.popupTriggerIf = true;\n            },\n\n            edit(rowId) {\n                const name = this.dataList[rowId].register ?\n                    'reg-gateway-edit' : 'trunk-gateway-edit';\n\n                this.$router.push({\n                    name,\n                    params: {id: this.dataList[rowId].id},\n                });\n            },\n\n            computeStatusText(stateCode) {\n                if (stateCode === 3) {\n                    return this.$t('objects.routing.gateways.stateSuccess');\n                } else if (stateCode > 3 && stateCode < 8) {\n                    return this.$t('objects.routing.gateways.stateFailed');\n                } else if (stateCode > 7 && stateCode < 2) {\n                    return this.$t('objects.routing.gateways.stateProgress');\n                } else {\n                    return this.$t('objects.routing.gateways.stateNonreg');\n                }\n            },\n\n            computeStatusClass(stateCode) {\n                if (stateCode === 3) {\n                    return 'status__true';\n                } else if (stateCode > 3 && stateCode < 8) {\n                    return 'status__false';\n                } else if (stateCode > 7 && stateCode < 2) {\n                    return 'status__info';\n                } else {\n                    return 'not-registered'\n                }\n            },\n\n            ...mapActions('routing/gateways', {\n                loadDataList: 'LOAD_DATA_LIST',\n                setSize: 'SET_SIZE',\n                setSearch: 'SET_SEARCH',\n                toggleSwitchProperty: 'TOGGLE_ITEM_PROPERTY',\n                nextPage: 'NEXT_PAGE',\n                prevPage: 'PREV_PAGE',\n                removeItem: 'REMOVE_ITEM',\n            }),\n        },\n\n    }\n</script>"],"sourceRoot":"src/components/routing/sip-gateways"}]}