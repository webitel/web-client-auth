{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/lookups/communication-types/opened-communication-type.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/lookups/communication-types/opened-communication-type.vue","mtime":1578657456666},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport editComponentMixin from '@/mixins/editComponentMixin';\nimport { required } from 'vuelidate/lib/validators';\nimport { addCommunication, getCommunication, updateCommunication } from \"../../../api/lookups/communications/communications\";\nimport { mapActions, mapState } from \"vuex\";\nexport default {\n  name: \"opened-communications-type\",\n  mixins: [editComponentMixin],\n  data: function data() {\n    return {};\n  },\n  // by vuelidate\n  validations: {\n    itemInstance: {\n      code: {\n        required: required\n      },\n      name: {\n        required: required\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.id = this.$route.params.id;\n    this.loadItem();\n  },\n  computed: _objectSpread({}, mapState('lookups/communications', {\n    itemInstance: function itemInstance(state) {\n      return state.itemInstance;\n    }\n  }), {\n    id: {\n      get: function get() {\n        return this.$store.state.lookups.communications.itemId;\n      },\n      set: function set(value) {\n        this.setId(value);\n      }\n    },\n    code: {\n      get: function get() {\n        return this.$store.state.lookups.communications.itemInstance.code;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'code',\n          value: value\n        });\n      }\n    },\n    name: {\n      get: function get() {\n        return this.$store.state.lookups.communications.itemInstance.name;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'name',\n          value: value\n        });\n      }\n    },\n    description: {\n      get: function get() {\n        return this.$store.state.lookups.communications.itemInstance.description;\n      },\n      set: function set(value) {\n        this.setItemProp({\n          prop: 'description',\n          value: value\n        });\n      }\n    }\n  }),\n  methods: _objectSpread({}, mapActions('lookups/communications', {\n    setId: 'SET_ITEM_ID',\n    loadItem: 'LOAD_ITEM',\n    addItem: 'ADD_ITEM',\n    updateItem: 'UPDATE_ITEM',\n    setItemProp: 'SET_ITEM_PROPERTY'\n  }))\n};",{"version":3,"sources":["opened-communication-type.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,OAAA,kBAAA,MAAA,6BAAA;AAEA,SAAA,QAAA,QAAA,0BAAA;AACA,SACA,gBADA,EAEA,gBAFA,EAGA,mBAHA;AAKA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,4BADA;AAEA,EAAA,MAAA,EAAA,CAAA,kBAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA,EAAA;AAGA,GAPA;AASA;AACA,EAAA,WAAA,EAAA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA,OADA;AAIA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA;AAJA;AADA,GAVA;AAqBA,EAAA,OArBA,qBAqBA;AACA,SAAA,EAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,SAAA,QAAA;AACA,GAxBA;AA0BA,EAAA,QAAA,oBACA,QAAA,CAAA,wBAAA,EAAA;AACA,IAAA,YAAA,EAAA,sBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,YAAA;AAAA;AADA,GAAA,CADA;AAIA,IAAA,EAAA,EAAA;AACA,MAAA,GADA,iBACA;AAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,cAAA,CAAA,MAAA;AAAA,OADA;AAEA,MAAA,GAFA,eAEA,KAFA,EAEA;AAAA,aAAA,KAAA,CAAA,KAAA;AAAA;AAFA,KAJA;AAQA,IAAA,IAAA,EAAA;AACA,MAAA,GADA,iBACA;AAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,cAAA,CAAA,YAAA,CAAA,IAAA;AAAA,OADA;AAEA,MAAA,GAFA,eAEA,KAFA,EAEA;AAAA,aAAA,WAAA,CAAA;AAAA,UAAA,IAAA,EAAA,MAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AAAA;AAFA,KARA;AAYA,IAAA,IAAA,EAAA;AACA,MAAA,GADA,iBACA;AAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,cAAA,CAAA,YAAA,CAAA,IAAA;AAAA,OADA;AAEA,MAAA,GAFA,eAEA,KAFA,EAEA;AAAA,aAAA,WAAA,CAAA;AAAA,UAAA,IAAA,EAAA,MAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AAAA;AAFA,KAZA;AAgBA,IAAA,WAAA,EAAA;AACA,MAAA,GADA,iBACA;AAAA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,cAAA,CAAA,YAAA,CAAA,WAAA;AAAA,OADA;AAEA,MAAA,GAFA,eAEA,KAFA,EAEA;AAAA,aAAA,WAAA,CAAA;AAAA,UAAA,IAAA,EAAA,aAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AAAA;AAFA;AAhBA,IA1BA;AAgDA,EAAA,OAAA,oBACA,UAAA,CAAA,wBAAA,EAAA;AACA,IAAA,KAAA,EAAA,aADA;AAEA,IAAA,QAAA,EAAA,WAFA;AAGA,IAAA,OAAA,EAAA,UAHA;AAIA,IAAA,UAAA,EAAA,aAJA;AAKA,IAAA,WAAA,EAAA;AALA,GAAA,CADA;AAhDA,CAAA","sourcesContent":["<template>\n    <div class=\"content-wrap\">\n        <object-header\n                :primaryText=\"computePrimaryText\"\n                :primaryAction=\"save\"\n                :primaryDisabled=\"computeDisabled\"\n                close\n        >\n            {{$tc('objects.lookups.communications.communications', 1)}} |\n            {{computeTitle}}\n        </object-header>\n        <section class=\"object-content module-new\">\n            <header class=\"content-header\">\n                <h3 class=\"content-title\">{{$t('objects.generalInfo')}}</h3>\n            </header>\n\n            <form class=\"new_w50\">\n                <form-input\n                        v-model.trim=\"code\"\n                        :v=\"$v.itemInstance.code\"\n                        :label=\"$t('objects.lookups.communications.code')\"\n                        required\n                ></form-input>\n\n                <form-input\n                        v-model.trim=\"name\"\n                        :v=\"$v.itemInstance.name\"\n                        :label=\"$t('objects.name')\"\n                        required\n                ></form-input>\n\n                <form-input\n                        v-model=\"description\"\n                        :label=\"$t('objects.description')\"\n                        textarea\n                ></form-input>\n\n            </form>\n        </section>\n    </div>\n</template>\n\n<script>\n    import editComponentMixin from '@/mixins/editComponentMixin';\n\n    import {required} from 'vuelidate/lib/validators';\n    import {\n        addCommunication,\n        getCommunication,\n        updateCommunication\n    } from \"../../../api/lookups/communications/communications\";\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: \"opened-communications-type\",\n        mixins: [editComponentMixin],\n        data() {\n            return {\n\n            };\n        },\n\n        // by vuelidate\n        validations: {\n            itemInstance: {\n                code: {\n                    required\n                },\n                name: {\n                    required\n                }\n            }\n        },\n\n        mounted() {\n            this.id = this.$route.params.id;\n            this.loadItem();\n        },\n\n        computed: {\n            ...mapState('lookups/communications', {\n                itemInstance: state => state.itemInstance,\n            }),\n            id: {\n                get() {return this.$store.state.lookups.communications.itemId},\n                set(value) {this.setId(value)}\n            },\n            code: {\n                get() {return this.$store.state.lookups.communications.itemInstance.code},\n                set(value) {this.setItemProp({prop: 'code', value})}\n            },\n            name: {\n                get() {return this.$store.state.lookups.communications.itemInstance.name},\n                set(value) {this.setItemProp({prop: 'name', value})}\n            },\n            description: {\n                get() {return this.$store.state.lookups.communications.itemInstance.description},\n                set(value) {this.setItemProp({prop: 'description', value})}\n            },\n        },\n\n        methods: {\n            ...mapActions('lookups/communications', {\n                setId: 'SET_ITEM_ID',\n                loadItem: 'LOAD_ITEM',\n                addItem: 'ADD_ITEM',\n                updateItem: 'UPDATE_ITEM',\n                setItemProp: 'SET_ITEM_PROPERTY',\n            }),\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components/lookups/communication-types"}]}