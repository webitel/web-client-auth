{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dev/work/client-auth/src/components/contact-center/resource-groups/opened-resource-group-permissions-role-popup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dev/work/client-auth/src/components/contact-center/resource-groups/opened-resource-group-permissions-role-popup.vue","mtime":1579704812364},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _toConsumableArray from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport popup from \"../../utils/popup\";\nimport dropdownSelect from \"../../utils/dropdown-select\";\nimport { getRoleList } from \"../../../api/permissions/roles/roles\";\nimport { mapActions, mapState } from \"vuex\";\nexport default {\n  name: \"opened-resource-groups-permissions-role-popup\",\n  components: {\n    popup: popup,\n    dropdownSelect: dropdownSelect\n  },\n  data: function data() {\n    return {\n      newGrantee: '',\n      dropdownOptionsList: [] // list of all roles to add new. retrieves from roles GET request\n\n    };\n  },\n  mounted: function mounted() {\n    this.loadDropdownOptionsList();\n  },\n  computed: _objectSpread({}, mapState('ccenter/resGroups/permissions', {\n    dataList: function dataList(state) {\n      return state.dataList;\n    }\n  }), {\n    computeAvailableGrantees: function computeAvailableGrantees() {\n      var _this = this;\n\n      // filter available grantees:\n      return this.dropdownOptionsList.filter(function (grantee) {\n        return !_this.dataList.some(function (usedGrantee) {\n          return grantee.id === usedGrantee.grantee.id;\n        });\n      });\n    }\n  }),\n  methods: _objectSpread({\n    save: function () {\n      var _save = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.addRole(this.newGrantee);\n\n              case 3:\n                this.$emit('close');\n                _context.next = 8;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6]]);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }(),\n    // get all roles to choose which to add\n    loadDropdownOptionsList: function () {\n      var _loadDropdownOptionsList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(search) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getRoleList(10, search);\n\n              case 2:\n                response = _context2.sent;\n                this.dropdownOptionsList = _toConsumableArray(response);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadDropdownOptionsList(_x) {\n        return _loadDropdownOptionsList.apply(this, arguments);\n      }\n\n      return loadDropdownOptionsList;\n    }()\n  }, mapActions('ccenter/resGroups/permissions', {\n    addRole: 'ADD_ITEM_ROLE'\n  }))\n};",{"version":3,"sources":["opened-resource-group-permissions-role-popup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,OAAA,KAAA;AACA,OAAA,cAAA;AACA,SAAA,WAAA;AACA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,+CADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,KAAA,EAAA,KAAA;AAAA,IAAA,cAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,mBAAA,EAAA,EAFA,CAEA;;AAFA,KAAA;AAIA,GARA;AAUA,EAAA,OAVA,qBAUA;AACA,SAAA,uBAAA;AACA,GAZA;AAcA,EAAA,QAAA,oBACA,QAAA,CAAA,+BAAA,EAAA;AACA,IAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,QAAA;AAAA;AADA,GAAA,CADA;AAKA,IAAA,wBALA,sCAKA;AAAA;;AACA;AACA,aAAA,KAAA,mBAAA,CAAA,MAAA,CAAA,UAAA,OAAA,EAAA;AACA,eAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,WAAA,EAAA;AACA,iBAAA,OAAA,CAAA,EAAA,KAAA,WAAA,CAAA,OAAA,CAAA,EAAA;AACA,SAFA,CAAA;AAGA,OAJA,CAAA;AAKA;AAZA,IAdA;AA6BA,EAAA,OAAA;AACA,IAAA,IADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGA,KAAA,OAAA,CAAA,KAAA,UAAA,CAHA;;AAAA;AAIA,qBAAA,KAAA,CAAA,OAAA;AAJA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAQA;AACA,IAAA,uBATA;AAAA;AAAA;AAAA,gDASA,MATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAUA,WAAA,CAAA,EAAA,EAAA,MAAA,CAVA;;AAAA;AAUA,gBAAA,QAVA;AAWA,qBAAA,mBAAA,sBAAA,QAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,KAcA,UAAA,CAAA,+BAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAAA,CAdA;AA7BA,CAAA","sourcesContent":["<template>\n    <popup\n            :title=\"$t('objects.permissions.object.newPermissionRole')\"\n            :primaryText=\"$t('objects.add')\"\n            :primaryAction=\"save\"\n            @close=\"$emit('close')\"\n            overflow\n    >\n        <section>\n            <dropdown-select\n                v-model=\"newGrantee\"\n                :options=\"computeAvailableGrantees\"\n                :placeholder=\"$tc('objects.permissions.permissionsRole', 1)\"\n                @search=\"loadDropdownOptionsList\"\n            ></dropdown-select>\n        </section>\n    </popup>\n</template>\n\n<script>\n    import popup from '../../utils/popup';\n    import dropdownSelect from '../../utils/dropdown-select';\n    import {getRoleList} from \"../../../api/permissions/roles/roles\";\n    import {mapActions, mapState} from \"vuex\";\n\n    export default {\n        name: \"opened-resource-groups-permissions-role-popup\",\n        components: {popup, dropdownSelect},\n        data() {\n            return {\n                newGrantee: '',\n                dropdownOptionsList: [], // list of all roles to add new. retrieves from roles GET request\n            }\n        },\n\n        mounted() {\n            this.loadDropdownOptionsList();\n        },\n\n        computed: {\n            ...mapState('ccenter/resGroups/permissions', {\n                dataList: state => state.dataList,\n            }),\n\n            computeAvailableGrantees() {\n                // filter available grantees:\n                return this.dropdownOptionsList.filter(grantee => {\n                    return !this.dataList.some(usedGrantee => {\n                        return grantee.id === usedGrantee.grantee.id;\n                    });\n                });\n            }\n        },\n\n        methods: {\n            async save() {\n                try {\n                    await this.addRole(this.newGrantee);\n                    this.$emit('close');\n                } catch {}\n            },\n\n            // get all roles to choose which to add\n            async loadDropdownOptionsList(search) {\n                const response = await getRoleList(10, search);\n                this.dropdownOptionsList = [...response];\n            },\n\n            ...mapActions('ccenter/resGroups/permissions', {\n                addRole: 'ADD_ITEM_ROLE',\n            }),\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/components/contact-center/resource-groups"}]}