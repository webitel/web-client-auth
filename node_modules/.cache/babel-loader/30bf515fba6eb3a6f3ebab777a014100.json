{"remainingRequest":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js!/home/dev/work/client-auth/src/store/modules/contact-center/queues/queue-member-communications.js","dependencies":[{"path":"/home/dev/work/client-auth/src/store/modules/contact-center/queues/queue-member-communications.js","mtime":1578992384371},{"path":"/home/dev/work/client-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dev/work/client-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/dev/work/client-auth/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport proxy from \"../../../../utils/editProxy\";\nimport store from \"../../../store\";\n\nvar defaultState = function defaultState() {\n  return {\n    itemId: null,\n    itemInstance: {\n      destination: '555 3535',\n      display: '5656',\n      priority: 0,\n      type: {},\n      resource: {},\n      description: ''\n    }\n  };\n};\n\nvar state = _objectSpread({\n  dataList: []\n}, defaultState());\n\nvar getters = {};\nvar actions = {\n  GET_LIST: function () {\n    var _GET_LIST = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var defaultObject;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              defaultObject = {\n                _isSelected: false,\n                priority: 0\n              };\n              return _context.abrupt(\"return\", store.state.ccenter.queues.members.itemInstance.communications.map(function (item) {\n                return _objectSpread({}, defaultObject, {}, item);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function GET_LIST() {\n      return _GET_LIST.apply(this, arguments);\n    }\n\n    return GET_LIST;\n  }(),\n  GET_ITEM: function () {\n    var _GET_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", _objectSpread({}, store.state.ccenter.queues.members.itemInstance.communications[state.itemId], {\n                _dirty: false\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function GET_ITEM() {\n      return _GET_ITEM.apply(this, arguments);\n    }\n\n    return GET_ITEM;\n  }(),\n  POST_ITEM: function () {\n    var _POST_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(context) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return context.dispatch('ccenter/queues/members/ADD_COMMUNICATION_ITEM', state.itemInstance, {\n                root: true\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function POST_ITEM(_x) {\n      return _POST_ITEM.apply(this, arguments);\n    }\n\n    return POST_ITEM;\n  }(),\n  UPD_ITEM: function () {\n    var _UPD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(context) {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return context.dispatch('ccenter/queues/members/UPDATE_COMMUNICATION_ITEM', {\n                index: state.itemId,\n                item: state.itemInstance\n              }, {\n                root: true\n              });\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function UPD_ITEM(_x2) {\n      return _UPD_ITEM.apply(this, arguments);\n    }\n\n    return UPD_ITEM;\n  }(),\n  DELETE_ITEM: function () {\n    var _DELETE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(context, id) {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return context.dispatch('ccenter/queues/members/REMOVE_COMMUNICATION_ITEM', id, {\n                root: true\n              });\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function DELETE_ITEM(_x3, _x4) {\n      return _DELETE_ITEM.apply(this, arguments);\n    }\n\n    return DELETE_ITEM;\n  }(),\n  SET_ITEM_ID: function SET_ITEM_ID(context, id) {\n    if (id !== 'new') context.commit('SET_ITEM_ID', id);\n  },\n  LOAD_DATA_LIST: function () {\n    var _LOAD_DATA_LIST = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(context) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return context.dispatch('GET_LIST');\n\n            case 2:\n              response = _context6.sent;\n              context.dispatch('RESET_ITEM_STATE');\n              context.commit('SET_DATA_LIST', response);\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function LOAD_DATA_LIST(_x5) {\n      return _LOAD_DATA_LIST.apply(this, arguments);\n    }\n\n    return LOAD_DATA_LIST;\n  }(),\n  LOAD_ITEM: function () {\n    var _LOAD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(context) {\n      var item;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(typeof state.itemId === 'number')) {\n                _context7.next = 5;\n                break;\n              }\n\n              _context7.next = 3;\n              return context.dispatch('GET_ITEM');\n\n            case 3:\n              item = _context7.sent;\n              context.commit('SET_ITEM', proxy(item));\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function LOAD_ITEM(_x6) {\n      return _LOAD_ITEM.apply(this, arguments);\n    }\n\n    return LOAD_ITEM;\n  }(),\n  SET_ITEM_PROPERTY: function SET_ITEM_PROPERTY(context, payload) {\n    context.commit('SET_ITEM_PROPERTY', payload);\n  },\n  ADD_ITEM: function () {\n    var _ADD_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(context) {\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!(typeof state.itemId !== 'number')) {\n                _context8.next = 3;\n                break;\n              }\n\n              _context8.next = 3;\n              return context.dispatch('POST_ITEM');\n\n            case 3:\n              context.dispatch('LOAD_DATA_LIST');\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function ADD_ITEM(_x7) {\n      return _ADD_ITEM.apply(this, arguments);\n    }\n\n    return ADD_ITEM;\n  }(),\n  UPDATE_ITEM: function () {\n    var _UPDATE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(context) {\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (!state.itemInstance._dirty) {\n                _context9.next = 3;\n                break;\n              }\n\n              _context9.next = 3;\n              return context.dispatch('UPD_ITEM');\n\n            case 3:\n              context.dispatch('LOAD_DATA_LIST');\n\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function UPDATE_ITEM(_x8) {\n      return _UPDATE_ITEM.apply(this, arguments);\n    }\n\n    return UPDATE_ITEM;\n  }(),\n  REMOVE_ITEM: function () {\n    var _REMOVE_ITEM = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(context, index) {\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              context.commit('REMOVE_ITEM', index);\n              _context10.prev = 1;\n              _context10.next = 4;\n              return context.dispatch('DELETE_ITEM', index);\n\n            case 4:\n              _context10.next = 8;\n              break;\n\n            case 6:\n              _context10.prev = 6;\n              _context10.t0 = _context10[\"catch\"](1);\n\n            case 8:\n              context.dispatch('LOAD_DATA_LIST');\n\n            case 9:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 6]]);\n    }));\n\n    function REMOVE_ITEM(_x9, _x10) {\n      return _REMOVE_ITEM.apply(this, arguments);\n    }\n\n    return REMOVE_ITEM;\n  }(),\n  RESET_ITEM_STATE: function () {\n    var _RESET_ITEM_STATE = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee11(context) {\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              context.commit('RESET_ITEM_STATE');\n\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    function RESET_ITEM_STATE(_x11) {\n      return _RESET_ITEM_STATE.apply(this, arguments);\n    }\n\n    return RESET_ITEM_STATE;\n  }()\n};\nvar mutations = {\n  SET_ITEM_ID: function SET_ITEM_ID(state, id) {\n    state.itemId = id;\n  },\n  SET_DATA_LIST: function SET_DATA_LIST(state, list) {\n    state.dataList = list;\n  },\n  SET_ITEM_PROPERTY: function SET_ITEM_PROPERTY(state, _ref) {\n    var prop = _ref.prop,\n        value = _ref.value;\n    state.itemInstance[prop] = value;\n  },\n  SET_ITEM: function SET_ITEM(state, item) {\n    state.itemInstance = item;\n  },\n  REMOVE_ITEM: function REMOVE_ITEM(state, index) {\n    state.dataList.splice(index, 1);\n  },\n  RESET_ITEM_STATE: function RESET_ITEM_STATE(state) {\n    Object.assign(state, defaultState());\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/home/dev/work/client-auth/src/store/modules/contact-center/queues/queue-member-communications.js"],"names":["proxy","store","defaultState","itemId","itemInstance","destination","display","priority","type","resource","description","state","dataList","getters","actions","GET_LIST","defaultObject","_isSelected","ccenter","queues","members","communications","map","item","GET_ITEM","_dirty","POST_ITEM","context","dispatch","root","UPD_ITEM","index","DELETE_ITEM","id","SET_ITEM_ID","commit","LOAD_DATA_LIST","response","LOAD_ITEM","SET_ITEM_PROPERTY","payload","ADD_ITEM","UPDATE_ITEM","REMOVE_ITEM","RESET_ITEM_STATE","mutations","SET_DATA_LIST","list","prop","value","SET_ITEM","splice","Object","assign","namespaced"],"mappings":"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","sourcesContent":["import proxy from '../../../../utils/editProxy';\nimport store from '../../../store';\n\nconst defaultState = () => {\n    return {\n        itemId: null,\n        itemInstance: {\n            destination: '555 3535',\n            display: '5656',\n            priority: 0,\n            type: {},\n            resource: {},\n            description: '',\n        },\n    };\n};\n\nconst state = {\n    dataList: [],\n    ...defaultState()\n};\n\nconst getters = {};\n\nconst actions = {\n    GET_LIST: async () => {\n        const defaultObject = {\n            _isSelected: false,\n            priority: 0,\n        };\n\n        return store.state.ccenter.queues.members.itemInstance.communications.map(item => {\n            return {\n                ...defaultObject,\n                ...item,\n            }\n        });\n    },\n\n    GET_ITEM: async () => {\n        return {...store.state.ccenter.queues.members.itemInstance.communications[state.itemId], _dirty: false};\n    },\n\n    POST_ITEM: async (context) => {\n        await context.dispatch('ccenter/queues/members/ADD_COMMUNICATION_ITEM',\n            state.itemInstance, {root: true});\n    },\n\n    UPD_ITEM: async (context) => {\n        await context.dispatch('ccenter/queues/members/UPDATE_COMMUNICATION_ITEM',\n            {index: state.itemId, item: state.itemInstance}, {root: true});\n    },\n\n    DELETE_ITEM: async (context, id) => {\n        await context.dispatch('ccenter/queues/members/REMOVE_COMMUNICATION_ITEM',\n            id, {root: true});\n    },\n\n    SET_ITEM_ID: (context, id) => {\n        if (id !== 'new') context.commit('SET_ITEM_ID', id);\n    },\n\n    LOAD_DATA_LIST: async (context) => {\n        const response = await context.dispatch('GET_LIST');\n        context.dispatch('RESET_ITEM_STATE');\n        context.commit('SET_DATA_LIST', response);\n    },\n\n    LOAD_ITEM: async (context) => {\n        if (typeof state.itemId === 'number') {\n            const item = await context.dispatch('GET_ITEM');\n            context.commit('SET_ITEM', proxy(item));\n        }\n    },\n\n    SET_ITEM_PROPERTY: (context, payload) => {\n        context.commit('SET_ITEM_PROPERTY', payload);\n    },\n\n    ADD_ITEM: async (context) => {\n        if (typeof state.itemId !== 'number') {\n            await context.dispatch('POST_ITEM');\n        }\n        context.dispatch('LOAD_DATA_LIST');\n    },\n\n    UPDATE_ITEM: async (context) => {\n        if (state.itemInstance._dirty) {\n            await context.dispatch('UPD_ITEM');\n        }\n        context.dispatch('LOAD_DATA_LIST');\n    },\n\n    REMOVE_ITEM: async (context, index) => {\n        context.commit('REMOVE_ITEM', index);\n        try {\n            await context.dispatch('DELETE_ITEM', index);\n        } catch {\n        }\n        context.dispatch('LOAD_DATA_LIST');\n    },\n\n    RESET_ITEM_STATE: async (context) => {\n        context.commit('RESET_ITEM_STATE');\n    },\n};\n\nconst mutations = {\n    SET_ITEM_ID: (state, id) => {\n        state.itemId = id;\n    },\n\n    SET_DATA_LIST: (state, list) => {\n        state.dataList = list;\n    },\n\n    SET_ITEM_PROPERTY: (state, {prop, value}) => {\n        state.itemInstance[prop] = value;\n    },\n\n    SET_ITEM: (state, item) => {\n        state.itemInstance = item;\n    },\n\n    REMOVE_ITEM: (state, index) => {\n        state.dataList.splice(index, 1);\n    },\n\n    RESET_ITEM_STATE: (state) => {\n        Object.assign(state, defaultState());\n    },\n};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations,\n};\n"]}]}