{"version":3,"file":"index.umd.js","sources":["../../src/api/base.ts","../../src/api/api.ts","../../src/api/configuration.ts","../../src/api/index.ts","../../src/socket/call.ts","../../src/socket/log.ts","../../src/socket/sip.ts","../../src/socket/utils.ts","../../src/socket/socket.ts","../../src/socket/client.ts"],"sourcesContent":["// tslint:disable\n/// <reference path=\"./custom.d.ts\" />\n/**\n * Webitel engine API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2019.0.0\n * Contact: support@webitel.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Configuration } from './configuration'\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios'\n\nexport const BASE_PATH = 'http://dev.webitel.com'.replace(/\\/+$/, '')\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n  csv: ',',\n  ssv: ' ',\n  tsv: '\\t',\n  pipes: '|',\n}\n\n/**\n *\n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n  url: string\n  options: any\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n  protected configuration: Configuration | undefined\n\n  constructor(\n    configuration?: Configuration,\n    protected basePath: string = BASE_PATH,\n    protected axios: AxiosInstance = globalAxios\n  ) {\n    if (configuration) {\n      this.configuration = configuration\n      this.basePath = configuration.basePath || this.basePath\n    }\n  }\n}\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n  name: 'RequiredError' = 'RequiredError'\n  constructor(public field: string, msg?: string) {\n    super(msg)\n  }\n}\n","// tslint:disable\n/// <reference path=\"./custom.d.ts\" />\n/**\n * Webitel engine API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2019.0.0\n * Contact: support@webitel.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as globalImportUrl from 'url'\nimport { Configuration } from './configuration'\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios'\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  BASE_PATH,\n  COLLECTION_FORMATS,\n  RequestArgs,\n  BaseAPI,\n  RequiredError,\n} from './base'\n\n/**\n *\n * @export\n * @interface EngineAcceptOfDay\n */\nexport interface EngineAcceptOfDay {\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAcceptOfDay\n   */\n  day?: number\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineAcceptOfDay\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAcceptOfDay\n   */\n  end_time_of_day?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAcceptOfDay\n   */\n  start_time_of_day?: number\n}\n/**\n *\n * @export\n * @interface EngineAgent\n */\nexport interface EngineAgent {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgent\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgent\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgent\n   */\n  last_state_change?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgent\n   */\n  state?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgent\n   */\n  state_timeout?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgent\n   */\n  status?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineAgent\n   */\n  user?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineAgentInQueue\n */\nexport interface EngineAgentInQueue {\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAgentInQueue\n   */\n  active_member?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAgentInQueue\n   */\n  count_member?: number\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineAgentInQueue\n   */\n  enabled?: boolean\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAgentInQueue\n   */\n  priority?: number\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineAgentInQueue\n   */\n  queue?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentInQueue\n   */\n  strategy?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAgentInQueue\n   */\n  type?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAgentInQueue\n   */\n  waiting_member?: number\n}\n/**\n *\n * @export\n * @interface EngineAgentInTeam\n */\nexport interface EngineAgentInTeam {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentInTeam\n   */\n  strategy?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineAgentInTeam\n   */\n  team?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineAgentSkill\n */\nexport interface EngineAgentSkill {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineAgentSkill\n   */\n  agent?: EngineLookup\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAgentSkill\n   */\n  capacity?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentSkill\n   */\n  created_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineAgentSkill\n   */\n  created_by?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentSkill\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentSkill\n   */\n  id?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineAgentSkill\n   */\n  skill?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentSkill\n   */\n  updated_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineAgentSkill\n   */\n  updated_by?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineAgentSkillItem\n */\nexport interface EngineAgentSkillItem {\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAgentSkillItem\n   */\n  capacity?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentSkillItem\n   */\n  id?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineAgentSkillItem\n   */\n  skill?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineAgentState\n */\nexport interface EngineAgentState {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentState\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentState\n   */\n  joined_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineAgentState\n   */\n  queue?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentState\n   */\n  state?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentState\n   */\n  timeout_at?: string\n}\n/**\n *\n * @export\n * @interface EngineAgentStatusRequest\n */\nexport interface EngineAgentStatusRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentStatusRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentStatusRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentStatusRequest\n   */\n  status?: string\n}\n/**\n *\n * @export\n * @interface EngineAgentTeam\n */\nexport interface EngineAgentTeam {\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAgentTeam\n   */\n  busy_delay_time?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAgentTeam\n   */\n  call_timeout?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentTeam\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentTeam\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentTeam\n   */\n  id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAgentTeam\n   */\n  max_no_answer?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentTeam\n   */\n  name?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAgentTeam\n   */\n  no_answer_delay_time?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAgentTeam\n   */\n  reject_delay_time?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentTeam\n   */\n  strategy?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineAgentTeam\n   */\n  updated_at?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineAgentTeam\n   */\n  wrap_up_time?: number\n}\n/**\n *\n * @export\n * @interface EngineBucket\n */\nexport interface EngineBucket {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineBucket\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineBucket\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineBucket\n   */\n  name?: string\n}\n/**\n *\n * @export\n * @interface EngineCalendar\n */\nexport interface EngineCalendar {\n  /**\n   *\n   * @type {Array<EngineAcceptOfDay>}\n   * @memberof EngineCalendar\n   */\n  accepts?: Array<EngineAcceptOfDay>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCalendar\n   */\n  created_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCalendar\n   */\n  created_by?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCalendar\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCalendar\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCalendar\n   */\n  end_at?: string\n  /**\n   *\n   * @type {Array<EngineExceptDate>}\n   * @memberof EngineCalendar\n   */\n  excepts?: Array<EngineExceptDate>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCalendar\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCalendar\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCalendar\n   */\n  start_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCalendar\n   */\n  timezone?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCalendar\n   */\n  updated_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCalendar\n   */\n  updated_by?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineCommunicationType\n */\nexport interface EngineCommunicationType {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCommunicationType\n   */\n  code?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCommunicationType\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCommunicationType\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCommunicationType\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCommunicationType\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCommunicationType\n   */\n  type?: string\n}\n/**\n *\n * @export\n * @interface EngineCommunicationTypeRequest\n */\nexport interface EngineCommunicationTypeRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCommunicationTypeRequest\n   */\n  code?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCommunicationTypeRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCommunicationTypeRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCommunicationTypeRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCommunicationTypeRequest\n   */\n  type?: string\n}\n/**\n *\n * @export\n * @interface EngineCreateAgentRequest\n */\nexport interface EngineCreateAgentRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateAgentRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateAgentRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateAgentRequest\n   */\n  user?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineCreateAgentSkillRequest\n */\nexport interface EngineCreateAgentSkillRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateAgentSkillRequest\n   */\n  agent_id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateAgentSkillRequest\n   */\n  capacity?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateAgentSkillRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateAgentSkillRequest\n   */\n  skill?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineCreateAgentTeamRequest\n */\nexport interface EngineCreateAgentTeamRequest {\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateAgentTeamRequest\n   */\n  busy_delay_time?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateAgentTeamRequest\n   */\n  call_timeout?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateAgentTeamRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateAgentTeamRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateAgentTeamRequest\n   */\n  max_no_answer?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateAgentTeamRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateAgentTeamRequest\n   */\n  no_answer_delay_time?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateAgentTeamRequest\n   */\n  reject_delay_time?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateAgentTeamRequest\n   */\n  strategy?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateAgentTeamRequest\n   */\n  wrap_up_time?: number\n}\n/**\n *\n * @export\n * @interface EngineCreateBucketRequest\n */\nexport interface EngineCreateBucketRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateBucketRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateBucketRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateBucketRequest\n   */\n  name?: string\n}\n/**\n *\n * @export\n * @interface EngineCreateCalendarRequest\n */\nexport interface EngineCreateCalendarRequest {\n  /**\n   *\n   * @type {Array<EngineAcceptOfDay>}\n   * @memberof EngineCreateCalendarRequest\n   */\n  accepts?: Array<EngineAcceptOfDay>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateCalendarRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateCalendarRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateCalendarRequest\n   */\n  end_at?: string\n  /**\n   *\n   * @type {Array<EngineExceptDate>}\n   * @memberof EngineCreateCalendarRequest\n   */\n  excepts?: Array<EngineExceptDate>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateCalendarRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateCalendarRequest\n   */\n  start_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateCalendarRequest\n   */\n  timezone?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineCreateListCommunicationRequest\n */\nexport interface EngineCreateListCommunicationRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateListCommunicationRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateListCommunicationRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateListCommunicationRequest\n   */\n  list_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateListCommunicationRequest\n   */\n  number?: string\n}\n/**\n *\n * @export\n * @interface EngineCreateListRequest\n */\nexport interface EngineCreateListRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateListRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateListRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateListRequest\n   */\n  name?: string\n}\n/**\n *\n * @export\n * @interface EngineCreateMemberBulkItem\n */\nexport interface EngineCreateMemberBulkItem {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateMemberBulkItem\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {Array<EngineMemberCommunicationCreateRequest>}\n   * @memberof EngineCreateMemberBulkItem\n   */\n  communications?: Array<EngineMemberCommunicationCreateRequest>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateMemberBulkItem\n   */\n  expire_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateMemberBulkItem\n   */\n  min_offering_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateMemberBulkItem\n   */\n  name?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateMemberBulkItem\n   */\n  priority?: number\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EngineCreateMemberBulkItem\n   */\n  skills?: Array<string>\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateMemberBulkItem\n   */\n  timezone?: EngineLookup\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof EngineCreateMemberBulkItem\n   */\n  variables?: { [key: string]: string }\n}\n/**\n *\n * @export\n * @interface EngineCreateMemberBulkRequest\n */\nexport interface EngineCreateMemberBulkRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateMemberBulkRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {Array<EngineCreateMemberBulkItem>}\n   * @memberof EngineCreateMemberBulkRequest\n   */\n  items?: Array<EngineCreateMemberBulkItem>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateMemberBulkRequest\n   */\n  queue_id?: string\n}\n/**\n *\n * @export\n * @interface EngineCreateMemberRequest\n */\nexport interface EngineCreateMemberRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateMemberRequest\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {Array<EngineMemberCommunicationCreateRequest>}\n   * @memberof EngineCreateMemberRequest\n   */\n  communications?: Array<EngineMemberCommunicationCreateRequest>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateMemberRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateMemberRequest\n   */\n  expire_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateMemberRequest\n   */\n  min_offering_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateMemberRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateMemberRequest\n   */\n  priority?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateMemberRequest\n   */\n  queue_id?: string\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EngineCreateMemberRequest\n   */\n  skills?: Array<string>\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateMemberRequest\n   */\n  timezone?: EngineLookup\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof EngineCreateMemberRequest\n   */\n  variables?: { [key: string]: string }\n}\n/**\n *\n * @export\n * @interface EngineCreateOutboundResourceDisplayRequest\n */\nexport interface EngineCreateOutboundResourceDisplayRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateOutboundResourceDisplayRequest\n   */\n  display?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateOutboundResourceDisplayRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateOutboundResourceDisplayRequest\n   */\n  resource_id?: string\n}\n/**\n *\n * @export\n * @interface EngineCreateOutboundResourceGroupRequest\n */\nexport interface EngineCreateOutboundResourceGroupRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateOutboundResourceGroupRequest\n   */\n  communication?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateOutboundResourceGroupRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateOutboundResourceGroupRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateOutboundResourceGroupRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateOutboundResourceGroupRequest\n   */\n  strategy?: string\n  /**\n   *\n   * @type {Array<EngineOutboundResourceTimeRange>}\n   * @memberof EngineCreateOutboundResourceGroupRequest\n   */\n  time?: Array<EngineOutboundResourceTimeRange>\n}\n/**\n *\n * @export\n * @interface EngineCreateOutboundResourceInGroupRequest\n */\nexport interface EngineCreateOutboundResourceInGroupRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateOutboundResourceInGroupRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateOutboundResourceInGroupRequest\n   */\n  group_id?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateOutboundResourceInGroupRequest\n   */\n  resource?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineCreateOutboundResourceRequest\n */\nexport interface EngineCreateOutboundResourceRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateOutboundResourceRequest\n   */\n  dial_string?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateOutboundResourceRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineCreateOutboundResourceRequest\n   */\n  enabled?: boolean\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EngineCreateOutboundResourceRequest\n   */\n  error_ids?: Array<string>\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateOutboundResourceRequest\n   */\n  gateway?: EngineLookup\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateOutboundResourceRequest\n   */\n  limit?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateOutboundResourceRequest\n   */\n  max_successively_errors?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateOutboundResourceRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateOutboundResourceRequest\n   */\n  number?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineCreateOutboundResourceRequest\n   */\n  reserve?: boolean\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateOutboundResourceRequest\n   */\n  rps?: number\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof EngineCreateOutboundResourceRequest\n   */\n  variables?: { [key: string]: string }\n}\n/**\n *\n * @export\n * @interface EngineCreateQueueBucketRequest\n */\nexport interface EngineCreateQueueBucketRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateQueueBucketRequest\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateQueueBucketRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateQueueBucketRequest\n   */\n  queue_id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateQueueBucketRequest\n   */\n  ratio?: number\n}\n/**\n *\n * @export\n * @interface EngineCreateQueueRequest\n */\nexport interface EngineCreateQueueRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateQueueRequest\n   */\n  calendar?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateQueueRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateQueueRequest\n   */\n  dnc_list?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateQueueRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineCreateQueueRequest\n   */\n  enabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateQueueRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {object}\n   * @memberof EngineCreateQueueRequest\n   */\n  payload?: object\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateQueueRequest\n   */\n  priority?: number\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateQueueRequest\n   */\n  schema?: EngineLookup\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateQueueRequest\n   */\n  sec_locate_agent?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateQueueRequest\n   */\n  strategy?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateQueueRequest\n   */\n  team?: EngineLookup\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateQueueRequest\n   */\n  timeout?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateQueueRequest\n   */\n  type?: number\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof EngineCreateQueueRequest\n   */\n  variables?: { [key: string]: string }\n}\n/**\n *\n * @export\n * @interface EngineCreateQueueResourceGroupRequest\n */\nexport interface EngineCreateQueueResourceGroupRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateQueueResourceGroupRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateQueueResourceGroupRequest\n   */\n  queue_id?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateQueueResourceGroupRequest\n   */\n  resource_group?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineCreateQueueRoutingRequest\n */\nexport interface EngineCreateQueueRoutingRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineCreateQueueRoutingRequest\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateQueueRoutingRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateQueueRoutingRequest\n   */\n  pattern?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateQueueRoutingRequest\n   */\n  priority?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateQueueRoutingRequest\n   */\n  queue_id?: string\n}\n/**\n *\n * @export\n * @interface EngineCreateResourceTeamAgentRequest\n */\nexport interface EngineCreateResourceTeamAgentRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateResourceTeamAgentRequest\n   */\n  agent?: EngineLookup\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateResourceTeamAgentRequest\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateResourceTeamAgentRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateResourceTeamAgentRequest\n   */\n  lvl?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateResourceTeamAgentRequest\n   */\n  team_id?: string\n}\n/**\n *\n * @export\n * @interface EngineCreateResourceTeamSkillRequest\n */\nexport interface EngineCreateResourceTeamSkillRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateResourceTeamSkillRequest\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateResourceTeamSkillRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateResourceTeamSkillRequest\n   */\n  lvl?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateResourceTeamSkillRequest\n   */\n  max_capacity?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateResourceTeamSkillRequest\n   */\n  min_capacity?: number\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateResourceTeamSkillRequest\n   */\n  skill?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateResourceTeamSkillRequest\n   */\n  team_id?: string\n}\n/**\n *\n * @export\n * @interface EngineCreateRoutingOutboundCallRequest\n */\nexport interface EngineCreateRoutingOutboundCallRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateRoutingOutboundCallRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineCreateRoutingOutboundCallRequest\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateRoutingOutboundCallRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateRoutingOutboundCallRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateRoutingOutboundCallRequest\n   */\n  pattern?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateRoutingOutboundCallRequest\n   */\n  schema?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineCreateRoutingSchemaRequest\n */\nexport interface EngineCreateRoutingSchemaRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineCreateRoutingSchemaRequest\n   */\n  debug?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateRoutingSchemaRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateRoutingSchemaRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateRoutingSchemaRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {object}\n   * @memberof EngineCreateRoutingSchemaRequest\n   */\n  payload?: object\n  /**\n   *\n   * @type {object}\n   * @memberof EngineCreateRoutingSchemaRequest\n   */\n  schema?: object\n  /**\n   *\n   * @type {number}\n   * @memberof EngineCreateRoutingSchemaRequest\n   */\n  type?: number\n}\n/**\n *\n * @export\n * @interface EngineCreateRoutingVariableRequest\n */\nexport interface EngineCreateRoutingVariableRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateRoutingVariableRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateRoutingVariableRequest\n   */\n  key?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateRoutingVariableRequest\n   */\n  value?: string\n}\n/**\n *\n * @export\n * @interface EngineCreateSkillRequest\n */\nexport interface EngineCreateSkillRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateSkillRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateSkillRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateSkillRequest\n   */\n  name?: string\n}\n/**\n *\n * @export\n * @interface EngineCreateSupervisorInTeamRequest\n */\nexport interface EngineCreateSupervisorInTeamRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineCreateSupervisorInTeamRequest\n   */\n  agent?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateSupervisorInTeamRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineCreateSupervisorInTeamRequest\n   */\n  team_id?: string\n}\n/**\n *\n * @export\n * @interface EngineDeleteMembersRequest\n */\nexport interface EngineDeleteMembersRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineDeleteMembersRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EngineDeleteMembersRequest\n   */\n  ids?: Array<string>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineDeleteMembersRequest\n   */\n  queue_id?: string\n}\n/**\n *\n * @export\n * @interface EngineExceptDate\n */\nexport interface EngineExceptDate {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineExceptDate\n   */\n  date?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineExceptDate\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineExceptDate\n   */\n  name?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineExceptDate\n   */\n  repeat?: boolean\n}\n/**\n *\n * @export\n * @interface EngineList\n */\nexport interface EngineList {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineList\n   */\n  created_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineList\n   */\n  created_by?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineList\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineList\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineList\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineList\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineList\n   */\n  updated_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineList\n   */\n  updated_by?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineListAgent\n */\nexport interface EngineListAgent {\n  /**\n   *\n   * @type {Array<EngineAgent>}\n   * @memberof EngineListAgent\n   */\n  items?: Array<EngineAgent>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListAgent\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineListAgentInQueue\n */\nexport interface EngineListAgentInQueue {\n  /**\n   *\n   * @type {Array<EngineAgentInQueue>}\n   * @memberof EngineListAgentInQueue\n   */\n  items?: Array<EngineAgentInQueue>\n}\n/**\n *\n * @export\n * @interface EngineListAgentInTeam\n */\nexport interface EngineListAgentInTeam {\n  /**\n   *\n   * @type {Array<EngineAgentInTeam>}\n   * @memberof EngineListAgentInTeam\n   */\n  items?: Array<EngineAgentInTeam>\n}\n/**\n *\n * @export\n * @interface EngineListAgentSkill\n */\nexport interface EngineListAgentSkill {\n  /**\n   *\n   * @type {Array<EngineAgentSkillItem>}\n   * @memberof EngineListAgentSkill\n   */\n  items?: Array<EngineAgentSkillItem>\n}\n/**\n *\n * @export\n * @interface EngineListAgentStateHistory\n */\nexport interface EngineListAgentStateHistory {\n  /**\n   *\n   * @type {Array<EngineAgentState>}\n   * @memberof EngineListAgentStateHistory\n   */\n  items?: Array<EngineAgentState>\n}\n/**\n *\n * @export\n * @interface EngineListAgentTeam\n */\nexport interface EngineListAgentTeam {\n  /**\n   *\n   * @type {Array<EngineAgentTeam>}\n   * @memberof EngineListAgentTeam\n   */\n  items?: Array<EngineAgentTeam>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListAgentTeam\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineListBucket\n */\nexport interface EngineListBucket {\n  /**\n   *\n   * @type {Array<EngineBucket>}\n   * @memberof EngineListBucket\n   */\n  items?: Array<EngineBucket>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListBucket\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineListCalendar\n */\nexport interface EngineListCalendar {\n  /**\n   *\n   * @type {Array<EngineCalendar>}\n   * @memberof EngineListCalendar\n   */\n  items?: Array<EngineCalendar>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListCalendar\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineListCommunication\n */\nexport interface EngineListCommunication {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineListCommunication\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineListCommunication\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineListCommunication\n   */\n  list_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineListCommunication\n   */\n  number?: string\n}\n/**\n *\n * @export\n * @interface EngineListCommunicationType\n */\nexport interface EngineListCommunicationType {\n  /**\n   *\n   * @type {Array<EngineCommunicationType>}\n   * @memberof EngineListCommunicationType\n   */\n  items?: Array<EngineCommunicationType>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListCommunicationType\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineListMember\n */\nexport interface EngineListMember {\n  /**\n   *\n   * @type {Array<EngineMember>}\n   * @memberof EngineListMember\n   */\n  items?: Array<EngineMember>\n}\n/**\n *\n * @export\n * @interface EngineListMemberAttempt\n */\nexport interface EngineListMemberAttempt {\n  /**\n   *\n   * @type {Array<EngineMemberAttempt>}\n   * @memberof EngineListMemberAttempt\n   */\n  items?: Array<EngineMemberAttempt>\n}\n/**\n *\n * @export\n * @interface EngineListOfList\n */\nexport interface EngineListOfList {\n  /**\n   *\n   * @type {Array<EngineList>}\n   * @memberof EngineListOfList\n   */\n  items?: Array<EngineList>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListOfList\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineListOfListCommunication\n */\nexport interface EngineListOfListCommunication {\n  /**\n   *\n   * @type {Array<EngineListCommunication>}\n   * @memberof EngineListOfListCommunication\n   */\n  items?: Array<EngineListCommunication>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListOfListCommunication\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineListOutboundResource\n */\nexport interface EngineListOutboundResource {\n  /**\n   *\n   * @type {Array<EngineOutboundResource>}\n   * @memberof EngineListOutboundResource\n   */\n  items?: Array<EngineOutboundResource>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListOutboundResource\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineListOutboundResourceDisplay\n */\nexport interface EngineListOutboundResourceDisplay {\n  /**\n   *\n   * @type {Array<EngineResourceDisplay>}\n   * @memberof EngineListOutboundResourceDisplay\n   */\n  items?: Array<EngineResourceDisplay>\n}\n/**\n *\n * @export\n * @interface EngineListOutboundResourceGroup\n */\nexport interface EngineListOutboundResourceGroup {\n  /**\n   *\n   * @type {Array<EngineOutboundResourceViewGroup>}\n   * @memberof EngineListOutboundResourceGroup\n   */\n  items?: Array<EngineOutboundResourceViewGroup>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListOutboundResourceGroup\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineListOutboundResourceInGroup\n */\nexport interface EngineListOutboundResourceInGroup {\n  /**\n   *\n   * @type {Array<EngineOutboundResourceInGroup>}\n   * @memberof EngineListOutboundResourceInGroup\n   */\n  items?: Array<EngineOutboundResourceInGroup>\n}\n/**\n *\n * @export\n * @interface EngineListQueue\n */\nexport interface EngineListQueue {\n  /**\n   *\n   * @type {Array<EngineQueue>}\n   * @memberof EngineListQueue\n   */\n  items?: Array<EngineQueue>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListQueue\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineListQueueBucket\n */\nexport interface EngineListQueueBucket {\n  /**\n   *\n   * @type {Array<EngineQueueBucket>}\n   * @memberof EngineListQueueBucket\n   */\n  items?: Array<EngineQueueBucket>\n}\n/**\n *\n * @export\n * @interface EngineListQueueResourceGroup\n */\nexport interface EngineListQueueResourceGroup {\n  /**\n   *\n   * @type {Array<EngineQueueResourceGroup>}\n   * @memberof EngineListQueueResourceGroup\n   */\n  items?: Array<EngineQueueResourceGroup>\n}\n/**\n *\n * @export\n * @interface EngineListQueueRouting\n */\nexport interface EngineListQueueRouting {\n  /**\n   *\n   * @type {Array<EngineQueueRouting>}\n   * @memberof EngineListQueueRouting\n   */\n  items?: Array<EngineQueueRouting>\n}\n/**\n *\n * @export\n * @interface EngineListResourceTeamAgent\n */\nexport interface EngineListResourceTeamAgent {\n  /**\n   *\n   * @type {Array<EngineResourceTeamAgent>}\n   * @memberof EngineListResourceTeamAgent\n   */\n  items?: Array<EngineResourceTeamAgent>\n}\n/**\n *\n * @export\n * @interface EngineListResourceTeamSkill\n */\nexport interface EngineListResourceTeamSkill {\n  /**\n   *\n   * @type {Array<EngineResourceTeamSkill>}\n   * @memberof EngineListResourceTeamSkill\n   */\n  items?: Array<EngineResourceTeamSkill>\n}\n/**\n *\n * @export\n * @interface EngineListRoutingOutboundCall\n */\nexport interface EngineListRoutingOutboundCall {\n  /**\n   *\n   * @type {Array<EngineRoutingOutboundCallCompact>}\n   * @memberof EngineListRoutingOutboundCall\n   */\n  items?: Array<EngineRoutingOutboundCallCompact>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListRoutingOutboundCall\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineListRoutingSchema\n */\nexport interface EngineListRoutingSchema {\n  /**\n   *\n   * @type {Array<EngineRoutingSchema>}\n   * @memberof EngineListRoutingSchema\n   */\n  items?: Array<EngineRoutingSchema>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListRoutingSchema\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineListRoutingVariable\n */\nexport interface EngineListRoutingVariable {\n  /**\n   *\n   * @type {Array<EngineRoutingVariable>}\n   * @memberof EngineListRoutingVariable\n   */\n  items?: Array<EngineRoutingVariable>\n}\n/**\n *\n * @export\n * @interface EngineListSkill\n */\nexport interface EngineListSkill {\n  /**\n   *\n   * @type {Array<EngineSkill>}\n   * @memberof EngineListSkill\n   */\n  items?: Array<EngineSkill>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListSkill\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineListSupervisorInTeam\n */\nexport interface EngineListSupervisorInTeam {\n  /**\n   *\n   * @type {Array<EngineSupervisorInTeam>}\n   * @memberof EngineListSupervisorInTeam\n   */\n  items?: Array<EngineSupervisorInTeam>\n}\n/**\n *\n * @export\n * @interface EngineListTimezoneResponse\n */\nexport interface EngineListTimezoneResponse {\n  /**\n   *\n   * @type {Array<EngineTimezone>}\n   * @memberof EngineListTimezoneResponse\n   */\n  items?: Array<EngineTimezone>\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineListTimezoneResponse\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface EngineLookup\n */\nexport interface EngineLookup {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineLookup\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineLookup\n   */\n  name?: string\n}\n/**\n *\n * @export\n * @interface EngineMember\n */\nexport interface EngineMember {\n  /**\n   *\n   * @type {number}\n   * @memberof EngineMember\n   */\n  attempts?: number\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineMember\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {Array<EngineMemberCommunication>}\n   * @memberof EngineMember\n   */\n  communications?: Array<EngineMemberCommunication>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMember\n   */\n  created_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMember\n   */\n  expire_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMember\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMember\n   */\n  last_activity_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMember\n   */\n  min_offering_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMember\n   */\n  name?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineMember\n   */\n  priority?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMember\n   */\n  queue_id?: string\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EngineMember\n   */\n  skills?: Array<string>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMember\n   */\n  stop_cause?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineMember\n   */\n  timezone?: EngineLookup\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof EngineMember\n   */\n  variables?: { [key: string]: string }\n}\n/**\n *\n * @export\n * @interface EngineMemberAttempt\n */\nexport interface EngineMemberAttempt {\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineMemberAttempt\n   */\n  active?: boolean\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineMemberAttempt\n   */\n  agent?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberAttempt\n   */\n  answered_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberAttempt\n   */\n  bridged_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineMemberAttempt\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberAttempt\n   */\n  created_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberAttempt\n   */\n  destination?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberAttempt\n   */\n  hangup_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberAttempt\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberAttempt\n   */\n  leg_a_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberAttempt\n   */\n  leg_b_id?: string\n  /**\n   *\n   * @type {object}\n   * @memberof EngineMemberAttempt\n   */\n  logs?: object\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberAttempt\n   */\n  node?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberAttempt\n   */\n  originate_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineMemberAttempt\n   */\n  resource?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberAttempt\n   */\n  result?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineMemberAttempt\n   */\n  success?: boolean\n  /**\n   *\n   * @type {number}\n   * @memberof EngineMemberAttempt\n   */\n  weight?: number\n}\n/**\n *\n * @export\n * @interface EngineMemberBulkResponse\n */\nexport interface EngineMemberBulkResponse {\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EngineMemberBulkResponse\n   */\n  ids?: Array<string>\n}\n/**\n *\n * @export\n * @interface EngineMemberCommunication\n */\nexport interface EngineMemberCommunication {\n  /**\n   *\n   * @type {number}\n   * @memberof EngineMemberCommunication\n   */\n  attempts?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberCommunication\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberCommunication\n   */\n  destination?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberCommunication\n   */\n  display?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberCommunication\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberCommunication\n   */\n  last_activity_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberCommunication\n   */\n  last_cause?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineMemberCommunication\n   */\n  priority?: number\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineMemberCommunication\n   */\n  resource?: EngineLookup\n  /**\n   *\n   * @type {number}\n   * @memberof EngineMemberCommunication\n   */\n  state?: number\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineMemberCommunication\n   */\n  type?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineMemberCommunicationCreateRequest\n */\nexport interface EngineMemberCommunicationCreateRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberCommunicationCreateRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberCommunicationCreateRequest\n   */\n  destination?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMemberCommunicationCreateRequest\n   */\n  display?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineMemberCommunicationCreateRequest\n   */\n  priority?: number\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineMemberCommunicationCreateRequest\n   */\n  resource?: EngineLookup\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineMemberCommunicationCreateRequest\n   */\n  type?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineMovePositionRoutingOutboundCallRequest\n */\nexport interface EngineMovePositionRoutingOutboundCallRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMovePositionRoutingOutboundCallRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMovePositionRoutingOutboundCallRequest\n   */\n  from_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineMovePositionRoutingOutboundCallRequest\n   */\n  to_id?: string\n}\n/**\n *\n * @export\n * @interface EngineMovePositionRoutingOutboundCallResponse\n */\nexport interface EngineMovePositionRoutingOutboundCallResponse {\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineMovePositionRoutingOutboundCallResponse\n   */\n  success?: boolean\n}\n/**\n *\n * @export\n * @interface EngineOutboundResource\n */\nexport interface EngineOutboundResource {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResource\n   */\n  created_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineOutboundResource\n   */\n  created_by?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResource\n   */\n  dial_string?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResource\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineOutboundResource\n   */\n  enabled?: boolean\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EngineOutboundResource\n   */\n  error_ids?: Array<string>\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineOutboundResource\n   */\n  gateway?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResource\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResource\n   */\n  last_error_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResource\n   */\n  last_error_id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineOutboundResource\n   */\n  limit?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineOutboundResource\n   */\n  max_successively_errors?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResource\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResource\n   */\n  number?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineOutboundResource\n   */\n  reserve?: boolean\n  /**\n   *\n   * @type {number}\n   * @memberof EngineOutboundResource\n   */\n  rps?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineOutboundResource\n   */\n  successively_errors?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResource\n   */\n  updated_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineOutboundResource\n   */\n  updated_by?: EngineLookup\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof EngineOutboundResource\n   */\n  variables?: { [key: string]: string }\n}\n/**\n *\n * @export\n * @interface EngineOutboundResourceGroup\n */\nexport interface EngineOutboundResourceGroup {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineOutboundResourceGroup\n   */\n  communication?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResourceGroup\n   */\n  created_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineOutboundResourceGroup\n   */\n  created_by?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResourceGroup\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResourceGroup\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResourceGroup\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResourceGroup\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResourceGroup\n   */\n  strategy?: string\n  /**\n   *\n   * @type {Array<EngineOutboundResourceTimeRange>}\n   * @memberof EngineOutboundResourceGroup\n   */\n  time?: Array<EngineOutboundResourceTimeRange>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResourceGroup\n   */\n  updated_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineOutboundResourceGroup\n   */\n  updated_by?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineOutboundResourceInGroup\n */\nexport interface EngineOutboundResourceInGroup {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResourceInGroup\n   */\n  group_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResourceInGroup\n   */\n  id?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineOutboundResourceInGroup\n   */\n  resource?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineOutboundResourceTimeRange\n */\nexport interface EngineOutboundResourceTimeRange {\n  /**\n   *\n   * @type {number}\n   * @memberof EngineOutboundResourceTimeRange\n   */\n  end_time_of_day?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineOutboundResourceTimeRange\n   */\n  start_time_of_day?: number\n}\n/**\n *\n * @export\n * @interface EngineOutboundResourceViewGroup\n */\nexport interface EngineOutboundResourceViewGroup {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineOutboundResourceViewGroup\n   */\n  communication?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResourceViewGroup\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResourceViewGroup\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResourceViewGroup\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineOutboundResourceViewGroup\n   */\n  strategy?: string\n}\n/**\n *\n * @export\n * @interface EnginePatchOutboundResourceRequest\n */\nexport interface EnginePatchOutboundResourceRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  dial_string?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  enabled?: boolean\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  error_ids?: Array<string>\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  fields?: Array<string>\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  gateway?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  limit?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  max_successively_errors?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  number?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  reserve?: boolean\n  /**\n   *\n   * @type {number}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  rps?: number\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof EnginePatchOutboundResourceRequest\n   */\n  variables?: { [key: string]: string }\n}\n/**\n *\n * @export\n * @interface EnginePatchQueueRequest\n */\nexport interface EnginePatchQueueRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EnginePatchQueueRequest\n   */\n  calendar?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchQueueRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EnginePatchQueueRequest\n   */\n  dnc_list?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchQueueRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EnginePatchQueueRequest\n   */\n  enabled?: boolean\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EnginePatchQueueRequest\n   */\n  fields?: Array<string>\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchQueueRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchQueueRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {object}\n   * @memberof EnginePatchQueueRequest\n   */\n  payload?: object\n  /**\n   *\n   * @type {number}\n   * @memberof EnginePatchQueueRequest\n   */\n  priority?: number\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EnginePatchQueueRequest\n   */\n  schema?: EngineLookup\n  /**\n   *\n   * @type {number}\n   * @memberof EnginePatchQueueRequest\n   */\n  sec_locate_agent?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchQueueRequest\n   */\n  strategy?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EnginePatchQueueRequest\n   */\n  team?: EngineLookup\n  /**\n   *\n   * @type {number}\n   * @memberof EnginePatchQueueRequest\n   */\n  timeout?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EnginePatchQueueRequest\n   */\n  type?: number\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof EnginePatchQueueRequest\n   */\n  variables?: { [key: string]: string }\n}\n/**\n *\n * @export\n * @interface EnginePatchRoutingOutboundCallRequest\n */\nexport interface EnginePatchRoutingOutboundCallRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchRoutingOutboundCallRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EnginePatchRoutingOutboundCallRequest\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchRoutingOutboundCallRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EnginePatchRoutingOutboundCallRequest\n   */\n  fields?: Array<string>\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchRoutingOutboundCallRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchRoutingOutboundCallRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchRoutingOutboundCallRequest\n   */\n  pattern?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EnginePatchRoutingOutboundCallRequest\n   */\n  schema?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EnginePatchRoutingSchemaRequest\n */\nexport interface EnginePatchRoutingSchemaRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof EnginePatchRoutingSchemaRequest\n   */\n  debug?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchRoutingSchemaRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchRoutingSchemaRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EnginePatchRoutingSchemaRequest\n   */\n  fields?: Array<string>\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchRoutingSchemaRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EnginePatchRoutingSchemaRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {object}\n   * @memberof EnginePatchRoutingSchemaRequest\n   */\n  payload?: object\n  /**\n   *\n   * @type {object}\n   * @memberof EnginePatchRoutingSchemaRequest\n   */\n  schema?: object\n  /**\n   *\n   * @type {number}\n   * @memberof EnginePatchRoutingSchemaRequest\n   */\n  type?: number\n}\n/**\n *\n * @export\n * @interface EngineQueue\n */\nexport interface EngineQueue {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineQueue\n   */\n  calendar?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineQueue\n   */\n  created_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineQueue\n   */\n  created_by?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineQueue\n   */\n  description?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineQueue\n   */\n  dnc_list?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineQueue\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineQueue\n   */\n  enabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineQueue\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineQueue\n   */\n  name?: string\n  /**\n   *\n   * @type {object}\n   * @memberof EngineQueue\n   */\n  payload?: object\n  /**\n   *\n   * @type {number}\n   * @memberof EngineQueue\n   */\n  priority?: number\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineQueue\n   */\n  schema?: EngineLookup\n  /**\n   *\n   * @type {number}\n   * @memberof EngineQueue\n   */\n  sec_locate_agent?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineQueue\n   */\n  strategy?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineQueue\n   */\n  team?: EngineLookup\n  /**\n   *\n   * @type {number}\n   * @memberof EngineQueue\n   */\n  timeout?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineQueue\n   */\n  type?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineQueue\n   */\n  updated_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineQueue\n   */\n  updated_by?: EngineLookup\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof EngineQueue\n   */\n  variables?: { [key: string]: string }\n}\n/**\n *\n * @export\n * @interface EngineQueueBucket\n */\nexport interface EngineQueueBucket {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineQueueBucket\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineQueueBucket\n   */\n  id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineQueueBucket\n   */\n  ratio?: number\n}\n/**\n *\n * @export\n * @interface EngineQueueResourceGroup\n */\nexport interface EngineQueueResourceGroup {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineQueueResourceGroup\n   */\n  id?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineQueueResourceGroup\n   */\n  resource_group?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineQueueRouting\n */\nexport interface EngineQueueRouting {\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineQueueRouting\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineQueueRouting\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineQueueRouting\n   */\n  pattern?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineQueueRouting\n   */\n  priority?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineQueueRouting\n   */\n  queue_id?: string\n}\n/**\n *\n * @export\n * @interface EngineResourceDisplay\n */\nexport interface EngineResourceDisplay {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineResourceDisplay\n   */\n  display?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineResourceDisplay\n   */\n  id?: string\n}\n/**\n *\n * @export\n * @interface EngineResourceTeamAgent\n */\nexport interface EngineResourceTeamAgent {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineResourceTeamAgent\n   */\n  agent?: EngineLookup\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineResourceTeamAgent\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineResourceTeamAgent\n   */\n  id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineResourceTeamAgent\n   */\n  lvl?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineResourceTeamAgent\n   */\n  team_id?: string\n}\n/**\n *\n * @export\n * @interface EngineResourceTeamSkill\n */\nexport interface EngineResourceTeamSkill {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineResourceTeamSkill\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineResourceTeamSkill\n   */\n  id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineResourceTeamSkill\n   */\n  lvl?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineResourceTeamSkill\n   */\n  max_capacity?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineResourceTeamSkill\n   */\n  min_capacity?: number\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineResourceTeamSkill\n   */\n  skill?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineResourceTeamSkill\n   */\n  team_id?: string\n}\n/**\n *\n * @export\n * @interface EngineResponse\n */\nexport interface EngineResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineResponse\n   */\n  status?: string\n}\n/**\n *\n * @export\n * @interface EngineRoutingOutboundCall\n */\nexport interface EngineRoutingOutboundCall {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingOutboundCall\n   */\n  created_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineRoutingOutboundCall\n   */\n  created_by?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingOutboundCall\n   */\n  description?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineRoutingOutboundCall\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingOutboundCall\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingOutboundCall\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingOutboundCall\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingOutboundCall\n   */\n  pattern?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineRoutingOutboundCall\n   */\n  schema?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingOutboundCall\n   */\n  updated_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineRoutingOutboundCall\n   */\n  updated_by?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineRoutingOutboundCallCompact\n */\nexport interface EngineRoutingOutboundCallCompact {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingOutboundCallCompact\n   */\n  description?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineRoutingOutboundCallCompact\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingOutboundCallCompact\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingOutboundCallCompact\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingOutboundCallCompact\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingOutboundCallCompact\n   */\n  pattern?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineRoutingOutboundCallCompact\n   */\n  position?: number\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineRoutingOutboundCallCompact\n   */\n  schema?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineRoutingSchema\n */\nexport interface EngineRoutingSchema {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingSchema\n   */\n  created_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineRoutingSchema\n   */\n  created_by?: EngineLookup\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineRoutingSchema\n   */\n  debug?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingSchema\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingSchema\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingSchema\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingSchema\n   */\n  name?: string\n  /**\n   *\n   * @type {object}\n   * @memberof EngineRoutingSchema\n   */\n  payload?: object\n  /**\n   *\n   * @type {object}\n   * @memberof EngineRoutingSchema\n   */\n  schema?: object\n  /**\n   *\n   * @type {number}\n   * @memberof EngineRoutingSchema\n   */\n  type?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingSchema\n   */\n  updated_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineRoutingSchema\n   */\n  updated_by?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineRoutingVariable\n */\nexport interface EngineRoutingVariable {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingVariable\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingVariable\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingVariable\n   */\n  key?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineRoutingVariable\n   */\n  value?: string\n}\n/**\n *\n * @export\n * @interface EngineSkill\n */\nexport interface EngineSkill {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineSkill\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineSkill\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineSkill\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineSkill\n   */\n  name?: string\n}\n/**\n *\n * @export\n * @interface EngineSupervisorInTeam\n */\nexport interface EngineSupervisorInTeam {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineSupervisorInTeam\n   */\n  agent?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineSupervisorInTeam\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineSupervisorInTeam\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineSupervisorInTeam\n   */\n  team_id?: string\n}\n/**\n *\n * @export\n * @interface EngineTimezone\n */\nexport interface EngineTimezone {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineTimezone\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineTimezone\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineTimezone\n   */\n  offset?: string\n}\n/**\n *\n * @export\n * @interface EngineUpdateAgentRequest\n */\nexport interface EngineUpdateAgentRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateAgentRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateAgentRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateAgentRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateAgentRequest\n   */\n  user?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineUpdateAgentSkillRequest\n */\nexport interface EngineUpdateAgentSkillRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateAgentSkillRequest\n   */\n  agent_id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateAgentSkillRequest\n   */\n  capacity?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateAgentSkillRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateAgentSkillRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateAgentSkillRequest\n   */\n  skill?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineUpdateAgentTeamRequest\n */\nexport interface EngineUpdateAgentTeamRequest {\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateAgentTeamRequest\n   */\n  busy_delay_time?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateAgentTeamRequest\n   */\n  call_timeout?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateAgentTeamRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateAgentTeamRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateAgentTeamRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateAgentTeamRequest\n   */\n  max_no_answer?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateAgentTeamRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateAgentTeamRequest\n   */\n  no_answer_delay_time?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateAgentTeamRequest\n   */\n  reject_delay_time?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateAgentTeamRequest\n   */\n  strategy?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateAgentTeamRequest\n   */\n  wrap_up_time?: number\n}\n/**\n *\n * @export\n * @interface EngineUpdateBucketRequest\n */\nexport interface EngineUpdateBucketRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateBucketRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateBucketRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateBucketRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateBucketRequest\n   */\n  name?: string\n}\n/**\n *\n * @export\n * @interface EngineUpdateCalendarRequest\n */\nexport interface EngineUpdateCalendarRequest {\n  /**\n   *\n   * @type {Array<EngineAcceptOfDay>}\n   * @memberof EngineUpdateCalendarRequest\n   */\n  accepts?: Array<EngineAcceptOfDay>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateCalendarRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateCalendarRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateCalendarRequest\n   */\n  end_at?: string\n  /**\n   *\n   * @type {Array<EngineExceptDate>}\n   * @memberof EngineUpdateCalendarRequest\n   */\n  excepts?: Array<EngineExceptDate>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateCalendarRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateCalendarRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateCalendarRequest\n   */\n  start_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateCalendarRequest\n   */\n  timezone?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineUpdateCommunicationTypeRequest\n */\nexport interface EngineUpdateCommunicationTypeRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateCommunicationTypeRequest\n   */\n  code?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateCommunicationTypeRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateCommunicationTypeRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateCommunicationTypeRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateCommunicationTypeRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateCommunicationTypeRequest\n   */\n  type?: string\n}\n/**\n *\n * @export\n * @interface EngineUpdateListCommunicationRequest\n */\nexport interface EngineUpdateListCommunicationRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateListCommunicationRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateListCommunicationRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateListCommunicationRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateListCommunicationRequest\n   */\n  list_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateListCommunicationRequest\n   */\n  number?: string\n}\n/**\n *\n * @export\n * @interface EngineUpdateListRequest\n */\nexport interface EngineUpdateListRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateListRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateListRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateListRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateListRequest\n   */\n  name?: string\n}\n/**\n *\n * @export\n * @interface EngineUpdateMemberRequest\n */\nexport interface EngineUpdateMemberRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateMemberRequest\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {Array<EngineMemberCommunicationCreateRequest>}\n   * @memberof EngineUpdateMemberRequest\n   */\n  communications?: Array<EngineMemberCommunicationCreateRequest>\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateMemberRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateMemberRequest\n   */\n  expire_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateMemberRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateMemberRequest\n   */\n  min_offering_at?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateMemberRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateMemberRequest\n   */\n  priority?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateMemberRequest\n   */\n  queue_id?: string\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EngineUpdateMemberRequest\n   */\n  skills?: Array<string>\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateMemberRequest\n   */\n  timezone?: EngineLookup\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof EngineUpdateMemberRequest\n   */\n  variables?: { [key: string]: string }\n}\n/**\n *\n * @export\n * @interface EngineUpdateOutboundResourceDisplayRequest\n */\nexport interface EngineUpdateOutboundResourceDisplayRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceDisplayRequest\n   */\n  display?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceDisplayRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceDisplayRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceDisplayRequest\n   */\n  resource_id?: string\n}\n/**\n *\n * @export\n * @interface EngineUpdateOutboundResourceGroupRequest\n */\nexport interface EngineUpdateOutboundResourceGroupRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateOutboundResourceGroupRequest\n   */\n  communication?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceGroupRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceGroupRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceGroupRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceGroupRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceGroupRequest\n   */\n  strategy?: string\n  /**\n   *\n   * @type {Array<EngineOutboundResourceTimeRange>}\n   * @memberof EngineUpdateOutboundResourceGroupRequest\n   */\n  time?: Array<EngineOutboundResourceTimeRange>\n}\n/**\n *\n * @export\n * @interface EngineUpdateOutboundResourceInGroupRequest\n */\nexport interface EngineUpdateOutboundResourceInGroupRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceInGroupRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceInGroupRequest\n   */\n  group_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceInGroupRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateOutboundResourceInGroupRequest\n   */\n  resource?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineUpdateOutboundResourceRequest\n */\nexport interface EngineUpdateOutboundResourceRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceRequest\n   */\n  dial_string?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineUpdateOutboundResourceRequest\n   */\n  enabled?: boolean\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EngineUpdateOutboundResourceRequest\n   */\n  error_ids?: Array<string>\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateOutboundResourceRequest\n   */\n  gateway?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateOutboundResourceRequest\n   */\n  limit?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateOutboundResourceRequest\n   */\n  max_successively_errors?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateOutboundResourceRequest\n   */\n  number?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineUpdateOutboundResourceRequest\n   */\n  reserve?: boolean\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateOutboundResourceRequest\n   */\n  rps?: number\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof EngineUpdateOutboundResourceRequest\n   */\n  variables?: { [key: string]: string }\n}\n/**\n *\n * @export\n * @interface EngineUpdateQueueBucketRequest\n */\nexport interface EngineUpdateQueueBucketRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateQueueBucketRequest\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueBucketRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueBucketRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueBucketRequest\n   */\n  queue_id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateQueueBucketRequest\n   */\n  ratio?: number\n}\n/**\n *\n * @export\n * @interface EngineUpdateQueueRequest\n */\nexport interface EngineUpdateQueueRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateQueueRequest\n   */\n  calendar?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateQueueRequest\n   */\n  dnc_list?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineUpdateQueueRequest\n   */\n  enabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {object}\n   * @memberof EngineUpdateQueueRequest\n   */\n  payload?: object\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateQueueRequest\n   */\n  priority?: number\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateQueueRequest\n   */\n  schema?: EngineLookup\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateQueueRequest\n   */\n  sec_locate_agent?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueRequest\n   */\n  strategy?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateQueueRequest\n   */\n  team?: EngineLookup\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateQueueRequest\n   */\n  timeout?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateQueueRequest\n   */\n  type?: number\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof EngineUpdateQueueRequest\n   */\n  variables?: { [key: string]: string }\n}\n/**\n *\n * @export\n * @interface EngineUpdateQueueResourceGroupRequest\n */\nexport interface EngineUpdateQueueResourceGroupRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueResourceGroupRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueResourceGroupRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueResourceGroupRequest\n   */\n  queue_id?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateQueueResourceGroupRequest\n   */\n  resource_group?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineUpdateQueueRoutingRequest\n */\nexport interface EngineUpdateQueueRoutingRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineUpdateQueueRoutingRequest\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueRoutingRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueRoutingRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueRoutingRequest\n   */\n  pattern?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateQueueRoutingRequest\n   */\n  priority?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateQueueRoutingRequest\n   */\n  queue_id?: string\n}\n/**\n *\n * @export\n * @interface EngineUpdateResourceTeamAgentRequest\n */\nexport interface EngineUpdateResourceTeamAgentRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateResourceTeamAgentRequest\n   */\n  agent?: EngineLookup\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateResourceTeamAgentRequest\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateResourceTeamAgentRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateResourceTeamAgentRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateResourceTeamAgentRequest\n   */\n  lvl?: number\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateResourceTeamAgentRequest\n   */\n  team_id?: string\n}\n/**\n *\n * @export\n * @interface EngineUpdateResourceTeamSkillRequest\n */\nexport interface EngineUpdateResourceTeamSkillRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateResourceTeamSkillRequest\n   */\n  bucket?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateResourceTeamSkillRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateResourceTeamSkillRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateResourceTeamSkillRequest\n   */\n  lvl?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateResourceTeamSkillRequest\n   */\n  max_capacity?: number\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateResourceTeamSkillRequest\n   */\n  min_capacity?: number\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateResourceTeamSkillRequest\n   */\n  skill?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateResourceTeamSkillRequest\n   */\n  team_id?: string\n}\n/**\n *\n * @export\n * @interface EngineUpdateRoutingOutboundCallRequest\n */\nexport interface EngineUpdateRoutingOutboundCallRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateRoutingOutboundCallRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineUpdateRoutingOutboundCallRequest\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateRoutingOutboundCallRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateRoutingOutboundCallRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateRoutingOutboundCallRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateRoutingOutboundCallRequest\n   */\n  pattern?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateRoutingOutboundCallRequest\n   */\n  schema?: EngineLookup\n}\n/**\n *\n * @export\n * @interface EngineUpdateRoutingSchemaRequest\n */\nexport interface EngineUpdateRoutingSchemaRequest {\n  /**\n   *\n   * @type {boolean}\n   * @memberof EngineUpdateRoutingSchemaRequest\n   */\n  debug?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateRoutingSchemaRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateRoutingSchemaRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateRoutingSchemaRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateRoutingSchemaRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {object}\n   * @memberof EngineUpdateRoutingSchemaRequest\n   */\n  payload?: object\n  /**\n   *\n   * @type {object}\n   * @memberof EngineUpdateRoutingSchemaRequest\n   */\n  schema?: object\n  /**\n   *\n   * @type {number}\n   * @memberof EngineUpdateRoutingSchemaRequest\n   */\n  type?: number\n}\n/**\n *\n * @export\n * @interface EngineUpdateRoutingVariableRequest\n */\nexport interface EngineUpdateRoutingVariableRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateRoutingVariableRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateRoutingVariableRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateRoutingVariableRequest\n   */\n  key?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateRoutingVariableRequest\n   */\n  value?: string\n}\n/**\n *\n * @export\n * @interface EngineUpdateSkillRequest\n */\nexport interface EngineUpdateSkillRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateSkillRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateSkillRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateSkillRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateSkillRequest\n   */\n  name?: string\n}\n/**\n *\n * @export\n * @interface EngineUpdateSupervisorInTeamRequest\n */\nexport interface EngineUpdateSupervisorInTeamRequest {\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof EngineUpdateSupervisorInTeamRequest\n   */\n  agent?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateSupervisorInTeamRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateSupervisorInTeamRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof EngineUpdateSupervisorInTeamRequest\n   */\n  team_id?: string\n}\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the  `Value` type union.     The JSON representation for `NullValue` is JSON `null`.   - NULL_VALUE: Null value.\n * @export\n * @enum {string}\n */\nexport enum ProtobufNullValue {\n  NULLVALUE = 'NULL_VALUE',\n}\n\n/**\n *\n * @export\n * @interface StorageBackendProfile\n */\nexport interface StorageBackendProfile {\n  /**\n   *\n   * @type {string}\n   * @memberof StorageBackendProfile\n   */\n  created_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof StorageBackendProfile\n   */\n  created_by?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof StorageBackendProfile\n   */\n  data_count?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StorageBackendProfile\n   */\n  data_size?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StorageBackendProfile\n   */\n  description?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof StorageBackendProfile\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {number}\n   * @memberof StorageBackendProfile\n   */\n  expire_days?: number\n  /**\n   *\n   * @type {string}\n   * @memberof StorageBackendProfile\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StorageBackendProfile\n   */\n  max_size?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StorageBackendProfile\n   */\n  name?: string\n  /**\n   *\n   * @type {number}\n   * @memberof StorageBackendProfile\n   */\n  priority?: number\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof StorageBackendProfile\n   */\n  properties?: { [key: string]: string }\n  /**\n   *\n   * @type {string}\n   * @memberof StorageBackendProfile\n   */\n  type?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StorageBackendProfile\n   */\n  updated_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof StorageBackendProfile\n   */\n  updated_by?: EngineLookup\n}\n/**\n *\n * @export\n * @interface StorageCreateBackendProfileRequest\n */\nexport interface StorageCreateBackendProfileRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof StorageCreateBackendProfileRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof StorageCreateBackendProfileRequest\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof StorageCreateBackendProfileRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof StorageCreateBackendProfileRequest\n   */\n  expire_days?: number\n  /**\n   *\n   * @type {string}\n   * @memberof StorageCreateBackendProfileRequest\n   */\n  max_size?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StorageCreateBackendProfileRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {number}\n   * @memberof StorageCreateBackendProfileRequest\n   */\n  priority?: number\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof StorageCreateBackendProfileRequest\n   */\n  properties?: { [key: string]: string }\n  /**\n   *\n   * @type {string}\n   * @memberof StorageCreateBackendProfileRequest\n   */\n  type?: string\n}\n/**\n *\n * @export\n * @interface StorageListBackendProfile\n */\nexport interface StorageListBackendProfile {\n  /**\n   *\n   * @type {Array<StorageBackendProfile>}\n   * @memberof StorageListBackendProfile\n   */\n  items?: Array<StorageBackendProfile>\n  /**\n   *\n   * @type {boolean}\n   * @memberof StorageListBackendProfile\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface StorageListMedia\n */\nexport interface StorageListMedia {\n  /**\n   *\n   * @type {Array<StorageMediaFile>}\n   * @memberof StorageListMedia\n   */\n  items?: Array<StorageMediaFile>\n  /**\n   *\n   * @type {boolean}\n   * @memberof StorageListMedia\n   */\n  next?: boolean\n}\n/**\n *\n * @export\n * @interface StorageMediaFile\n */\nexport interface StorageMediaFile {\n  /**\n   *\n   * @type {string}\n   * @memberof StorageMediaFile\n   */\n  created_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof StorageMediaFile\n   */\n  created_by?: EngineLookup\n  /**\n   *\n   * @type {string}\n   * @memberof StorageMediaFile\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StorageMediaFile\n   */\n  mime_type?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StorageMediaFile\n   */\n  name?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StorageMediaFile\n   */\n  size?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StorageMediaFile\n   */\n  updated_at?: string\n  /**\n   *\n   * @type {EngineLookup}\n   * @memberof StorageMediaFile\n   */\n  updated_by?: EngineLookup\n}\n/**\n *\n * @export\n * @interface StoragePatchBackendProfileRequest\n */\nexport interface StoragePatchBackendProfileRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof StoragePatchBackendProfileRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof StoragePatchBackendProfileRequest\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof StoragePatchBackendProfileRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof StoragePatchBackendProfileRequest\n   */\n  expire_days?: number\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof StoragePatchBackendProfileRequest\n   */\n  fields?: Array<string>\n  /**\n   *\n   * @type {string}\n   * @memberof StoragePatchBackendProfileRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StoragePatchBackendProfileRequest\n   */\n  max_size?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StoragePatchBackendProfileRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {number}\n   * @memberof StoragePatchBackendProfileRequest\n   */\n  priority?: number\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof StoragePatchBackendProfileRequest\n   */\n  properties?: { [key: string]: string }\n}\n/**\n *\n * @export\n * @interface StorageUpdateBackendProfileRequest\n */\nexport interface StorageUpdateBackendProfileRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof StorageUpdateBackendProfileRequest\n   */\n  description?: string\n  /**\n   *\n   * @type {boolean}\n   * @memberof StorageUpdateBackendProfileRequest\n   */\n  disabled?: boolean\n  /**\n   *\n   * @type {string}\n   * @memberof StorageUpdateBackendProfileRequest\n   */\n  domain_id?: string\n  /**\n   *\n   * @type {number}\n   * @memberof StorageUpdateBackendProfileRequest\n   */\n  expire_days?: number\n  /**\n   *\n   * @type {string}\n   * @memberof StorageUpdateBackendProfileRequest\n   */\n  id?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StorageUpdateBackendProfileRequest\n   */\n  max_size?: string\n  /**\n   *\n   * @type {string}\n   * @memberof StorageUpdateBackendProfileRequest\n   */\n  name?: string\n  /**\n   *\n   * @type {number}\n   * @memberof StorageUpdateBackendProfileRequest\n   */\n  priority?: number\n  /**\n   *\n   * @type {{ [key: string]: string; }}\n   * @memberof StorageUpdateBackendProfileRequest\n   */\n  properties?: { [key: string]: string }\n}\n\n/**\n * AgentServiceApi - axios parameter creator\n * @export\n */\nexport const AgentServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create Agent\n     * @param {EngineCreateAgentRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createAgent(\n      body: EngineCreateAgentRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createAgent.'\n        )\n      }\n      const localVarPath = `/call_center/agents`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateAgentRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove Agent\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteAgent(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteAgent.'\n        )\n      }\n      const localVarPath = `/call_center/agents/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Agent item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readAgent(id: string, domain_id?: string, options: any = {}): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readAgent.'\n        )\n      }\n      const localVarPath = `/call_center/agents/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of Agent\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgent(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/call_center/agents`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @param {string} id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentInQueue(\n      id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling searchAgentInQueue.'\n        )\n      }\n      const localVarPath = `/call_center/agents/{id}/queues`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @param {string} id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentInTeam(\n      id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling searchAgentInTeam.'\n        )\n      }\n      const localVarPath = `/call_center/agents/{id}/teams`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of Agent\n     * @param {string} agent_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [time_from]\n     * @param {string} [time_to]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentStateHistory(\n      agent_id: string,\n      page?: number,\n      size?: number,\n      time_from?: string,\n      time_to?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'agent_id' is not null or undefined\n      if (agent_id === null || agent_id === undefined) {\n        throw new RequiredError(\n          'agent_id',\n          'Required parameter agent_id was null or undefined when calling searchAgentStateHistory.'\n        )\n      }\n      const localVarPath = `/call_center/agents/{agent_id}/states/history`.replace(\n        `{${'agent_id'}}`,\n        encodeURIComponent(String(agent_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (time_from !== undefined) {\n        localVarQueryParameter['time_from'] = time_from\n      }\n\n      if (time_to !== undefined) {\n        localVarQueryParameter['time_to'] = time_to\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update Agent\n     * @param {string} id\n     * @param {EngineUpdateAgentRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAgent(\n      id: string,\n      body: EngineUpdateAgentRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateAgent.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateAgent.'\n        )\n      }\n      const localVarPath = `/call_center/agents/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateAgentRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Change agent status\n     * @param {string} id\n     * @param {EngineAgentStatusRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAgentStatus(\n      id: string,\n      body: EngineAgentStatusRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateAgentStatus.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateAgentStatus.'\n        )\n      }\n      const localVarPath = `/call_center/agents/{id}/status`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PATCH',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineAgentStatusRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * AgentServiceApi - functional programming interface\n * @export\n */\nexport const AgentServiceApiFp = function(configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Create Agent\n     * @param {EngineCreateAgentRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createAgent(\n      body: EngineCreateAgentRequest,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineAgent> {\n      const localVarAxiosArgs = AgentServiceApiAxiosParamCreator(\n        configuration\n      ).createAgent(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove Agent\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteAgent(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineAgent> {\n      const localVarAxiosArgs = AgentServiceApiAxiosParamCreator(\n        configuration\n      ).deleteAgent(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Agent item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readAgent(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineAgent> {\n      const localVarAxiosArgs = AgentServiceApiAxiosParamCreator(\n        configuration\n      ).readAgent(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of Agent\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgent(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListAgent> {\n      const localVarAxiosArgs = AgentServiceApiAxiosParamCreator(\n        configuration\n      ).searchAgent(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @param {string} id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentInQueue(\n      id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListAgentInQueue> {\n      const localVarAxiosArgs = AgentServiceApiAxiosParamCreator(\n        configuration\n      ).searchAgentInQueue(id, page, size, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @param {string} id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentInTeam(\n      id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListAgentInTeam> {\n      const localVarAxiosArgs = AgentServiceApiAxiosParamCreator(\n        configuration\n      ).searchAgentInTeam(id, page, size, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of Agent\n     * @param {string} agent_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [time_from]\n     * @param {string} [time_to]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentStateHistory(\n      agent_id: string,\n      page?: number,\n      size?: number,\n      time_from?: string,\n      time_to?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListAgentStateHistory> {\n      const localVarAxiosArgs = AgentServiceApiAxiosParamCreator(\n        configuration\n      ).searchAgentStateHistory(\n        agent_id,\n        page,\n        size,\n        time_from,\n        time_to,\n        domain_id,\n        options\n      )\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update Agent\n     * @param {string} id\n     * @param {EngineUpdateAgentRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAgent(\n      id: string,\n      body: EngineUpdateAgentRequest,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineAgent> {\n      const localVarAxiosArgs = AgentServiceApiAxiosParamCreator(\n        configuration\n      ).updateAgent(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Change agent status\n     * @param {string} id\n     * @param {EngineAgentStatusRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAgentStatus(\n      id: string,\n      body: EngineAgentStatusRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineResponse> {\n      const localVarAxiosArgs = AgentServiceApiAxiosParamCreator(\n        configuration\n      ).updateAgentStatus(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * AgentServiceApi - factory interface\n * @export\n */\nexport const AgentServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create Agent\n     * @param {EngineCreateAgentRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createAgent(body: EngineCreateAgentRequest, options?: any) {\n      return AgentServiceApiFp(configuration).createAgent(body, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Remove Agent\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteAgent(id: string, domain_id?: string, options?: any) {\n      return AgentServiceApiFp(configuration).deleteAgent(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Agent item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readAgent(id: string, domain_id?: string, options?: any) {\n      return AgentServiceApiFp(configuration).readAgent(id, domain_id, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary List of Agent\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgent(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return AgentServiceApiFp(configuration).searchAgent(\n        page,\n        size,\n        q,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @param {string} id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentInQueue(\n      id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ) {\n      return AgentServiceApiFp(configuration).searchAgentInQueue(\n        id,\n        page,\n        size,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @param {string} id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentInTeam(\n      id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ) {\n      return AgentServiceApiFp(configuration).searchAgentInTeam(\n        id,\n        page,\n        size,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of Agent\n     * @param {string} agent_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [time_from]\n     * @param {string} [time_to]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentStateHistory(\n      agent_id: string,\n      page?: number,\n      size?: number,\n      time_from?: string,\n      time_to?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return AgentServiceApiFp(configuration).searchAgentStateHistory(\n        agent_id,\n        page,\n        size,\n        time_from,\n        time_to,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update Agent\n     * @param {string} id\n     * @param {EngineUpdateAgentRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAgent(id: string, body: EngineUpdateAgentRequest, options?: any) {\n      return AgentServiceApiFp(configuration).updateAgent(id, body, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Change agent status\n     * @param {string} id\n     * @param {EngineAgentStatusRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAgentStatus(\n      id: string,\n      body: EngineAgentStatusRequest,\n      options?: any\n    ) {\n      return AgentServiceApiFp(configuration).updateAgentStatus(\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * AgentServiceApi - object-oriented interface\n * @export\n * @class AgentServiceApi\n * @extends {BaseAPI}\n */\nexport class AgentServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create Agent\n   * @param {EngineCreateAgentRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentServiceApi\n   */\n  public createAgent(body: EngineCreateAgentRequest, options?: any) {\n    return AgentServiceApiFp(this.configuration).createAgent(body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Remove Agent\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentServiceApi\n   */\n  public deleteAgent(id: string, domain_id?: string, options?: any) {\n    return AgentServiceApiFp(this.configuration).deleteAgent(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Agent item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentServiceApi\n   */\n  public readAgent(id: string, domain_id?: string, options?: any) {\n    return AgentServiceApiFp(this.configuration).readAgent(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of Agent\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentServiceApi\n   */\n  public searchAgent(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return AgentServiceApiFp(this.configuration).searchAgent(\n      page,\n      size,\n      q,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @param {string} id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentServiceApi\n   */\n  public searchAgentInQueue(\n    id: string,\n    page?: number,\n    size?: number,\n    domain_id?: string,\n    options?: any\n  ) {\n    return AgentServiceApiFp(this.configuration).searchAgentInQueue(\n      id,\n      page,\n      size,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @param {string} id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentServiceApi\n   */\n  public searchAgentInTeam(\n    id: string,\n    page?: number,\n    size?: number,\n    domain_id?: string,\n    options?: any\n  ) {\n    return AgentServiceApiFp(this.configuration).searchAgentInTeam(\n      id,\n      page,\n      size,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of Agent\n   * @param {string} agent_id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [time_from]\n   * @param {string} [time_to]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentServiceApi\n   */\n  public searchAgentStateHistory(\n    agent_id: string,\n    page?: number,\n    size?: number,\n    time_from?: string,\n    time_to?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return AgentServiceApiFp(this.configuration).searchAgentStateHistory(\n      agent_id,\n      page,\n      size,\n      time_from,\n      time_to,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update Agent\n   * @param {string} id\n   * @param {EngineUpdateAgentRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentServiceApi\n   */\n  public updateAgent(\n    id: string,\n    body: EngineUpdateAgentRequest,\n    options?: any\n  ) {\n    return AgentServiceApiFp(this.configuration).updateAgent(id, body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Change agent status\n   * @param {string} id\n   * @param {EngineAgentStatusRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentServiceApi\n   */\n  public updateAgentStatus(\n    id: string,\n    body: EngineAgentStatusRequest,\n    options?: any\n  ) {\n    return AgentServiceApiFp(this.configuration).updateAgentStatus(\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n}\n\n/**\n * AgentSkillServiceApi - axios parameter creator\n * @export\n */\nexport const AgentSkillServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create AgentSkill\n     * @param {string} agent_id\n     * @param {EngineCreateAgentSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createAgentSkill(\n      agent_id: string,\n      body: EngineCreateAgentSkillRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'agent_id' is not null or undefined\n      if (agent_id === null || agent_id === undefined) {\n        throw new RequiredError(\n          'agent_id',\n          'Required parameter agent_id was null or undefined when calling createAgentSkill.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createAgentSkill.'\n        )\n      }\n      const localVarPath = `/call_center/agents/{agent_id}/skills`.replace(\n        `{${'agent_id'}}`,\n        encodeURIComponent(String(agent_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateAgentSkillRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove AgentSkill\n     * @param {string} agent_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteAgentSkill(\n      agent_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'agent_id' is not null or undefined\n      if (agent_id === null || agent_id === undefined) {\n        throw new RequiredError(\n          'agent_id',\n          'Required parameter agent_id was null or undefined when calling deleteAgentSkill.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteAgentSkill.'\n        )\n      }\n      const localVarPath = `/call_center/agents/{agent_id}/skills/{id}`\n        .replace(`{${'agent_id'}}`, encodeURIComponent(String(agent_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary AgentSkill item\n     * @param {string} agent_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readAgentSkill(\n      agent_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'agent_id' is not null or undefined\n      if (agent_id === null || agent_id === undefined) {\n        throw new RequiredError(\n          'agent_id',\n          'Required parameter agent_id was null or undefined when calling readAgentSkill.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readAgentSkill.'\n        )\n      }\n      const localVarPath = `/call_center/agents/{agent_id}/skills/{id}`\n        .replace(`{${'agent_id'}}`, encodeURIComponent(String(agent_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of AgentSkill\n     * @param {string} agent_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentSkill(\n      agent_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'agent_id' is not null or undefined\n      if (agent_id === null || agent_id === undefined) {\n        throw new RequiredError(\n          'agent_id',\n          'Required parameter agent_id was null or undefined when calling searchAgentSkill.'\n        )\n      }\n      const localVarPath = `/call_center/agents/{agent_id}/skills`.replace(\n        `{${'agent_id'}}`,\n        encodeURIComponent(String(agent_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update AgentSkill\n     * @param {string} agent_id\n     * @param {string} id\n     * @param {EngineUpdateAgentSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAgentSkill(\n      agent_id: string,\n      id: string,\n      body: EngineUpdateAgentSkillRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'agent_id' is not null or undefined\n      if (agent_id === null || agent_id === undefined) {\n        throw new RequiredError(\n          'agent_id',\n          'Required parameter agent_id was null or undefined when calling updateAgentSkill.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateAgentSkill.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateAgentSkill.'\n        )\n      }\n      const localVarPath = `/call_center/agents/{agent_id}/skills/{id}`\n        .replace(`{${'agent_id'}}`, encodeURIComponent(String(agent_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateAgentSkillRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * AgentSkillServiceApi - functional programming interface\n * @export\n */\nexport const AgentSkillServiceApiFp = function(configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Create AgentSkill\n     * @param {string} agent_id\n     * @param {EngineCreateAgentSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createAgentSkill(\n      agent_id: string,\n      body: EngineCreateAgentSkillRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineAgentSkill> {\n      const localVarAxiosArgs = AgentSkillServiceApiAxiosParamCreator(\n        configuration\n      ).createAgentSkill(agent_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove AgentSkill\n     * @param {string} agent_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteAgentSkill(\n      agent_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineAgentSkill> {\n      const localVarAxiosArgs = AgentSkillServiceApiAxiosParamCreator(\n        configuration\n      ).deleteAgentSkill(agent_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary AgentSkill item\n     * @param {string} agent_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readAgentSkill(\n      agent_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineAgentSkill> {\n      const localVarAxiosArgs = AgentSkillServiceApiAxiosParamCreator(\n        configuration\n      ).readAgentSkill(agent_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of AgentSkill\n     * @param {string} agent_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentSkill(\n      agent_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListAgentSkill> {\n      const localVarAxiosArgs = AgentSkillServiceApiAxiosParamCreator(\n        configuration\n      ).searchAgentSkill(agent_id, page, size, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update AgentSkill\n     * @param {string} agent_id\n     * @param {string} id\n     * @param {EngineUpdateAgentSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAgentSkill(\n      agent_id: string,\n      id: string,\n      body: EngineUpdateAgentSkillRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineAgentSkill> {\n      const localVarAxiosArgs = AgentSkillServiceApiAxiosParamCreator(\n        configuration\n      ).updateAgentSkill(agent_id, id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * AgentSkillServiceApi - factory interface\n * @export\n */\nexport const AgentSkillServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create AgentSkill\n     * @param {string} agent_id\n     * @param {EngineCreateAgentSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createAgentSkill(\n      agent_id: string,\n      body: EngineCreateAgentSkillRequest,\n      options?: any\n    ) {\n      return AgentSkillServiceApiFp(configuration).createAgentSkill(\n        agent_id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove AgentSkill\n     * @param {string} agent_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteAgentSkill(\n      agent_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return AgentSkillServiceApiFp(configuration).deleteAgentSkill(\n        agent_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary AgentSkill item\n     * @param {string} agent_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readAgentSkill(\n      agent_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return AgentSkillServiceApiFp(configuration).readAgentSkill(\n        agent_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of AgentSkill\n     * @param {string} agent_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentSkill(\n      agent_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ) {\n      return AgentSkillServiceApiFp(configuration).searchAgentSkill(\n        agent_id,\n        page,\n        size,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update AgentSkill\n     * @param {string} agent_id\n     * @param {string} id\n     * @param {EngineUpdateAgentSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAgentSkill(\n      agent_id: string,\n      id: string,\n      body: EngineUpdateAgentSkillRequest,\n      options?: any\n    ) {\n      return AgentSkillServiceApiFp(configuration).updateAgentSkill(\n        agent_id,\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * AgentSkillServiceApi - object-oriented interface\n * @export\n * @class AgentSkillServiceApi\n * @extends {BaseAPI}\n */\nexport class AgentSkillServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create AgentSkill\n   * @param {string} agent_id\n   * @param {EngineCreateAgentSkillRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentSkillServiceApi\n   */\n  public createAgentSkill(\n    agent_id: string,\n    body: EngineCreateAgentSkillRequest,\n    options?: any\n  ) {\n    return AgentSkillServiceApiFp(this.configuration).createAgentSkill(\n      agent_id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove AgentSkill\n   * @param {string} agent_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentSkillServiceApi\n   */\n  public deleteAgentSkill(\n    agent_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return AgentSkillServiceApiFp(this.configuration).deleteAgentSkill(\n      agent_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary AgentSkill item\n   * @param {string} agent_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentSkillServiceApi\n   */\n  public readAgentSkill(\n    agent_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return AgentSkillServiceApiFp(this.configuration).readAgentSkill(\n      agent_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of AgentSkill\n   * @param {string} agent_id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentSkillServiceApi\n   */\n  public searchAgentSkill(\n    agent_id: string,\n    page?: number,\n    size?: number,\n    domain_id?: string,\n    options?: any\n  ) {\n    return AgentSkillServiceApiFp(this.configuration).searchAgentSkill(\n      agent_id,\n      page,\n      size,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update AgentSkill\n   * @param {string} agent_id\n   * @param {string} id\n   * @param {EngineUpdateAgentSkillRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentSkillServiceApi\n   */\n  public updateAgentSkill(\n    agent_id: string,\n    id: string,\n    body: EngineUpdateAgentSkillRequest,\n    options?: any\n  ) {\n    return AgentSkillServiceApiFp(this.configuration).updateAgentSkill(\n      agent_id,\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n}\n\n/**\n * AgentTeamServiceApi - axios parameter creator\n * @export\n */\nexport const AgentTeamServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create AgentTeam\n     * @param {EngineCreateAgentTeamRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createAgentTeam(\n      body: EngineCreateAgentTeamRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createAgentTeam.'\n        )\n      }\n      const localVarPath = `/call_center/teams`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateAgentTeamRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove AgentTeam\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteAgentTeam(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteAgentTeam.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary AgentTeam item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readAgentTeam(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readAgentTeam.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of AgentTeam\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentTeam(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/call_center/teams`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update AgentTeam\n     * @param {string} id\n     * @param {EngineUpdateAgentTeamRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAgentTeam(\n      id: string,\n      body: EngineUpdateAgentTeamRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateAgentTeam.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateAgentTeam.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateAgentTeamRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * AgentTeamServiceApi - functional programming interface\n * @export\n */\nexport const AgentTeamServiceApiFp = function(configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Create AgentTeam\n     * @param {EngineCreateAgentTeamRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createAgentTeam(\n      body: EngineCreateAgentTeamRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineAgentTeam> {\n      const localVarAxiosArgs = AgentTeamServiceApiAxiosParamCreator(\n        configuration\n      ).createAgentTeam(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove AgentTeam\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteAgentTeam(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineAgentTeam> {\n      const localVarAxiosArgs = AgentTeamServiceApiAxiosParamCreator(\n        configuration\n      ).deleteAgentTeam(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary AgentTeam item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readAgentTeam(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineAgentTeam> {\n      const localVarAxiosArgs = AgentTeamServiceApiAxiosParamCreator(\n        configuration\n      ).readAgentTeam(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of AgentTeam\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentTeam(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListAgentTeam> {\n      const localVarAxiosArgs = AgentTeamServiceApiAxiosParamCreator(\n        configuration\n      ).searchAgentTeam(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update AgentTeam\n     * @param {string} id\n     * @param {EngineUpdateAgentTeamRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAgentTeam(\n      id: string,\n      body: EngineUpdateAgentTeamRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineAgentTeam> {\n      const localVarAxiosArgs = AgentTeamServiceApiAxiosParamCreator(\n        configuration\n      ).updateAgentTeam(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * AgentTeamServiceApi - factory interface\n * @export\n */\nexport const AgentTeamServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create AgentTeam\n     * @param {EngineCreateAgentTeamRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createAgentTeam(body: EngineCreateAgentTeamRequest, options?: any) {\n      return AgentTeamServiceApiFp(configuration).createAgentTeam(\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove AgentTeam\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteAgentTeam(id: string, domain_id?: string, options?: any) {\n      return AgentTeamServiceApiFp(configuration).deleteAgentTeam(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary AgentTeam item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readAgentTeam(id: string, domain_id?: string, options?: any) {\n      return AgentTeamServiceApiFp(configuration).readAgentTeam(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of AgentTeam\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAgentTeam(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return AgentTeamServiceApiFp(configuration).searchAgentTeam(\n        page,\n        size,\n        q,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update AgentTeam\n     * @param {string} id\n     * @param {EngineUpdateAgentTeamRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAgentTeam(\n      id: string,\n      body: EngineUpdateAgentTeamRequest,\n      options?: any\n    ) {\n      return AgentTeamServiceApiFp(configuration).updateAgentTeam(\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * AgentTeamServiceApi - object-oriented interface\n * @export\n * @class AgentTeamServiceApi\n * @extends {BaseAPI}\n */\nexport class AgentTeamServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create AgentTeam\n   * @param {EngineCreateAgentTeamRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentTeamServiceApi\n   */\n  public createAgentTeam(body: EngineCreateAgentTeamRequest, options?: any) {\n    return AgentTeamServiceApiFp(this.configuration).createAgentTeam(\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove AgentTeam\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentTeamServiceApi\n   */\n  public deleteAgentTeam(id: string, domain_id?: string, options?: any) {\n    return AgentTeamServiceApiFp(this.configuration).deleteAgentTeam(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary AgentTeam item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentTeamServiceApi\n   */\n  public readAgentTeam(id: string, domain_id?: string, options?: any) {\n    return AgentTeamServiceApiFp(this.configuration).readAgentTeam(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of AgentTeam\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentTeamServiceApi\n   */\n  public searchAgentTeam(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return AgentTeamServiceApiFp(this.configuration).searchAgentTeam(\n      page,\n      size,\n      q,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update AgentTeam\n   * @param {string} id\n   * @param {EngineUpdateAgentTeamRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AgentTeamServiceApi\n   */\n  public updateAgentTeam(\n    id: string,\n    body: EngineUpdateAgentTeamRequest,\n    options?: any\n  ) {\n    return AgentTeamServiceApiFp(this.configuration).updateAgentTeam(\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n}\n\n/**\n * BackendProfileServiceApi - axios parameter creator\n * @export\n */\nexport const BackendProfileServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create BackendProfile\n     * @param {StorageCreateBackendProfileRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createBackendProfile(\n      body: StorageCreateBackendProfileRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createBackendProfile.'\n        )\n      }\n      const localVarPath = `/storage/backend_profiles`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'StorageCreateBackendProfileRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove BackendProfile\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteBackendProfile(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteBackendProfile.'\n        )\n      }\n      const localVarPath = `/storage/backend_profiles/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Patch BackendProfile\n     * @param {string} id\n     * @param {StoragePatchBackendProfileRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchBackendProfile(\n      id: string,\n      body: StoragePatchBackendProfileRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling patchBackendProfile.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling patchBackendProfile.'\n        )\n      }\n      const localVarPath = `/storage/backend_profiles/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PATCH',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'StoragePatchBackendProfileRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary BackendProfile item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readBackendProfile(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readBackendProfile.'\n        )\n      }\n      const localVarPath = `/storage/backend_profiles/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of BackendProfile\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchBackendProfile(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/storage/backend_profiles`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update BackendProfile\n     * @param {string} id\n     * @param {StorageUpdateBackendProfileRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateBackendProfile(\n      id: string,\n      body: StorageUpdateBackendProfileRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateBackendProfile.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateBackendProfile.'\n        )\n      }\n      const localVarPath = `/storage/backend_profiles/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'StorageUpdateBackendProfileRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * BackendProfileServiceApi - functional programming interface\n * @export\n */\nexport const BackendProfileServiceApiFp = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create BackendProfile\n     * @param {StorageCreateBackendProfileRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createBackendProfile(\n      body: StorageCreateBackendProfileRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<StorageBackendProfile> {\n      const localVarAxiosArgs = BackendProfileServiceApiAxiosParamCreator(\n        configuration\n      ).createBackendProfile(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove BackendProfile\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteBackendProfile(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<StorageBackendProfile> {\n      const localVarAxiosArgs = BackendProfileServiceApiAxiosParamCreator(\n        configuration\n      ).deleteBackendProfile(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Patch BackendProfile\n     * @param {string} id\n     * @param {StoragePatchBackendProfileRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchBackendProfile(\n      id: string,\n      body: StoragePatchBackendProfileRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<StorageBackendProfile> {\n      const localVarAxiosArgs = BackendProfileServiceApiAxiosParamCreator(\n        configuration\n      ).patchBackendProfile(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary BackendProfile item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readBackendProfile(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<StorageBackendProfile> {\n      const localVarAxiosArgs = BackendProfileServiceApiAxiosParamCreator(\n        configuration\n      ).readBackendProfile(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of BackendProfile\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchBackendProfile(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<StorageListBackendProfile> {\n      const localVarAxiosArgs = BackendProfileServiceApiAxiosParamCreator(\n        configuration\n      ).searchBackendProfile(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update BackendProfile\n     * @param {string} id\n     * @param {StorageUpdateBackendProfileRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateBackendProfile(\n      id: string,\n      body: StorageUpdateBackendProfileRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<StorageBackendProfile> {\n      const localVarAxiosArgs = BackendProfileServiceApiAxiosParamCreator(\n        configuration\n      ).updateBackendProfile(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * BackendProfileServiceApi - factory interface\n * @export\n */\nexport const BackendProfileServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create BackendProfile\n     * @param {StorageCreateBackendProfileRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createBackendProfile(\n      body: StorageCreateBackendProfileRequest,\n      options?: any\n    ) {\n      return BackendProfileServiceApiFp(configuration).createBackendProfile(\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove BackendProfile\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteBackendProfile(id: string, domain_id?: string, options?: any) {\n      return BackendProfileServiceApiFp(configuration).deleteBackendProfile(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Patch BackendProfile\n     * @param {string} id\n     * @param {StoragePatchBackendProfileRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchBackendProfile(\n      id: string,\n      body: StoragePatchBackendProfileRequest,\n      options?: any\n    ) {\n      return BackendProfileServiceApiFp(configuration).patchBackendProfile(\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary BackendProfile item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readBackendProfile(id: string, domain_id?: string, options?: any) {\n      return BackendProfileServiceApiFp(configuration).readBackendProfile(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of BackendProfile\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchBackendProfile(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return BackendProfileServiceApiFp(configuration).searchBackendProfile(\n        page,\n        size,\n        q,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update BackendProfile\n     * @param {string} id\n     * @param {StorageUpdateBackendProfileRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateBackendProfile(\n      id: string,\n      body: StorageUpdateBackendProfileRequest,\n      options?: any\n    ) {\n      return BackendProfileServiceApiFp(configuration).updateBackendProfile(\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * BackendProfileServiceApi - object-oriented interface\n * @export\n * @class BackendProfileServiceApi\n * @extends {BaseAPI}\n */\nexport class BackendProfileServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create BackendProfile\n   * @param {StorageCreateBackendProfileRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BackendProfileServiceApi\n   */\n  public createBackendProfile(\n    body: StorageCreateBackendProfileRequest,\n    options?: any\n  ) {\n    return BackendProfileServiceApiFp(this.configuration).createBackendProfile(\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove BackendProfile\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BackendProfileServiceApi\n   */\n  public deleteBackendProfile(id: string, domain_id?: string, options?: any) {\n    return BackendProfileServiceApiFp(this.configuration).deleteBackendProfile(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Patch BackendProfile\n   * @param {string} id\n   * @param {StoragePatchBackendProfileRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BackendProfileServiceApi\n   */\n  public patchBackendProfile(\n    id: string,\n    body: StoragePatchBackendProfileRequest,\n    options?: any\n  ) {\n    return BackendProfileServiceApiFp(this.configuration).patchBackendProfile(\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary BackendProfile item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BackendProfileServiceApi\n   */\n  public readBackendProfile(id: string, domain_id?: string, options?: any) {\n    return BackendProfileServiceApiFp(this.configuration).readBackendProfile(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of BackendProfile\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BackendProfileServiceApi\n   */\n  public searchBackendProfile(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return BackendProfileServiceApiFp(this.configuration).searchBackendProfile(\n      page,\n      size,\n      q,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update BackendProfile\n   * @param {string} id\n   * @param {StorageUpdateBackendProfileRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BackendProfileServiceApi\n   */\n  public updateBackendProfile(\n    id: string,\n    body: StorageUpdateBackendProfileRequest,\n    options?: any\n  ) {\n    return BackendProfileServiceApiFp(this.configuration).updateBackendProfile(\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n}\n\n/**\n * BucketServiceApi - axios parameter creator\n * @export\n */\nexport const BucketServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create Bucket\n     * @param {EngineCreateBucketRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createBucket(\n      body: EngineCreateBucketRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createBucket.'\n        )\n      }\n      const localVarPath = `/call_center/buckets`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateBucketRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove Bucket\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteBucket(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteBucket.'\n        )\n      }\n      const localVarPath = `/call_center/buckets/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Bucket item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readBucket(id: string, domain_id?: string, options: any = {}): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readBucket.'\n        )\n      }\n      const localVarPath = `/call_center/buckets/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of Bucket\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchBucket(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/call_center/buckets`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update Bucket\n     * @param {string} id\n     * @param {EngineUpdateBucketRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateBucket(\n      id: string,\n      body: EngineUpdateBucketRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateBucket.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateBucket.'\n        )\n      }\n      const localVarPath = `/call_center/buckets/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateBucketRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * BucketServiceApi - functional programming interface\n * @export\n */\nexport const BucketServiceApiFp = function(configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Create Bucket\n     * @param {EngineCreateBucketRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createBucket(\n      body: EngineCreateBucketRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineBucket> {\n      const localVarAxiosArgs = BucketServiceApiAxiosParamCreator(\n        configuration\n      ).createBucket(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove Bucket\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteBucket(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineBucket> {\n      const localVarAxiosArgs = BucketServiceApiAxiosParamCreator(\n        configuration\n      ).deleteBucket(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Bucket item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readBucket(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineBucket> {\n      const localVarAxiosArgs = BucketServiceApiAxiosParamCreator(\n        configuration\n      ).readBucket(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of Bucket\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchBucket(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListBucket> {\n      const localVarAxiosArgs = BucketServiceApiAxiosParamCreator(\n        configuration\n      ).searchBucket(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update Bucket\n     * @param {string} id\n     * @param {EngineUpdateBucketRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateBucket(\n      id: string,\n      body: EngineUpdateBucketRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineBucket> {\n      const localVarAxiosArgs = BucketServiceApiAxiosParamCreator(\n        configuration\n      ).updateBucket(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * BucketServiceApi - factory interface\n * @export\n */\nexport const BucketServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create Bucket\n     * @param {EngineCreateBucketRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createBucket(body: EngineCreateBucketRequest, options?: any) {\n      return BucketServiceApiFp(configuration).createBucket(body, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Remove Bucket\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteBucket(id: string, domain_id?: string, options?: any) {\n      return BucketServiceApiFp(configuration).deleteBucket(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Bucket item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readBucket(id: string, domain_id?: string, options?: any) {\n      return BucketServiceApiFp(configuration).readBucket(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of Bucket\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchBucket(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return BucketServiceApiFp(configuration).searchBucket(\n        page,\n        size,\n        q,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update Bucket\n     * @param {string} id\n     * @param {EngineUpdateBucketRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateBucket(id: string, body: EngineUpdateBucketRequest, options?: any) {\n      return BucketServiceApiFp(configuration).updateBucket(id, body, options)(\n        axios,\n        basePath\n      )\n    },\n  }\n}\n\n/**\n * BucketServiceApi - object-oriented interface\n * @export\n * @class BucketServiceApi\n * @extends {BaseAPI}\n */\nexport class BucketServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create Bucket\n   * @param {EngineCreateBucketRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BucketServiceApi\n   */\n  public createBucket(body: EngineCreateBucketRequest, options?: any) {\n    return BucketServiceApiFp(this.configuration).createBucket(body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Remove Bucket\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BucketServiceApi\n   */\n  public deleteBucket(id: string, domain_id?: string, options?: any) {\n    return BucketServiceApiFp(this.configuration).deleteBucket(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Bucket item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BucketServiceApi\n   */\n  public readBucket(id: string, domain_id?: string, options?: any) {\n    return BucketServiceApiFp(this.configuration).readBucket(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of Bucket\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BucketServiceApi\n   */\n  public searchBucket(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return BucketServiceApiFp(this.configuration).searchBucket(\n      page,\n      size,\n      q,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update Bucket\n   * @param {string} id\n   * @param {EngineUpdateBucketRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BucketServiceApi\n   */\n  public updateBucket(\n    id: string,\n    body: EngineUpdateBucketRequest,\n    options?: any\n  ) {\n    return BucketServiceApiFp(this.configuration).updateBucket(\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n}\n\n/**\n * CalendarServiceApi - axios parameter creator\n * @export\n */\nexport const CalendarServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create calendar\n     * @param {EngineCreateCalendarRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createCalendar(\n      body: EngineCreateCalendarRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createCalendar.'\n        )\n      }\n      const localVarPath = `/calendars`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateCalendarRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove calendar\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteCalendar(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteCalendar.'\n        )\n      }\n      const localVarPath = `/calendars/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Calendar item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readCalendar(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readCalendar.'\n        )\n      }\n      const localVarPath = `/calendars/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of calendar\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchCalendar(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/calendars`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List timezones\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchTimezones(\n      page?: number,\n      size?: number,\n      q?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/calendars/timezones`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update calendar\n     * @param {string} id\n     * @param {EngineUpdateCalendarRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateCalendar(\n      id: string,\n      body: EngineUpdateCalendarRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateCalendar.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateCalendar.'\n        )\n      }\n      const localVarPath = `/calendars/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateCalendarRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * CalendarServiceApi - functional programming interface\n * @export\n */\nexport const CalendarServiceApiFp = function(configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Create calendar\n     * @param {EngineCreateCalendarRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createCalendar(\n      body: EngineCreateCalendarRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineCalendar> {\n      const localVarAxiosArgs = CalendarServiceApiAxiosParamCreator(\n        configuration\n      ).createCalendar(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove calendar\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteCalendar(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineCalendar> {\n      const localVarAxiosArgs = CalendarServiceApiAxiosParamCreator(\n        configuration\n      ).deleteCalendar(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Calendar item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readCalendar(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineCalendar> {\n      const localVarAxiosArgs = CalendarServiceApiAxiosParamCreator(\n        configuration\n      ).readCalendar(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of calendar\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchCalendar(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListCalendar> {\n      const localVarAxiosArgs = CalendarServiceApiAxiosParamCreator(\n        configuration\n      ).searchCalendar(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List timezones\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchTimezones(\n      page?: number,\n      size?: number,\n      q?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListTimezoneResponse> {\n      const localVarAxiosArgs = CalendarServiceApiAxiosParamCreator(\n        configuration\n      ).searchTimezones(page, size, q, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update calendar\n     * @param {string} id\n     * @param {EngineUpdateCalendarRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateCalendar(\n      id: string,\n      body: EngineUpdateCalendarRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineCalendar> {\n      const localVarAxiosArgs = CalendarServiceApiAxiosParamCreator(\n        configuration\n      ).updateCalendar(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * CalendarServiceApi - factory interface\n * @export\n */\nexport const CalendarServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create calendar\n     * @param {EngineCreateCalendarRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createCalendar(body: EngineCreateCalendarRequest, options?: any) {\n      return CalendarServiceApiFp(configuration).createCalendar(body, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Remove calendar\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteCalendar(id: string, domain_id?: string, options?: any) {\n      return CalendarServiceApiFp(configuration).deleteCalendar(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Calendar item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readCalendar(id: string, domain_id?: string, options?: any) {\n      return CalendarServiceApiFp(configuration).readCalendar(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of calendar\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchCalendar(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return CalendarServiceApiFp(configuration).searchCalendar(\n        page,\n        size,\n        q,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List timezones\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchTimezones(page?: number, size?: number, q?: string, options?: any) {\n      return CalendarServiceApiFp(configuration).searchTimezones(\n        page,\n        size,\n        q,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update calendar\n     * @param {string} id\n     * @param {EngineUpdateCalendarRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateCalendar(\n      id: string,\n      body: EngineUpdateCalendarRequest,\n      options?: any\n    ) {\n      return CalendarServiceApiFp(configuration).updateCalendar(\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * CalendarServiceApi - object-oriented interface\n * @export\n * @class CalendarServiceApi\n * @extends {BaseAPI}\n */\nexport class CalendarServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create calendar\n   * @param {EngineCreateCalendarRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof CalendarServiceApi\n   */\n  public createCalendar(body: EngineCreateCalendarRequest, options?: any) {\n    return CalendarServiceApiFp(this.configuration).createCalendar(\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove calendar\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof CalendarServiceApi\n   */\n  public deleteCalendar(id: string, domain_id?: string, options?: any) {\n    return CalendarServiceApiFp(this.configuration).deleteCalendar(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Calendar item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof CalendarServiceApi\n   */\n  public readCalendar(id: string, domain_id?: string, options?: any) {\n    return CalendarServiceApiFp(this.configuration).readCalendar(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of calendar\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof CalendarServiceApi\n   */\n  public searchCalendar(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return CalendarServiceApiFp(this.configuration).searchCalendar(\n      page,\n      size,\n      q,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List timezones\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof CalendarServiceApi\n   */\n  public searchTimezones(\n    page?: number,\n    size?: number,\n    q?: string,\n    options?: any\n  ) {\n    return CalendarServiceApiFp(this.configuration).searchTimezones(\n      page,\n      size,\n      q,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update calendar\n   * @param {string} id\n   * @param {EngineUpdateCalendarRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof CalendarServiceApi\n   */\n  public updateCalendar(\n    id: string,\n    body: EngineUpdateCalendarRequest,\n    options?: any\n  ) {\n    return CalendarServiceApiFp(this.configuration).updateCalendar(\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n}\n\n/**\n * CommunicationTypeServiceApi - axios parameter creator\n * @export\n */\nexport const CommunicationTypeServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create CommunicationType\n     * @param {EngineCommunicationTypeRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createCommunicationType(\n      body: EngineCommunicationTypeRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createCommunicationType.'\n        )\n      }\n      const localVarPath = `/call_center/communication_type`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCommunicationTypeRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove CommunicationType\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteCommunicationType(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteCommunicationType.'\n        )\n      }\n      const localVarPath = `/call_center/communication_type/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary CommunicationType item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readCommunicationType(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readCommunicationType.'\n        )\n      }\n      const localVarPath = `/call_center/communication_type/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of CommunicationType\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchCommunicationType(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/call_center/communication_type`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update CommunicationType\n     * @param {string} id\n     * @param {EngineUpdateCommunicationTypeRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateCommunicationType(\n      id: string,\n      body: EngineUpdateCommunicationTypeRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateCommunicationType.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateCommunicationType.'\n        )\n      }\n      const localVarPath = `/call_center/communication_type/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateCommunicationTypeRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * CommunicationTypeServiceApi - functional programming interface\n * @export\n */\nexport const CommunicationTypeServiceApiFp = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create CommunicationType\n     * @param {EngineCommunicationTypeRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createCommunicationType(\n      body: EngineCommunicationTypeRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineCommunicationType> {\n      const localVarAxiosArgs = CommunicationTypeServiceApiAxiosParamCreator(\n        configuration\n      ).createCommunicationType(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove CommunicationType\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteCommunicationType(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineCommunicationType> {\n      const localVarAxiosArgs = CommunicationTypeServiceApiAxiosParamCreator(\n        configuration\n      ).deleteCommunicationType(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary CommunicationType item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readCommunicationType(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineCommunicationType> {\n      const localVarAxiosArgs = CommunicationTypeServiceApiAxiosParamCreator(\n        configuration\n      ).readCommunicationType(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of CommunicationType\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchCommunicationType(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListCommunicationType> {\n      const localVarAxiosArgs = CommunicationTypeServiceApiAxiosParamCreator(\n        configuration\n      ).searchCommunicationType(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update CommunicationType\n     * @param {string} id\n     * @param {EngineUpdateCommunicationTypeRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateCommunicationType(\n      id: string,\n      body: EngineUpdateCommunicationTypeRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineCommunicationType> {\n      const localVarAxiosArgs = CommunicationTypeServiceApiAxiosParamCreator(\n        configuration\n      ).updateCommunicationType(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * CommunicationTypeServiceApi - factory interface\n * @export\n */\nexport const CommunicationTypeServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create CommunicationType\n     * @param {EngineCommunicationTypeRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createCommunicationType(\n      body: EngineCommunicationTypeRequest,\n      options?: any\n    ) {\n      return CommunicationTypeServiceApiFp(\n        configuration\n      ).createCommunicationType(body, options)(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove CommunicationType\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteCommunicationType(id: string, domain_id?: string, options?: any) {\n      return CommunicationTypeServiceApiFp(\n        configuration\n      ).deleteCommunicationType(id, domain_id, options)(axios, basePath)\n    },\n    /**\n     *\n     * @summary CommunicationType item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readCommunicationType(id: string, domain_id?: string, options?: any) {\n      return CommunicationTypeServiceApiFp(configuration).readCommunicationType(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of CommunicationType\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchCommunicationType(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return CommunicationTypeServiceApiFp(\n        configuration\n      ).searchCommunicationType(page, size, q, domain_id, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Update CommunicationType\n     * @param {string} id\n     * @param {EngineUpdateCommunicationTypeRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateCommunicationType(\n      id: string,\n      body: EngineUpdateCommunicationTypeRequest,\n      options?: any\n    ) {\n      return CommunicationTypeServiceApiFp(\n        configuration\n      ).updateCommunicationType(id, body, options)(axios, basePath)\n    },\n  }\n}\n\n/**\n * CommunicationTypeServiceApi - object-oriented interface\n * @export\n * @class CommunicationTypeServiceApi\n * @extends {BaseAPI}\n */\nexport class CommunicationTypeServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create CommunicationType\n   * @param {EngineCommunicationTypeRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof CommunicationTypeServiceApi\n   */\n  public createCommunicationType(\n    body: EngineCommunicationTypeRequest,\n    options?: any\n  ) {\n    return CommunicationTypeServiceApiFp(\n      this.configuration\n    ).createCommunicationType(body, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove CommunicationType\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof CommunicationTypeServiceApi\n   */\n  public deleteCommunicationType(\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return CommunicationTypeServiceApiFp(\n      this.configuration\n    ).deleteCommunicationType(id, domain_id, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary CommunicationType item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof CommunicationTypeServiceApi\n   */\n  public readCommunicationType(id: string, domain_id?: string, options?: any) {\n    return CommunicationTypeServiceApiFp(\n      this.configuration\n    ).readCommunicationType(id, domain_id, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of CommunicationType\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof CommunicationTypeServiceApi\n   */\n  public searchCommunicationType(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return CommunicationTypeServiceApiFp(\n      this.configuration\n    ).searchCommunicationType(page, size, q, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Update CommunicationType\n   * @param {string} id\n   * @param {EngineUpdateCommunicationTypeRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof CommunicationTypeServiceApi\n   */\n  public updateCommunicationType(\n    id: string,\n    body: EngineUpdateCommunicationTypeRequest,\n    options?: any\n  ) {\n    return CommunicationTypeServiceApiFp(\n      this.configuration\n    ).updateCommunicationType(id, body, options)(this.axios, this.basePath)\n  }\n}\n\n/**\n * ListServiceApi - axios parameter creator\n * @export\n */\nexport const ListServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create List\n     * @param {EngineCreateListRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createList(body: EngineCreateListRequest, options: any = {}): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createList.'\n        )\n      }\n      const localVarPath = `/call_center/list`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateListRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Create ListCommunication\n     * @param {string} list_id\n     * @param {EngineCreateListCommunicationRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createListCommunication(\n      list_id: string,\n      body: EngineCreateListCommunicationRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'list_id' is not null or undefined\n      if (list_id === null || list_id === undefined) {\n        throw new RequiredError(\n          'list_id',\n          'Required parameter list_id was null or undefined when calling createListCommunication.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createListCommunication.'\n        )\n      }\n      const localVarPath = `/call_center/list/{list_id}/communication`.replace(\n        `{${'list_id'}}`,\n        encodeURIComponent(String(list_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateListCommunicationRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove list\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteList(id: string, domain_id?: string, options: any = {}): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteList.'\n        )\n      }\n      const localVarPath = `/call_center/list/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove ListCommunication\n     * @param {string} list_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteListCommunication(\n      list_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'list_id' is not null or undefined\n      if (list_id === null || list_id === undefined) {\n        throw new RequiredError(\n          'list_id',\n          'Required parameter list_id was null or undefined when calling deleteListCommunication.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteListCommunication.'\n        )\n      }\n      const localVarPath = `/call_center/list/{list_id}/communication/{id}`\n        .replace(`{${'list_id'}}`, encodeURIComponent(String(list_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readList(id: string, domain_id?: string, options: any = {}): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readList.'\n        )\n      }\n      const localVarPath = `/call_center/list/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List item\n     * @param {string} list_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readListCommunication(\n      list_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'list_id' is not null or undefined\n      if (list_id === null || list_id === undefined) {\n        throw new RequiredError(\n          'list_id',\n          'Required parameter list_id was null or undefined when calling readListCommunication.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readListCommunication.'\n        )\n      }\n      const localVarPath = `/call_center/list/{list_id}/communication/{id}`\n        .replace(`{${'list_id'}}`, encodeURIComponent(String(list_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of List\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchList(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/call_center/list`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of List\n     * @param {string} list_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchListCommunication(\n      list_id: string,\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'list_id' is not null or undefined\n      if (list_id === null || list_id === undefined) {\n        throw new RequiredError(\n          'list_id',\n          'Required parameter list_id was null or undefined when calling searchListCommunication.'\n        )\n      }\n      const localVarPath = `/call_center/list/{list_id}/communication`.replace(\n        `{${'list_id'}}`,\n        encodeURIComponent(String(list_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update list\n     * @param {string} id\n     * @param {EngineUpdateListRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateList(\n      id: string,\n      body: EngineUpdateListRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateList.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateList.'\n        )\n      }\n      const localVarPath = `/call_center/list/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateListRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update ListCommunication\n     * @param {string} list_id\n     * @param {string} id\n     * @param {EngineUpdateListCommunicationRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateListCommunication(\n      list_id: string,\n      id: string,\n      body: EngineUpdateListCommunicationRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'list_id' is not null or undefined\n      if (list_id === null || list_id === undefined) {\n        throw new RequiredError(\n          'list_id',\n          'Required parameter list_id was null or undefined when calling updateListCommunication.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateListCommunication.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateListCommunication.'\n        )\n      }\n      const localVarPath = `/call_center/list/{list_id}/communication/{id}`\n        .replace(`{${'list_id'}}`, encodeURIComponent(String(list_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateListCommunicationRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * ListServiceApi - functional programming interface\n * @export\n */\nexport const ListServiceApiFp = function(configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Create List\n     * @param {EngineCreateListRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createList(\n      body: EngineCreateListRequest,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineList> {\n      const localVarAxiosArgs = ListServiceApiAxiosParamCreator(\n        configuration\n      ).createList(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Create ListCommunication\n     * @param {string} list_id\n     * @param {EngineCreateListCommunicationRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createListCommunication(\n      list_id: string,\n      body: EngineCreateListCommunicationRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListCommunication> {\n      const localVarAxiosArgs = ListServiceApiAxiosParamCreator(\n        configuration\n      ).createListCommunication(list_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove list\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteList(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineList> {\n      const localVarAxiosArgs = ListServiceApiAxiosParamCreator(\n        configuration\n      ).deleteList(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove ListCommunication\n     * @param {string} list_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteListCommunication(\n      list_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListCommunication> {\n      const localVarAxiosArgs = ListServiceApiAxiosParamCreator(\n        configuration\n      ).deleteListCommunication(list_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readList(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineList> {\n      const localVarAxiosArgs = ListServiceApiAxiosParamCreator(\n        configuration\n      ).readList(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List item\n     * @param {string} list_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readListCommunication(\n      list_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListCommunication> {\n      const localVarAxiosArgs = ListServiceApiAxiosParamCreator(\n        configuration\n      ).readListCommunication(list_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of List\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchList(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListOfList> {\n      const localVarAxiosArgs = ListServiceApiAxiosParamCreator(\n        configuration\n      ).searchList(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of List\n     * @param {string} list_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchListCommunication(\n      list_id: string,\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListOfListCommunication> {\n      const localVarAxiosArgs = ListServiceApiAxiosParamCreator(\n        configuration\n      ).searchListCommunication(list_id, page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update list\n     * @param {string} id\n     * @param {EngineUpdateListRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateList(\n      id: string,\n      body: EngineUpdateListRequest,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineList> {\n      const localVarAxiosArgs = ListServiceApiAxiosParamCreator(\n        configuration\n      ).updateList(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update ListCommunication\n     * @param {string} list_id\n     * @param {string} id\n     * @param {EngineUpdateListCommunicationRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateListCommunication(\n      list_id: string,\n      id: string,\n      body: EngineUpdateListCommunicationRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListCommunication> {\n      const localVarAxiosArgs = ListServiceApiAxiosParamCreator(\n        configuration\n      ).updateListCommunication(list_id, id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * ListServiceApi - factory interface\n * @export\n */\nexport const ListServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create List\n     * @param {EngineCreateListRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createList(body: EngineCreateListRequest, options?: any) {\n      return ListServiceApiFp(configuration).createList(body, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Create ListCommunication\n     * @param {string} list_id\n     * @param {EngineCreateListCommunicationRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createListCommunication(\n      list_id: string,\n      body: EngineCreateListCommunicationRequest,\n      options?: any\n    ) {\n      return ListServiceApiFp(configuration).createListCommunication(\n        list_id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove list\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteList(id: string, domain_id?: string, options?: any) {\n      return ListServiceApiFp(configuration).deleteList(id, domain_id, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Remove ListCommunication\n     * @param {string} list_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteListCommunication(\n      list_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return ListServiceApiFp(configuration).deleteListCommunication(\n        list_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readList(id: string, domain_id?: string, options?: any) {\n      return ListServiceApiFp(configuration).readList(id, domain_id, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary List item\n     * @param {string} list_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readListCommunication(\n      list_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return ListServiceApiFp(configuration).readListCommunication(\n        list_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of List\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchList(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return ListServiceApiFp(configuration).searchList(\n        page,\n        size,\n        q,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of List\n     * @param {string} list_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchListCommunication(\n      list_id: string,\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return ListServiceApiFp(configuration).searchListCommunication(\n        list_id,\n        page,\n        size,\n        q,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update list\n     * @param {string} id\n     * @param {EngineUpdateListRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateList(id: string, body: EngineUpdateListRequest, options?: any) {\n      return ListServiceApiFp(configuration).updateList(id, body, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Update ListCommunication\n     * @param {string} list_id\n     * @param {string} id\n     * @param {EngineUpdateListCommunicationRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateListCommunication(\n      list_id: string,\n      id: string,\n      body: EngineUpdateListCommunicationRequest,\n      options?: any\n    ) {\n      return ListServiceApiFp(configuration).updateListCommunication(\n        list_id,\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * ListServiceApi - object-oriented interface\n * @export\n * @class ListServiceApi\n * @extends {BaseAPI}\n */\nexport class ListServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create List\n   * @param {EngineCreateListRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ListServiceApi\n   */\n  public createList(body: EngineCreateListRequest, options?: any) {\n    return ListServiceApiFp(this.configuration).createList(body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Create ListCommunication\n   * @param {string} list_id\n   * @param {EngineCreateListCommunicationRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ListServiceApi\n   */\n  public createListCommunication(\n    list_id: string,\n    body: EngineCreateListCommunicationRequest,\n    options?: any\n  ) {\n    return ListServiceApiFp(this.configuration).createListCommunication(\n      list_id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove list\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ListServiceApi\n   */\n  public deleteList(id: string, domain_id?: string, options?: any) {\n    return ListServiceApiFp(this.configuration).deleteList(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove ListCommunication\n   * @param {string} list_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ListServiceApi\n   */\n  public deleteListCommunication(\n    list_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return ListServiceApiFp(this.configuration).deleteListCommunication(\n      list_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ListServiceApi\n   */\n  public readList(id: string, domain_id?: string, options?: any) {\n    return ListServiceApiFp(this.configuration).readList(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List item\n   * @param {string} list_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ListServiceApi\n   */\n  public readListCommunication(\n    list_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return ListServiceApiFp(this.configuration).readListCommunication(\n      list_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of List\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ListServiceApi\n   */\n  public searchList(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return ListServiceApiFp(this.configuration).searchList(\n      page,\n      size,\n      q,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of List\n   * @param {string} list_id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ListServiceApi\n   */\n  public searchListCommunication(\n    list_id: string,\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return ListServiceApiFp(this.configuration).searchListCommunication(\n      list_id,\n      page,\n      size,\n      q,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update list\n   * @param {string} id\n   * @param {EngineUpdateListRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ListServiceApi\n   */\n  public updateList(id: string, body: EngineUpdateListRequest, options?: any) {\n    return ListServiceApiFp(this.configuration).updateList(id, body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Update ListCommunication\n   * @param {string} list_id\n   * @param {string} id\n   * @param {EngineUpdateListCommunicationRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ListServiceApi\n   */\n  public updateListCommunication(\n    list_id: string,\n    id: string,\n    body: EngineUpdateListCommunicationRequest,\n    options?: any\n  ) {\n    return ListServiceApiFp(this.configuration).updateListCommunication(\n      list_id,\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n}\n\n/**\n * MediaFileServiceApi - axios parameter creator\n * @export\n */\nexport const MediaFileServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Remove MediaFile\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteMediaFile(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteMediaFile.'\n        )\n      }\n      const localVarPath = `/storage/media/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary MediaFile item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readMediaFile(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readMediaFile.'\n        )\n      }\n      const localVarPath = `/storage/media/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Search MediaFile\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchMediaFile(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/storage/media`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * MediaFileServiceApi - functional programming interface\n * @export\n */\nexport const MediaFileServiceApiFp = function(configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Remove MediaFile\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteMediaFile(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<StorageMediaFile> {\n      const localVarAxiosArgs = MediaFileServiceApiAxiosParamCreator(\n        configuration\n      ).deleteMediaFile(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary MediaFile item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readMediaFile(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<StorageMediaFile> {\n      const localVarAxiosArgs = MediaFileServiceApiAxiosParamCreator(\n        configuration\n      ).readMediaFile(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Search MediaFile\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchMediaFile(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<StorageListMedia> {\n      const localVarAxiosArgs = MediaFileServiceApiAxiosParamCreator(\n        configuration\n      ).searchMediaFile(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * MediaFileServiceApi - factory interface\n * @export\n */\nexport const MediaFileServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Remove MediaFile\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteMediaFile(id: string, domain_id?: string, options?: any) {\n      return MediaFileServiceApiFp(configuration).deleteMediaFile(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary MediaFile item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readMediaFile(id: string, domain_id?: string, options?: any) {\n      return MediaFileServiceApiFp(configuration).readMediaFile(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Search MediaFile\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchMediaFile(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return MediaFileServiceApiFp(configuration).searchMediaFile(\n        page,\n        size,\n        q,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * MediaFileServiceApi - object-oriented interface\n * @export\n * @class MediaFileServiceApi\n * @extends {BaseAPI}\n */\nexport class MediaFileServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Remove MediaFile\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MediaFileServiceApi\n   */\n  public deleteMediaFile(id: string, domain_id?: string, options?: any) {\n    return MediaFileServiceApiFp(this.configuration).deleteMediaFile(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary MediaFile item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MediaFileServiceApi\n   */\n  public readMediaFile(id: string, domain_id?: string, options?: any) {\n    return MediaFileServiceApiFp(this.configuration).readMediaFile(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Search MediaFile\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MediaFileServiceApi\n   */\n  public searchMediaFile(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return MediaFileServiceApiFp(this.configuration).searchMediaFile(\n      page,\n      size,\n      q,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n}\n\n/**\n * MemberServiceApi - axios parameter creator\n * @export\n */\nexport const MemberServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create Member\n     * @param {string} queue_id\n     * @param {EngineCreateMemberRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createMember(\n      queue_id: string,\n      body: EngineCreateMemberRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling createMember.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createMember.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/members`.replace(\n        `{${'queue_id'}}`,\n        encodeURIComponent(String(queue_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateMemberRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Create Member\n     * @param {string} queue_id\n     * @param {EngineCreateMemberBulkRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createMemberBulk(\n      queue_id: string,\n      body: EngineCreateMemberBulkRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling createMemberBulk.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createMemberBulk.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/members/bulk`.replace(\n        `{${'queue_id'}}`,\n        encodeURIComponent(String(queue_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateMemberBulkRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary DeleteMember\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteMember(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling deleteMember.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteMember.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/members/{id}`\n        .replace(`{${'queue_id'}}`, encodeURIComponent(String(queue_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary DeleteMembers\n     * @param {string} queue_id\n     * @param {EngineDeleteMembersRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteMembers(\n      queue_id: string,\n      body: EngineDeleteMembersRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling deleteMembers.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling deleteMembers.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/members`.replace(\n        `{${'queue_id'}}`,\n        encodeURIComponent(String(queue_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineDeleteMembersRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary ReadQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readMember(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling readMember.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readMember.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/members/{id}`\n        .replace(`{${'queue_id'}}`, encodeURIComponent(String(queue_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of Member\n     * @param {string} queue_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchMember(\n      queue_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling searchMember.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/members`.replace(\n        `{${'queue_id'}}`,\n        encodeURIComponent(String(queue_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary SearchMemberAttempts\n     * @param {string} queue_id\n     * @param {string} member_id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchMemberAttempts(\n      queue_id: string,\n      member_id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling searchMemberAttempts.'\n        )\n      }\n      // verify required parameter 'member_id' is not null or undefined\n      if (member_id === null || member_id === undefined) {\n        throw new RequiredError(\n          'member_id',\n          'Required parameter member_id was null or undefined when calling searchMemberAttempts.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/members/{member_id}/attempts`\n        .replace(`{${'queue_id'}}`, encodeURIComponent(String(queue_id)))\n        .replace(`{${'member_id'}}`, encodeURIComponent(String(member_id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary UpdateMember\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {EngineUpdateMemberRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateMember(\n      queue_id: string,\n      id: string,\n      body: EngineUpdateMemberRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling updateMember.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateMember.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateMember.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/members/{id}`\n        .replace(`{${'queue_id'}}`, encodeURIComponent(String(queue_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateMemberRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * MemberServiceApi - functional programming interface\n * @export\n */\nexport const MemberServiceApiFp = function(configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Create Member\n     * @param {string} queue_id\n     * @param {EngineCreateMemberRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createMember(\n      queue_id: string,\n      body: EngineCreateMemberRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineMember> {\n      const localVarAxiosArgs = MemberServiceApiAxiosParamCreator(\n        configuration\n      ).createMember(queue_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Create Member\n     * @param {string} queue_id\n     * @param {EngineCreateMemberBulkRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createMemberBulk(\n      queue_id: string,\n      body: EngineCreateMemberBulkRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineMemberBulkResponse> {\n      const localVarAxiosArgs = MemberServiceApiAxiosParamCreator(\n        configuration\n      ).createMemberBulk(queue_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary DeleteMember\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteMember(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineMember> {\n      const localVarAxiosArgs = MemberServiceApiAxiosParamCreator(\n        configuration\n      ).deleteMember(queue_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary DeleteMembers\n     * @param {string} queue_id\n     * @param {EngineDeleteMembersRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteMembers(\n      queue_id: string,\n      body: EngineDeleteMembersRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListMember> {\n      const localVarAxiosArgs = MemberServiceApiAxiosParamCreator(\n        configuration\n      ).deleteMembers(queue_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary ReadQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readMember(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineMember> {\n      const localVarAxiosArgs = MemberServiceApiAxiosParamCreator(\n        configuration\n      ).readMember(queue_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of Member\n     * @param {string} queue_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchMember(\n      queue_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListMember> {\n      const localVarAxiosArgs = MemberServiceApiAxiosParamCreator(\n        configuration\n      ).searchMember(queue_id, page, size, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary SearchMemberAttempts\n     * @param {string} queue_id\n     * @param {string} member_id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchMemberAttempts(\n      queue_id: string,\n      member_id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListMemberAttempt> {\n      const localVarAxiosArgs = MemberServiceApiAxiosParamCreator(\n        configuration\n      ).searchMemberAttempts(queue_id, member_id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary UpdateMember\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {EngineUpdateMemberRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateMember(\n      queue_id: string,\n      id: string,\n      body: EngineUpdateMemberRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineMember> {\n      const localVarAxiosArgs = MemberServiceApiAxiosParamCreator(\n        configuration\n      ).updateMember(queue_id, id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * MemberServiceApi - factory interface\n * @export\n */\nexport const MemberServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create Member\n     * @param {string} queue_id\n     * @param {EngineCreateMemberRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createMember(\n      queue_id: string,\n      body: EngineCreateMemberRequest,\n      options?: any\n    ) {\n      return MemberServiceApiFp(configuration).createMember(\n        queue_id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Create Member\n     * @param {string} queue_id\n     * @param {EngineCreateMemberBulkRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createMemberBulk(\n      queue_id: string,\n      body: EngineCreateMemberBulkRequest,\n      options?: any\n    ) {\n      return MemberServiceApiFp(configuration).createMemberBulk(\n        queue_id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary DeleteMember\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteMember(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return MemberServiceApiFp(configuration).deleteMember(\n        queue_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary DeleteMembers\n     * @param {string} queue_id\n     * @param {EngineDeleteMembersRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteMembers(\n      queue_id: string,\n      body: EngineDeleteMembersRequest,\n      options?: any\n    ) {\n      return MemberServiceApiFp(configuration).deleteMembers(\n        queue_id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary ReadQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readMember(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return MemberServiceApiFp(configuration).readMember(\n        queue_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of Member\n     * @param {string} queue_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchMember(\n      queue_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ) {\n      return MemberServiceApiFp(configuration).searchMember(\n        queue_id,\n        page,\n        size,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary SearchMemberAttempts\n     * @param {string} queue_id\n     * @param {string} member_id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchMemberAttempts(\n      queue_id: string,\n      member_id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return MemberServiceApiFp(configuration).searchMemberAttempts(\n        queue_id,\n        member_id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary UpdateMember\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {EngineUpdateMemberRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateMember(\n      queue_id: string,\n      id: string,\n      body: EngineUpdateMemberRequest,\n      options?: any\n    ) {\n      return MemberServiceApiFp(configuration).updateMember(\n        queue_id,\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * MemberServiceApi - object-oriented interface\n * @export\n * @class MemberServiceApi\n * @extends {BaseAPI}\n */\nexport class MemberServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create Member\n   * @param {string} queue_id\n   * @param {EngineCreateMemberRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MemberServiceApi\n   */\n  public createMember(\n    queue_id: string,\n    body: EngineCreateMemberRequest,\n    options?: any\n  ) {\n    return MemberServiceApiFp(this.configuration).createMember(\n      queue_id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Create Member\n   * @param {string} queue_id\n   * @param {EngineCreateMemberBulkRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MemberServiceApi\n   */\n  public createMemberBulk(\n    queue_id: string,\n    body: EngineCreateMemberBulkRequest,\n    options?: any\n  ) {\n    return MemberServiceApiFp(this.configuration).createMemberBulk(\n      queue_id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary DeleteMember\n   * @param {string} queue_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MemberServiceApi\n   */\n  public deleteMember(\n    queue_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return MemberServiceApiFp(this.configuration).deleteMember(\n      queue_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary DeleteMembers\n   * @param {string} queue_id\n   * @param {EngineDeleteMembersRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MemberServiceApi\n   */\n  public deleteMembers(\n    queue_id: string,\n    body: EngineDeleteMembersRequest,\n    options?: any\n  ) {\n    return MemberServiceApiFp(this.configuration).deleteMembers(\n      queue_id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary ReadQueueRouting\n   * @param {string} queue_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MemberServiceApi\n   */\n  public readMember(\n    queue_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return MemberServiceApiFp(this.configuration).readMember(\n      queue_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of Member\n   * @param {string} queue_id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MemberServiceApi\n   */\n  public searchMember(\n    queue_id: string,\n    page?: number,\n    size?: number,\n    domain_id?: string,\n    options?: any\n  ) {\n    return MemberServiceApiFp(this.configuration).searchMember(\n      queue_id,\n      page,\n      size,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary SearchMemberAttempts\n   * @param {string} queue_id\n   * @param {string} member_id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MemberServiceApi\n   */\n  public searchMemberAttempts(\n    queue_id: string,\n    member_id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return MemberServiceApiFp(this.configuration).searchMemberAttempts(\n      queue_id,\n      member_id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary UpdateMember\n   * @param {string} queue_id\n   * @param {string} id\n   * @param {EngineUpdateMemberRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MemberServiceApi\n   */\n  public updateMember(\n    queue_id: string,\n    id: string,\n    body: EngineUpdateMemberRequest,\n    options?: any\n  ) {\n    return MemberServiceApiFp(this.configuration).updateMember(\n      queue_id,\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n}\n\n/**\n * OutboundResourceGroupServiceApi - axios parameter creator\n * @export\n */\nexport const OutboundResourceGroupServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create OutboundResourceGroup\n     * @param {EngineCreateOutboundResourceGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOutboundResourceGroup(\n      body: EngineCreateOutboundResourceGroupRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createOutboundResourceGroup.'\n        )\n      }\n      const localVarPath = `/call_center/resource_group`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateOutboundResourceGroupRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Create OutboundResourceGroup\n     * @param {string} group_id\n     * @param {EngineCreateOutboundResourceInGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOutboundResourceInGroup(\n      group_id: string,\n      body: EngineCreateOutboundResourceInGroupRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'group_id' is not null or undefined\n      if (group_id === null || group_id === undefined) {\n        throw new RequiredError(\n          'group_id',\n          'Required parameter group_id was null or undefined when calling createOutboundResourceInGroup.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createOutboundResourceInGroup.'\n        )\n      }\n      const localVarPath = `/call_center/resource_group/{group_id}/resource`.replace(\n        `{${'group_id'}}`,\n        encodeURIComponent(String(group_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateOutboundResourceInGroupRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove OutboundResourceGroup\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOutboundResourceGroup(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteOutboundResourceGroup.'\n        )\n      }\n      const localVarPath = `/call_center/resource_group/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove OutboundResourceInGroup\n     * @param {string} group_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOutboundResourceInGroup(\n      group_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'group_id' is not null or undefined\n      if (group_id === null || group_id === undefined) {\n        throw new RequiredError(\n          'group_id',\n          'Required parameter group_id was null or undefined when calling deleteOutboundResourceInGroup.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteOutboundResourceInGroup.'\n        )\n      }\n      const localVarPath = `/call_center/resource_group/{group_id}/resource/{id}`\n        .replace(`{${'group_id'}}`, encodeURIComponent(String(group_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary OutboundResourceGroup item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readOutboundResourceGroup(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readOutboundResourceGroup.'\n        )\n      }\n      const localVarPath = `/call_center/resource_group/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary OutboundResourceInGroup item\n     * @param {string} group_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readOutboundResourceInGroup(\n      group_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'group_id' is not null or undefined\n      if (group_id === null || group_id === undefined) {\n        throw new RequiredError(\n          'group_id',\n          'Required parameter group_id was null or undefined when calling readOutboundResourceInGroup.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readOutboundResourceInGroup.'\n        )\n      }\n      const localVarPath = `/call_center/resource_group/{group_id}/resource/{id}`\n        .replace(`{${'group_id'}}`, encodeURIComponent(String(group_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of OutboundResourceGroup\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchOutboundResourceGroup(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/call_center/resource_group`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of OutboundResourceInGroup\n     * @param {string} group_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchOutboundResourceInGroup(\n      group_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'group_id' is not null or undefined\n      if (group_id === null || group_id === undefined) {\n        throw new RequiredError(\n          'group_id',\n          'Required parameter group_id was null or undefined when calling searchOutboundResourceInGroup.'\n        )\n      }\n      const localVarPath = `/call_center/resource_group/{group_id}/resource`.replace(\n        `{${'group_id'}}`,\n        encodeURIComponent(String(group_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update OutboundResourceGroup\n     * @param {string} id\n     * @param {EngineUpdateOutboundResourceGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOutboundResourceGroup(\n      id: string,\n      body: EngineUpdateOutboundResourceGroupRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateOutboundResourceGroup.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateOutboundResourceGroup.'\n        )\n      }\n      const localVarPath = `/call_center/resource_group/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateOutboundResourceGroupRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update OutboundResourceInGroup\n     * @param {string} group_id\n     * @param {string} id\n     * @param {EngineUpdateOutboundResourceInGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOutboundResourceInGroup(\n      group_id: string,\n      id: string,\n      body: EngineUpdateOutboundResourceInGroupRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'group_id' is not null or undefined\n      if (group_id === null || group_id === undefined) {\n        throw new RequiredError(\n          'group_id',\n          'Required parameter group_id was null or undefined when calling updateOutboundResourceInGroup.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateOutboundResourceInGroup.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateOutboundResourceInGroup.'\n        )\n      }\n      const localVarPath = `/call_center/resource_group/{group_id}/resource/{id}`\n        .replace(`{${'group_id'}}`, encodeURIComponent(String(group_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateOutboundResourceInGroupRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * OutboundResourceGroupServiceApi - functional programming interface\n * @export\n */\nexport const OutboundResourceGroupServiceApiFp = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create OutboundResourceGroup\n     * @param {EngineCreateOutboundResourceGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOutboundResourceGroup(\n      body: EngineCreateOutboundResourceGroupRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineOutboundResourceGroup> {\n      const localVarAxiosArgs = OutboundResourceGroupServiceApiAxiosParamCreator(\n        configuration\n      ).createOutboundResourceGroup(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Create OutboundResourceGroup\n     * @param {string} group_id\n     * @param {EngineCreateOutboundResourceInGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOutboundResourceInGroup(\n      group_id: string,\n      body: EngineCreateOutboundResourceInGroupRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineOutboundResourceInGroup> {\n      const localVarAxiosArgs = OutboundResourceGroupServiceApiAxiosParamCreator(\n        configuration\n      ).createOutboundResourceInGroup(group_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove OutboundResourceGroup\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOutboundResourceGroup(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineOutboundResourceGroup> {\n      const localVarAxiosArgs = OutboundResourceGroupServiceApiAxiosParamCreator(\n        configuration\n      ).deleteOutboundResourceGroup(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove OutboundResourceInGroup\n     * @param {string} group_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOutboundResourceInGroup(\n      group_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineOutboundResourceInGroup> {\n      const localVarAxiosArgs = OutboundResourceGroupServiceApiAxiosParamCreator(\n        configuration\n      ).deleteOutboundResourceInGroup(group_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary OutboundResourceGroup item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readOutboundResourceGroup(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineOutboundResourceGroup> {\n      const localVarAxiosArgs = OutboundResourceGroupServiceApiAxiosParamCreator(\n        configuration\n      ).readOutboundResourceGroup(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary OutboundResourceInGroup item\n     * @param {string} group_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readOutboundResourceInGroup(\n      group_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineOutboundResourceInGroup> {\n      const localVarAxiosArgs = OutboundResourceGroupServiceApiAxiosParamCreator(\n        configuration\n      ).readOutboundResourceInGroup(group_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of OutboundResourceGroup\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchOutboundResourceGroup(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListOutboundResourceGroup> {\n      const localVarAxiosArgs = OutboundResourceGroupServiceApiAxiosParamCreator(\n        configuration\n      ).searchOutboundResourceGroup(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of OutboundResourceInGroup\n     * @param {string} group_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchOutboundResourceInGroup(\n      group_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListOutboundResourceInGroup> {\n      const localVarAxiosArgs = OutboundResourceGroupServiceApiAxiosParamCreator(\n        configuration\n      ).searchOutboundResourceInGroup(group_id, page, size, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update OutboundResourceGroup\n     * @param {string} id\n     * @param {EngineUpdateOutboundResourceGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOutboundResourceGroup(\n      id: string,\n      body: EngineUpdateOutboundResourceGroupRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineOutboundResourceGroup> {\n      const localVarAxiosArgs = OutboundResourceGroupServiceApiAxiosParamCreator(\n        configuration\n      ).updateOutboundResourceGroup(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update OutboundResourceInGroup\n     * @param {string} group_id\n     * @param {string} id\n     * @param {EngineUpdateOutboundResourceInGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOutboundResourceInGroup(\n      group_id: string,\n      id: string,\n      body: EngineUpdateOutboundResourceInGroupRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineOutboundResourceInGroup> {\n      const localVarAxiosArgs = OutboundResourceGroupServiceApiAxiosParamCreator(\n        configuration\n      ).updateOutboundResourceInGroup(group_id, id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * OutboundResourceGroupServiceApi - factory interface\n * @export\n */\nexport const OutboundResourceGroupServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create OutboundResourceGroup\n     * @param {EngineCreateOutboundResourceGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOutboundResourceGroup(\n      body: EngineCreateOutboundResourceGroupRequest,\n      options?: any\n    ) {\n      return OutboundResourceGroupServiceApiFp(\n        configuration\n      ).createOutboundResourceGroup(body, options)(axios, basePath)\n    },\n    /**\n     *\n     * @summary Create OutboundResourceGroup\n     * @param {string} group_id\n     * @param {EngineCreateOutboundResourceInGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOutboundResourceInGroup(\n      group_id: string,\n      body: EngineCreateOutboundResourceInGroupRequest,\n      options?: any\n    ) {\n      return OutboundResourceGroupServiceApiFp(\n        configuration\n      ).createOutboundResourceInGroup(group_id, body, options)(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove OutboundResourceGroup\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOutboundResourceGroup(id: string, domain_id?: string, options?: any) {\n      return OutboundResourceGroupServiceApiFp(\n        configuration\n      ).deleteOutboundResourceGroup(id, domain_id, options)(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove OutboundResourceInGroup\n     * @param {string} group_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOutboundResourceInGroup(\n      group_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return OutboundResourceGroupServiceApiFp(\n        configuration\n      ).deleteOutboundResourceInGroup(group_id, id, domain_id, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary OutboundResourceGroup item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readOutboundResourceGroup(id: string, domain_id?: string, options?: any) {\n      return OutboundResourceGroupServiceApiFp(\n        configuration\n      ).readOutboundResourceGroup(id, domain_id, options)(axios, basePath)\n    },\n    /**\n     *\n     * @summary OutboundResourceInGroup item\n     * @param {string} group_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readOutboundResourceInGroup(\n      group_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return OutboundResourceGroupServiceApiFp(\n        configuration\n      ).readOutboundResourceInGroup(group_id, id, domain_id, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary List of OutboundResourceGroup\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchOutboundResourceGroup(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return OutboundResourceGroupServiceApiFp(\n        configuration\n      ).searchOutboundResourceGroup(page, size, q, domain_id, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary List of OutboundResourceInGroup\n     * @param {string} group_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchOutboundResourceInGroup(\n      group_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ) {\n      return OutboundResourceGroupServiceApiFp(\n        configuration\n      ).searchOutboundResourceInGroup(group_id, page, size, domain_id, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Update OutboundResourceGroup\n     * @param {string} id\n     * @param {EngineUpdateOutboundResourceGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOutboundResourceGroup(\n      id: string,\n      body: EngineUpdateOutboundResourceGroupRequest,\n      options?: any\n    ) {\n      return OutboundResourceGroupServiceApiFp(\n        configuration\n      ).updateOutboundResourceGroup(id, body, options)(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update OutboundResourceInGroup\n     * @param {string} group_id\n     * @param {string} id\n     * @param {EngineUpdateOutboundResourceInGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOutboundResourceInGroup(\n      group_id: string,\n      id: string,\n      body: EngineUpdateOutboundResourceInGroupRequest,\n      options?: any\n    ) {\n      return OutboundResourceGroupServiceApiFp(\n        configuration\n      ).updateOutboundResourceInGroup(group_id, id, body, options)(\n        axios,\n        basePath\n      )\n    },\n  }\n}\n\n/**\n * OutboundResourceGroupServiceApi - object-oriented interface\n * @export\n * @class OutboundResourceGroupServiceApi\n * @extends {BaseAPI}\n */\nexport class OutboundResourceGroupServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create OutboundResourceGroup\n   * @param {EngineCreateOutboundResourceGroupRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceGroupServiceApi\n   */\n  public createOutboundResourceGroup(\n    body: EngineCreateOutboundResourceGroupRequest,\n    options?: any\n  ) {\n    return OutboundResourceGroupServiceApiFp(\n      this.configuration\n    ).createOutboundResourceGroup(body, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Create OutboundResourceGroup\n   * @param {string} group_id\n   * @param {EngineCreateOutboundResourceInGroupRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceGroupServiceApi\n   */\n  public createOutboundResourceInGroup(\n    group_id: string,\n    body: EngineCreateOutboundResourceInGroupRequest,\n    options?: any\n  ) {\n    return OutboundResourceGroupServiceApiFp(\n      this.configuration\n    ).createOutboundResourceInGroup(group_id, body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Remove OutboundResourceGroup\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceGroupServiceApi\n   */\n  public deleteOutboundResourceGroup(\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return OutboundResourceGroupServiceApiFp(\n      this.configuration\n    ).deleteOutboundResourceGroup(id, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Remove OutboundResourceInGroup\n   * @param {string} group_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceGroupServiceApi\n   */\n  public deleteOutboundResourceInGroup(\n    group_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return OutboundResourceGroupServiceApiFp(\n      this.configuration\n    ).deleteOutboundResourceInGroup(group_id, id, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary OutboundResourceGroup item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceGroupServiceApi\n   */\n  public readOutboundResourceGroup(\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return OutboundResourceGroupServiceApiFp(\n      this.configuration\n    ).readOutboundResourceGroup(id, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary OutboundResourceInGroup item\n   * @param {string} group_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceGroupServiceApi\n   */\n  public readOutboundResourceInGroup(\n    group_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return OutboundResourceGroupServiceApiFp(\n      this.configuration\n    ).readOutboundResourceInGroup(group_id, id, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary List of OutboundResourceGroup\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceGroupServiceApi\n   */\n  public searchOutboundResourceGroup(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return OutboundResourceGroupServiceApiFp(\n      this.configuration\n    ).searchOutboundResourceGroup(page, size, q, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary List of OutboundResourceInGroup\n   * @param {string} group_id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceGroupServiceApi\n   */\n  public searchOutboundResourceInGroup(\n    group_id: string,\n    page?: number,\n    size?: number,\n    domain_id?: string,\n    options?: any\n  ) {\n    return OutboundResourceGroupServiceApiFp(\n      this.configuration\n    ).searchOutboundResourceInGroup(group_id, page, size, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Update OutboundResourceGroup\n   * @param {string} id\n   * @param {EngineUpdateOutboundResourceGroupRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceGroupServiceApi\n   */\n  public updateOutboundResourceGroup(\n    id: string,\n    body: EngineUpdateOutboundResourceGroupRequest,\n    options?: any\n  ) {\n    return OutboundResourceGroupServiceApiFp(\n      this.configuration\n    ).updateOutboundResourceGroup(id, body, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update OutboundResourceInGroup\n   * @param {string} group_id\n   * @param {string} id\n   * @param {EngineUpdateOutboundResourceInGroupRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceGroupServiceApi\n   */\n  public updateOutboundResourceInGroup(\n    group_id: string,\n    id: string,\n    body: EngineUpdateOutboundResourceInGroupRequest,\n    options?: any\n  ) {\n    return OutboundResourceGroupServiceApiFp(\n      this.configuration\n    ).updateOutboundResourceInGroup(group_id, id, body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n}\n\n/**\n * OutboundResourceServiceApi - axios parameter creator\n * @export\n */\nexport const OutboundResourceServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create OutboundResource\n     * @param {EngineCreateOutboundResourceRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOutboundResource(\n      body: EngineCreateOutboundResourceRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createOutboundResource.'\n        )\n      }\n      const localVarPath = `/call_center/resources`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateOutboundResourceRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Create CreateOutboundResourceDisplay\n     * @param {string} resource_id\n     * @param {EngineCreateOutboundResourceDisplayRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOutboundResourceDisplay(\n      resource_id: string,\n      body: EngineCreateOutboundResourceDisplayRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'resource_id' is not null or undefined\n      if (resource_id === null || resource_id === undefined) {\n        throw new RequiredError(\n          'resource_id',\n          'Required parameter resource_id was null or undefined when calling createOutboundResourceDisplay.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createOutboundResourceDisplay.'\n        )\n      }\n      const localVarPath = `/call_center/resources/{resource_id}/display`.replace(\n        `{${'resource_id'}}`,\n        encodeURIComponent(String(resource_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateOutboundResourceDisplayRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove OutboundResource\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOutboundResource(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteOutboundResource.'\n        )\n      }\n      const localVarPath = `/call_center/resources/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove ResourceDisplay\n     * @param {string} resource_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOutboundResourceDisplay(\n      resource_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'resource_id' is not null or undefined\n      if (resource_id === null || resource_id === undefined) {\n        throw new RequiredError(\n          'resource_id',\n          'Required parameter resource_id was null or undefined when calling deleteOutboundResourceDisplay.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteOutboundResourceDisplay.'\n        )\n      }\n      const localVarPath = `/call_center/resources/{resource_id}/display/{id}`\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resource_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Patch OutboundResource\n     * @param {string} id\n     * @param {EnginePatchOutboundResourceRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchOutboundResource(\n      id: string,\n      body: EnginePatchOutboundResourceRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling patchOutboundResource.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling patchOutboundResource.'\n        )\n      }\n      const localVarPath = `/call_center/resources/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PATCH',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EnginePatchOutboundResourceRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary OutboundResource item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readOutboundResource(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readOutboundResource.'\n        )\n      }\n      const localVarPath = `/call_center/resources/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary ResourceDisplay item\n     * @param {string} resource_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readOutboundResourceDisplay(\n      resource_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'resource_id' is not null or undefined\n      if (resource_id === null || resource_id === undefined) {\n        throw new RequiredError(\n          'resource_id',\n          'Required parameter resource_id was null or undefined when calling readOutboundResourceDisplay.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readOutboundResourceDisplay.'\n        )\n      }\n      const localVarPath = `/call_center/resources/{resource_id}/display/{id}`\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resource_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of OutboundResource\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchOutboundResource(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/call_center/resources`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of ResourceDisplay\n     * @param {string} resource_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchOutboundResourceDisplay(\n      resource_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'resource_id' is not null or undefined\n      if (resource_id === null || resource_id === undefined) {\n        throw new RequiredError(\n          'resource_id',\n          'Required parameter resource_id was null or undefined when calling searchOutboundResourceDisplay.'\n        )\n      }\n      const localVarPath = `/call_center/resources/{resource_id}/display`.replace(\n        `{${'resource_id'}}`,\n        encodeURIComponent(String(resource_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update OutboundResource\n     * @param {string} id\n     * @param {EngineUpdateOutboundResourceRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOutboundResource(\n      id: string,\n      body: EngineUpdateOutboundResourceRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateOutboundResource.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateOutboundResource.'\n        )\n      }\n      const localVarPath = `/call_center/resources/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateOutboundResourceRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update ResourceDisplay\n     * @param {string} resource_id\n     * @param {string} id\n     * @param {EngineUpdateOutboundResourceDisplayRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOutboundResourceDisplay(\n      resource_id: string,\n      id: string,\n      body: EngineUpdateOutboundResourceDisplayRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'resource_id' is not null or undefined\n      if (resource_id === null || resource_id === undefined) {\n        throw new RequiredError(\n          'resource_id',\n          'Required parameter resource_id was null or undefined when calling updateOutboundResourceDisplay.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateOutboundResourceDisplay.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateOutboundResourceDisplay.'\n        )\n      }\n      const localVarPath = `/call_center/resources/{resource_id}/display/{id}`\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resource_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateOutboundResourceDisplayRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * OutboundResourceServiceApi - functional programming interface\n * @export\n */\nexport const OutboundResourceServiceApiFp = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create OutboundResource\n     * @param {EngineCreateOutboundResourceRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOutboundResource(\n      body: EngineCreateOutboundResourceRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineOutboundResource> {\n      const localVarAxiosArgs = OutboundResourceServiceApiAxiosParamCreator(\n        configuration\n      ).createOutboundResource(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Create CreateOutboundResourceDisplay\n     * @param {string} resource_id\n     * @param {EngineCreateOutboundResourceDisplayRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOutboundResourceDisplay(\n      resource_id: string,\n      body: EngineCreateOutboundResourceDisplayRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineResourceDisplay> {\n      const localVarAxiosArgs = OutboundResourceServiceApiAxiosParamCreator(\n        configuration\n      ).createOutboundResourceDisplay(resource_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove OutboundResource\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOutboundResource(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineOutboundResource> {\n      const localVarAxiosArgs = OutboundResourceServiceApiAxiosParamCreator(\n        configuration\n      ).deleteOutboundResource(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove ResourceDisplay\n     * @param {string} resource_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOutboundResourceDisplay(\n      resource_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineResourceDisplay> {\n      const localVarAxiosArgs = OutboundResourceServiceApiAxiosParamCreator(\n        configuration\n      ).deleteOutboundResourceDisplay(resource_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Patch OutboundResource\n     * @param {string} id\n     * @param {EnginePatchOutboundResourceRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchOutboundResource(\n      id: string,\n      body: EnginePatchOutboundResourceRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineOutboundResource> {\n      const localVarAxiosArgs = OutboundResourceServiceApiAxiosParamCreator(\n        configuration\n      ).patchOutboundResource(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary OutboundResource item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readOutboundResource(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineOutboundResource> {\n      const localVarAxiosArgs = OutboundResourceServiceApiAxiosParamCreator(\n        configuration\n      ).readOutboundResource(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary ResourceDisplay item\n     * @param {string} resource_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readOutboundResourceDisplay(\n      resource_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineResourceDisplay> {\n      const localVarAxiosArgs = OutboundResourceServiceApiAxiosParamCreator(\n        configuration\n      ).readOutboundResourceDisplay(resource_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of OutboundResource\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchOutboundResource(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListOutboundResource> {\n      const localVarAxiosArgs = OutboundResourceServiceApiAxiosParamCreator(\n        configuration\n      ).searchOutboundResource(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of ResourceDisplay\n     * @param {string} resource_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchOutboundResourceDisplay(\n      resource_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListOutboundResourceDisplay> {\n      const localVarAxiosArgs = OutboundResourceServiceApiAxiosParamCreator(\n        configuration\n      ).searchOutboundResourceDisplay(\n        resource_id,\n        page,\n        size,\n        domain_id,\n        options\n      )\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update OutboundResource\n     * @param {string} id\n     * @param {EngineUpdateOutboundResourceRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOutboundResource(\n      id: string,\n      body: EngineUpdateOutboundResourceRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineOutboundResource> {\n      const localVarAxiosArgs = OutboundResourceServiceApiAxiosParamCreator(\n        configuration\n      ).updateOutboundResource(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update ResourceDisplay\n     * @param {string} resource_id\n     * @param {string} id\n     * @param {EngineUpdateOutboundResourceDisplayRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOutboundResourceDisplay(\n      resource_id: string,\n      id: string,\n      body: EngineUpdateOutboundResourceDisplayRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineResourceDisplay> {\n      const localVarAxiosArgs = OutboundResourceServiceApiAxiosParamCreator(\n        configuration\n      ).updateOutboundResourceDisplay(resource_id, id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * OutboundResourceServiceApi - factory interface\n * @export\n */\nexport const OutboundResourceServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create OutboundResource\n     * @param {EngineCreateOutboundResourceRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOutboundResource(\n      body: EngineCreateOutboundResourceRequest,\n      options?: any\n    ) {\n      return OutboundResourceServiceApiFp(configuration).createOutboundResource(\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Create CreateOutboundResourceDisplay\n     * @param {string} resource_id\n     * @param {EngineCreateOutboundResourceDisplayRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOutboundResourceDisplay(\n      resource_id: string,\n      body: EngineCreateOutboundResourceDisplayRequest,\n      options?: any\n    ) {\n      return OutboundResourceServiceApiFp(\n        configuration\n      ).createOutboundResourceDisplay(resource_id, body, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Remove OutboundResource\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOutboundResource(id: string, domain_id?: string, options?: any) {\n      return OutboundResourceServiceApiFp(configuration).deleteOutboundResource(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove ResourceDisplay\n     * @param {string} resource_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOutboundResourceDisplay(\n      resource_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return OutboundResourceServiceApiFp(\n        configuration\n      ).deleteOutboundResourceDisplay(resource_id, id, domain_id, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Patch OutboundResource\n     * @param {string} id\n     * @param {EnginePatchOutboundResourceRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchOutboundResource(\n      id: string,\n      body: EnginePatchOutboundResourceRequest,\n      options?: any\n    ) {\n      return OutboundResourceServiceApiFp(configuration).patchOutboundResource(\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary OutboundResource item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readOutboundResource(id: string, domain_id?: string, options?: any) {\n      return OutboundResourceServiceApiFp(configuration).readOutboundResource(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary ResourceDisplay item\n     * @param {string} resource_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readOutboundResourceDisplay(\n      resource_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return OutboundResourceServiceApiFp(\n        configuration\n      ).readOutboundResourceDisplay(resource_id, id, domain_id, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary List of OutboundResource\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchOutboundResource(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return OutboundResourceServiceApiFp(configuration).searchOutboundResource(\n        page,\n        size,\n        q,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of ResourceDisplay\n     * @param {string} resource_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchOutboundResourceDisplay(\n      resource_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ) {\n      return OutboundResourceServiceApiFp(\n        configuration\n      ).searchOutboundResourceDisplay(\n        resource_id,\n        page,\n        size,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update OutboundResource\n     * @param {string} id\n     * @param {EngineUpdateOutboundResourceRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOutboundResource(\n      id: string,\n      body: EngineUpdateOutboundResourceRequest,\n      options?: any\n    ) {\n      return OutboundResourceServiceApiFp(configuration).updateOutboundResource(\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update ResourceDisplay\n     * @param {string} resource_id\n     * @param {string} id\n     * @param {EngineUpdateOutboundResourceDisplayRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOutboundResourceDisplay(\n      resource_id: string,\n      id: string,\n      body: EngineUpdateOutboundResourceDisplayRequest,\n      options?: any\n    ) {\n      return OutboundResourceServiceApiFp(\n        configuration\n      ).updateOutboundResourceDisplay(resource_id, id, body, options)(\n        axios,\n        basePath\n      )\n    },\n  }\n}\n\n/**\n * OutboundResourceServiceApi - object-oriented interface\n * @export\n * @class OutboundResourceServiceApi\n * @extends {BaseAPI}\n */\nexport class OutboundResourceServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create OutboundResource\n   * @param {EngineCreateOutboundResourceRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceServiceApi\n   */\n  public createOutboundResource(\n    body: EngineCreateOutboundResourceRequest,\n    options?: any\n  ) {\n    return OutboundResourceServiceApiFp(\n      this.configuration\n    ).createOutboundResource(body, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Create CreateOutboundResourceDisplay\n   * @param {string} resource_id\n   * @param {EngineCreateOutboundResourceDisplayRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceServiceApi\n   */\n  public createOutboundResourceDisplay(\n    resource_id: string,\n    body: EngineCreateOutboundResourceDisplayRequest,\n    options?: any\n  ) {\n    return OutboundResourceServiceApiFp(\n      this.configuration\n    ).createOutboundResourceDisplay(resource_id, body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Remove OutboundResource\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceServiceApi\n   */\n  public deleteOutboundResource(id: string, domain_id?: string, options?: any) {\n    return OutboundResourceServiceApiFp(\n      this.configuration\n    ).deleteOutboundResource(id, domain_id, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove ResourceDisplay\n   * @param {string} resource_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceServiceApi\n   */\n  public deleteOutboundResourceDisplay(\n    resource_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return OutboundResourceServiceApiFp(\n      this.configuration\n    ).deleteOutboundResourceDisplay(resource_id, id, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Patch OutboundResource\n   * @param {string} id\n   * @param {EnginePatchOutboundResourceRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceServiceApi\n   */\n  public patchOutboundResource(\n    id: string,\n    body: EnginePatchOutboundResourceRequest,\n    options?: any\n  ) {\n    return OutboundResourceServiceApiFp(\n      this.configuration\n    ).patchOutboundResource(id, body, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary OutboundResource item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceServiceApi\n   */\n  public readOutboundResource(id: string, domain_id?: string, options?: any) {\n    return OutboundResourceServiceApiFp(\n      this.configuration\n    ).readOutboundResource(id, domain_id, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary ResourceDisplay item\n   * @param {string} resource_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceServiceApi\n   */\n  public readOutboundResourceDisplay(\n    resource_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return OutboundResourceServiceApiFp(\n      this.configuration\n    ).readOutboundResourceDisplay(resource_id, id, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary List of OutboundResource\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceServiceApi\n   */\n  public searchOutboundResource(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return OutboundResourceServiceApiFp(\n      this.configuration\n    ).searchOutboundResource(page, size, q, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary List of ResourceDisplay\n   * @param {string} resource_id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceServiceApi\n   */\n  public searchOutboundResourceDisplay(\n    resource_id: string,\n    page?: number,\n    size?: number,\n    domain_id?: string,\n    options?: any\n  ) {\n    return OutboundResourceServiceApiFp(\n      this.configuration\n    ).searchOutboundResourceDisplay(\n      resource_id,\n      page,\n      size,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update OutboundResource\n   * @param {string} id\n   * @param {EngineUpdateOutboundResourceRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceServiceApi\n   */\n  public updateOutboundResource(\n    id: string,\n    body: EngineUpdateOutboundResourceRequest,\n    options?: any\n  ) {\n    return OutboundResourceServiceApiFp(\n      this.configuration\n    ).updateOutboundResource(id, body, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update ResourceDisplay\n   * @param {string} resource_id\n   * @param {string} id\n   * @param {EngineUpdateOutboundResourceDisplayRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OutboundResourceServiceApi\n   */\n  public updateOutboundResourceDisplay(\n    resource_id: string,\n    id: string,\n    body: EngineUpdateOutboundResourceDisplayRequest,\n    options?: any\n  ) {\n    return OutboundResourceServiceApiFp(\n      this.configuration\n    ).updateOutboundResourceDisplay(resource_id, id, body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n}\n\n/**\n * QueueBucketServiceApi - axios parameter creator\n * @export\n */\nexport const QueueBucketServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create QueueBucket\n     * @param {string} queue_id\n     * @param {EngineCreateQueueBucketRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createQueueBucket(\n      queue_id: string,\n      body: EngineCreateQueueBucketRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling createQueueBucket.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createQueueBucket.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/buckets`.replace(\n        `{${'queue_id'}}`,\n        encodeURIComponent(String(queue_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateQueueBucketRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary DeleteQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteQueueBucket(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling deleteQueueBucket.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteQueueBucket.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/buckets/{id}`\n        .replace(`{${'queue_id'}}`, encodeURIComponent(String(queue_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary ReadQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readQueueBucket(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling readQueueBucket.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readQueueBucket.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/buckets/{id}`\n        .replace(`{${'queue_id'}}`, encodeURIComponent(String(queue_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary SearchQueueRouting\n     * @param {string} queue_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchQueueBucket(\n      queue_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling searchQueueBucket.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/buckets`.replace(\n        `{${'queue_id'}}`,\n        encodeURIComponent(String(queue_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary UpdateQueueBucket\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {EngineUpdateQueueBucketRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateQueueBucket(\n      queue_id: string,\n      id: string,\n      body: EngineUpdateQueueBucketRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling updateQueueBucket.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateQueueBucket.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateQueueBucket.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/buckets/{id}`\n        .replace(`{${'queue_id'}}`, encodeURIComponent(String(queue_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateQueueBucketRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * QueueBucketServiceApi - functional programming interface\n * @export\n */\nexport const QueueBucketServiceApiFp = function(configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Create QueueBucket\n     * @param {string} queue_id\n     * @param {EngineCreateQueueBucketRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createQueueBucket(\n      queue_id: string,\n      body: EngineCreateQueueBucketRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineQueueBucket> {\n      const localVarAxiosArgs = QueueBucketServiceApiAxiosParamCreator(\n        configuration\n      ).createQueueBucket(queue_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary DeleteQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteQueueBucket(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineQueueBucket> {\n      const localVarAxiosArgs = QueueBucketServiceApiAxiosParamCreator(\n        configuration\n      ).deleteQueueBucket(queue_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary ReadQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readQueueBucket(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineQueueBucket> {\n      const localVarAxiosArgs = QueueBucketServiceApiAxiosParamCreator(\n        configuration\n      ).readQueueBucket(queue_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary SearchQueueRouting\n     * @param {string} queue_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchQueueBucket(\n      queue_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListQueueBucket> {\n      const localVarAxiosArgs = QueueBucketServiceApiAxiosParamCreator(\n        configuration\n      ).searchQueueBucket(queue_id, page, size, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary UpdateQueueBucket\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {EngineUpdateQueueBucketRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateQueueBucket(\n      queue_id: string,\n      id: string,\n      body: EngineUpdateQueueBucketRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineQueueBucket> {\n      const localVarAxiosArgs = QueueBucketServiceApiAxiosParamCreator(\n        configuration\n      ).updateQueueBucket(queue_id, id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * QueueBucketServiceApi - factory interface\n * @export\n */\nexport const QueueBucketServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create QueueBucket\n     * @param {string} queue_id\n     * @param {EngineCreateQueueBucketRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createQueueBucket(\n      queue_id: string,\n      body: EngineCreateQueueBucketRequest,\n      options?: any\n    ) {\n      return QueueBucketServiceApiFp(configuration).createQueueBucket(\n        queue_id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary DeleteQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteQueueBucket(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return QueueBucketServiceApiFp(configuration).deleteQueueBucket(\n        queue_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary ReadQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readQueueBucket(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return QueueBucketServiceApiFp(configuration).readQueueBucket(\n        queue_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary SearchQueueRouting\n     * @param {string} queue_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchQueueBucket(\n      queue_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ) {\n      return QueueBucketServiceApiFp(configuration).searchQueueBucket(\n        queue_id,\n        page,\n        size,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary UpdateQueueBucket\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {EngineUpdateQueueBucketRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateQueueBucket(\n      queue_id: string,\n      id: string,\n      body: EngineUpdateQueueBucketRequest,\n      options?: any\n    ) {\n      return QueueBucketServiceApiFp(configuration).updateQueueBucket(\n        queue_id,\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * QueueBucketServiceApi - object-oriented interface\n * @export\n * @class QueueBucketServiceApi\n * @extends {BaseAPI}\n */\nexport class QueueBucketServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create QueueBucket\n   * @param {string} queue_id\n   * @param {EngineCreateQueueBucketRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueBucketServiceApi\n   */\n  public createQueueBucket(\n    queue_id: string,\n    body: EngineCreateQueueBucketRequest,\n    options?: any\n  ) {\n    return QueueBucketServiceApiFp(this.configuration).createQueueBucket(\n      queue_id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary DeleteQueueRouting\n   * @param {string} queue_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueBucketServiceApi\n   */\n  public deleteQueueBucket(\n    queue_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return QueueBucketServiceApiFp(this.configuration).deleteQueueBucket(\n      queue_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary ReadQueueRouting\n   * @param {string} queue_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueBucketServiceApi\n   */\n  public readQueueBucket(\n    queue_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return QueueBucketServiceApiFp(this.configuration).readQueueBucket(\n      queue_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary SearchQueueRouting\n   * @param {string} queue_id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueBucketServiceApi\n   */\n  public searchQueueBucket(\n    queue_id: string,\n    page?: number,\n    size?: number,\n    domain_id?: string,\n    options?: any\n  ) {\n    return QueueBucketServiceApiFp(this.configuration).searchQueueBucket(\n      queue_id,\n      page,\n      size,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary UpdateQueueBucket\n   * @param {string} queue_id\n   * @param {string} id\n   * @param {EngineUpdateQueueBucketRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueBucketServiceApi\n   */\n  public updateQueueBucket(\n    queue_id: string,\n    id: string,\n    body: EngineUpdateQueueBucketRequest,\n    options?: any\n  ) {\n    return QueueBucketServiceApiFp(this.configuration).updateQueueBucket(\n      queue_id,\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n}\n\n/**\n * QueueResourcesServiceApi - axios parameter creator\n * @export\n */\nexport const QueueResourcesServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary CreateQueueResourceGroup\n     * @param {string} queue_id\n     * @param {EngineCreateQueueResourceGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createQueueResourceGroup(\n      queue_id: string,\n      body: EngineCreateQueueResourceGroupRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling createQueueResourceGroup.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createQueueResourceGroup.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/resource_groups`.replace(\n        `{${'queue_id'}}`,\n        encodeURIComponent(String(queue_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateQueueResourceGroupRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary DeleteQueueResourceGroup\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteQueueResourceGroup(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling deleteQueueResourceGroup.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteQueueResourceGroup.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/resource_groups/{id}`\n        .replace(`{${'queue_id'}}`, encodeURIComponent(String(queue_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary ReadQueueResourceGroup\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readQueueResourceGroup(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling readQueueResourceGroup.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readQueueResourceGroup.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/resource_groups/{id}`\n        .replace(`{${'queue_id'}}`, encodeURIComponent(String(queue_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary SearchQueueResourceGroup\n     * @param {string} queue_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchQueueResourceGroup(\n      queue_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling searchQueueResourceGroup.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/resource_groups`.replace(\n        `{${'queue_id'}}`,\n        encodeURIComponent(String(queue_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary UpdateQueueResourceGroup\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {EngineUpdateQueueResourceGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateQueueResourceGroup(\n      queue_id: string,\n      id: string,\n      body: EngineUpdateQueueResourceGroupRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling updateQueueResourceGroup.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateQueueResourceGroup.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateQueueResourceGroup.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/resource_groups/{id}`\n        .replace(`{${'queue_id'}}`, encodeURIComponent(String(queue_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateQueueResourceGroupRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * QueueResourcesServiceApi - functional programming interface\n * @export\n */\nexport const QueueResourcesServiceApiFp = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary CreateQueueResourceGroup\n     * @param {string} queue_id\n     * @param {EngineCreateQueueResourceGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createQueueResourceGroup(\n      queue_id: string,\n      body: EngineCreateQueueResourceGroupRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineQueueResourceGroup> {\n      const localVarAxiosArgs = QueueResourcesServiceApiAxiosParamCreator(\n        configuration\n      ).createQueueResourceGroup(queue_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary DeleteQueueResourceGroup\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteQueueResourceGroup(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineQueueResourceGroup> {\n      const localVarAxiosArgs = QueueResourcesServiceApiAxiosParamCreator(\n        configuration\n      ).deleteQueueResourceGroup(queue_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary ReadQueueResourceGroup\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readQueueResourceGroup(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineQueueResourceGroup> {\n      const localVarAxiosArgs = QueueResourcesServiceApiAxiosParamCreator(\n        configuration\n      ).readQueueResourceGroup(queue_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary SearchQueueResourceGroup\n     * @param {string} queue_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchQueueResourceGroup(\n      queue_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListQueueResourceGroup> {\n      const localVarAxiosArgs = QueueResourcesServiceApiAxiosParamCreator(\n        configuration\n      ).searchQueueResourceGroup(queue_id, page, size, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary UpdateQueueResourceGroup\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {EngineUpdateQueueResourceGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateQueueResourceGroup(\n      queue_id: string,\n      id: string,\n      body: EngineUpdateQueueResourceGroupRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineQueueResourceGroup> {\n      const localVarAxiosArgs = QueueResourcesServiceApiAxiosParamCreator(\n        configuration\n      ).updateQueueResourceGroup(queue_id, id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * QueueResourcesServiceApi - factory interface\n * @export\n */\nexport const QueueResourcesServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary CreateQueueResourceGroup\n     * @param {string} queue_id\n     * @param {EngineCreateQueueResourceGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createQueueResourceGroup(\n      queue_id: string,\n      body: EngineCreateQueueResourceGroupRequest,\n      options?: any\n    ) {\n      return QueueResourcesServiceApiFp(configuration).createQueueResourceGroup(\n        queue_id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary DeleteQueueResourceGroup\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteQueueResourceGroup(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return QueueResourcesServiceApiFp(configuration).deleteQueueResourceGroup(\n        queue_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary ReadQueueResourceGroup\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readQueueResourceGroup(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return QueueResourcesServiceApiFp(configuration).readQueueResourceGroup(\n        queue_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary SearchQueueResourceGroup\n     * @param {string} queue_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchQueueResourceGroup(\n      queue_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ) {\n      return QueueResourcesServiceApiFp(configuration).searchQueueResourceGroup(\n        queue_id,\n        page,\n        size,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary UpdateQueueResourceGroup\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {EngineUpdateQueueResourceGroupRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateQueueResourceGroup(\n      queue_id: string,\n      id: string,\n      body: EngineUpdateQueueResourceGroupRequest,\n      options?: any\n    ) {\n      return QueueResourcesServiceApiFp(configuration).updateQueueResourceGroup(\n        queue_id,\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * QueueResourcesServiceApi - object-oriented interface\n * @export\n * @class QueueResourcesServiceApi\n * @extends {BaseAPI}\n */\nexport class QueueResourcesServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary CreateQueueResourceGroup\n   * @param {string} queue_id\n   * @param {EngineCreateQueueResourceGroupRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueResourcesServiceApi\n   */\n  public createQueueResourceGroup(\n    queue_id: string,\n    body: EngineCreateQueueResourceGroupRequest,\n    options?: any\n  ) {\n    return QueueResourcesServiceApiFp(\n      this.configuration\n    ).createQueueResourceGroup(queue_id, body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary DeleteQueueResourceGroup\n   * @param {string} queue_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueResourcesServiceApi\n   */\n  public deleteQueueResourceGroup(\n    queue_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return QueueResourcesServiceApiFp(\n      this.configuration\n    ).deleteQueueResourceGroup(queue_id, id, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary ReadQueueResourceGroup\n   * @param {string} queue_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueResourcesServiceApi\n   */\n  public readQueueResourceGroup(\n    queue_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return QueueResourcesServiceApiFp(\n      this.configuration\n    ).readQueueResourceGroup(queue_id, id, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary SearchQueueResourceGroup\n   * @param {string} queue_id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueResourcesServiceApi\n   */\n  public searchQueueResourceGroup(\n    queue_id: string,\n    page?: number,\n    size?: number,\n    domain_id?: string,\n    options?: any\n  ) {\n    return QueueResourcesServiceApiFp(\n      this.configuration\n    ).searchQueueResourceGroup(queue_id, page, size, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary UpdateQueueResourceGroup\n   * @param {string} queue_id\n   * @param {string} id\n   * @param {EngineUpdateQueueResourceGroupRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueResourcesServiceApi\n   */\n  public updateQueueResourceGroup(\n    queue_id: string,\n    id: string,\n    body: EngineUpdateQueueResourceGroupRequest,\n    options?: any\n  ) {\n    return QueueResourcesServiceApiFp(\n      this.configuration\n    ).updateQueueResourceGroup(queue_id, id, body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n}\n\n/**\n * QueueRoutingServiceApi - axios parameter creator\n * @export\n */\nexport const QueueRoutingServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary CreateQueueRouting\n     * @param {string} queue_id\n     * @param {EngineCreateQueueRoutingRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createQueueRouting(\n      queue_id: string,\n      body: EngineCreateQueueRoutingRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling createQueueRouting.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createQueueRouting.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/routings`.replace(\n        `{${'queue_id'}}`,\n        encodeURIComponent(String(queue_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateQueueRoutingRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary DeleteQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteQueueRouting(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling deleteQueueRouting.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteQueueRouting.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/routings/{id}`\n        .replace(`{${'queue_id'}}`, encodeURIComponent(String(queue_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary ReadQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readQueueRouting(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling readQueueRouting.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readQueueRouting.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/routings/{id}`\n        .replace(`{${'queue_id'}}`, encodeURIComponent(String(queue_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary SearchQueueRouting\n     * @param {string} queue_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchQueueRouting(\n      queue_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling searchQueueRouting.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/routings`.replace(\n        `{${'queue_id'}}`,\n        encodeURIComponent(String(queue_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary UpdateQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {EngineUpdateQueueRoutingRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateQueueRouting(\n      queue_id: string,\n      id: string,\n      body: EngineUpdateQueueRoutingRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'queue_id' is not null or undefined\n      if (queue_id === null || queue_id === undefined) {\n        throw new RequiredError(\n          'queue_id',\n          'Required parameter queue_id was null or undefined when calling updateQueueRouting.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateQueueRouting.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateQueueRouting.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{queue_id}/routings/{id}`\n        .replace(`{${'queue_id'}}`, encodeURIComponent(String(queue_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateQueueRoutingRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * QueueRoutingServiceApi - functional programming interface\n * @export\n */\nexport const QueueRoutingServiceApiFp = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary CreateQueueRouting\n     * @param {string} queue_id\n     * @param {EngineCreateQueueRoutingRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createQueueRouting(\n      queue_id: string,\n      body: EngineCreateQueueRoutingRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineQueueRouting> {\n      const localVarAxiosArgs = QueueRoutingServiceApiAxiosParamCreator(\n        configuration\n      ).createQueueRouting(queue_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary DeleteQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteQueueRouting(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineQueueRouting> {\n      const localVarAxiosArgs = QueueRoutingServiceApiAxiosParamCreator(\n        configuration\n      ).deleteQueueRouting(queue_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary ReadQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readQueueRouting(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineQueueRouting> {\n      const localVarAxiosArgs = QueueRoutingServiceApiAxiosParamCreator(\n        configuration\n      ).readQueueRouting(queue_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary SearchQueueRouting\n     * @param {string} queue_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchQueueRouting(\n      queue_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListQueueRouting> {\n      const localVarAxiosArgs = QueueRoutingServiceApiAxiosParamCreator(\n        configuration\n      ).searchQueueRouting(queue_id, page, size, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary UpdateQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {EngineUpdateQueueRoutingRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateQueueRouting(\n      queue_id: string,\n      id: string,\n      body: EngineUpdateQueueRoutingRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineQueueRouting> {\n      const localVarAxiosArgs = QueueRoutingServiceApiAxiosParamCreator(\n        configuration\n      ).updateQueueRouting(queue_id, id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * QueueRoutingServiceApi - factory interface\n * @export\n */\nexport const QueueRoutingServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary CreateQueueRouting\n     * @param {string} queue_id\n     * @param {EngineCreateQueueRoutingRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createQueueRouting(\n      queue_id: string,\n      body: EngineCreateQueueRoutingRequest,\n      options?: any\n    ) {\n      return QueueRoutingServiceApiFp(configuration).createQueueRouting(\n        queue_id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary DeleteQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteQueueRouting(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return QueueRoutingServiceApiFp(configuration).deleteQueueRouting(\n        queue_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary ReadQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readQueueRouting(\n      queue_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return QueueRoutingServiceApiFp(configuration).readQueueRouting(\n        queue_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary SearchQueueRouting\n     * @param {string} queue_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchQueueRouting(\n      queue_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ) {\n      return QueueRoutingServiceApiFp(configuration).searchQueueRouting(\n        queue_id,\n        page,\n        size,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary UpdateQueueRouting\n     * @param {string} queue_id\n     * @param {string} id\n     * @param {EngineUpdateQueueRoutingRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateQueueRouting(\n      queue_id: string,\n      id: string,\n      body: EngineUpdateQueueRoutingRequest,\n      options?: any\n    ) {\n      return QueueRoutingServiceApiFp(configuration).updateQueueRouting(\n        queue_id,\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * QueueRoutingServiceApi - object-oriented interface\n * @export\n * @class QueueRoutingServiceApi\n * @extends {BaseAPI}\n */\nexport class QueueRoutingServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary CreateQueueRouting\n   * @param {string} queue_id\n   * @param {EngineCreateQueueRoutingRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueRoutingServiceApi\n   */\n  public createQueueRouting(\n    queue_id: string,\n    body: EngineCreateQueueRoutingRequest,\n    options?: any\n  ) {\n    return QueueRoutingServiceApiFp(this.configuration).createQueueRouting(\n      queue_id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary DeleteQueueRouting\n   * @param {string} queue_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueRoutingServiceApi\n   */\n  public deleteQueueRouting(\n    queue_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return QueueRoutingServiceApiFp(this.configuration).deleteQueueRouting(\n      queue_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary ReadQueueRouting\n   * @param {string} queue_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueRoutingServiceApi\n   */\n  public readQueueRouting(\n    queue_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return QueueRoutingServiceApiFp(this.configuration).readQueueRouting(\n      queue_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary SearchQueueRouting\n   * @param {string} queue_id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueRoutingServiceApi\n   */\n  public searchQueueRouting(\n    queue_id: string,\n    page?: number,\n    size?: number,\n    domain_id?: string,\n    options?: any\n  ) {\n    return QueueRoutingServiceApiFp(this.configuration).searchQueueRouting(\n      queue_id,\n      page,\n      size,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary UpdateQueueRouting\n   * @param {string} queue_id\n   * @param {string} id\n   * @param {EngineUpdateQueueRoutingRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueRoutingServiceApi\n   */\n  public updateQueueRouting(\n    queue_id: string,\n    id: string,\n    body: EngineUpdateQueueRoutingRequest,\n    options?: any\n  ) {\n    return QueueRoutingServiceApiFp(this.configuration).updateQueueRouting(\n      queue_id,\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n}\n\n/**\n * QueueServiceApi - axios parameter creator\n * @export\n */\nexport const QueueServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create Queue\n     * @param {EngineCreateQueueRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createQueue(\n      body: EngineCreateQueueRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createQueue.'\n        )\n      }\n      const localVarPath = `/call_center/queues`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateQueueRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove Queue\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteQueue(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteQueue.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Patch Queue\n     * @param {string} id\n     * @param {EnginePatchQueueRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchQueue(\n      id: string,\n      body: EnginePatchQueueRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling patchQueue.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling patchQueue.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PATCH',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EnginePatchQueueRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Queue item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readQueue(id: string, domain_id?: string, options: any = {}): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readQueue.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of Queue\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchQueue(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/call_center/queues`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update Queue\n     * @param {string} id\n     * @param {EngineUpdateQueueRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateQueue(\n      id: string,\n      body: EngineUpdateQueueRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateQueue.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateQueue.'\n        )\n      }\n      const localVarPath = `/call_center/queues/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateQueueRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * QueueServiceApi - functional programming interface\n * @export\n */\nexport const QueueServiceApiFp = function(configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Create Queue\n     * @param {EngineCreateQueueRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createQueue(\n      body: EngineCreateQueueRequest,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineQueue> {\n      const localVarAxiosArgs = QueueServiceApiAxiosParamCreator(\n        configuration\n      ).createQueue(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove Queue\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteQueue(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineQueue> {\n      const localVarAxiosArgs = QueueServiceApiAxiosParamCreator(\n        configuration\n      ).deleteQueue(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Patch Queue\n     * @param {string} id\n     * @param {EnginePatchQueueRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchQueue(\n      id: string,\n      body: EnginePatchQueueRequest,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineQueue> {\n      const localVarAxiosArgs = QueueServiceApiAxiosParamCreator(\n        configuration\n      ).patchQueue(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Queue item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readQueue(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineQueue> {\n      const localVarAxiosArgs = QueueServiceApiAxiosParamCreator(\n        configuration\n      ).readQueue(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of Queue\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchQueue(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListQueue> {\n      const localVarAxiosArgs = QueueServiceApiAxiosParamCreator(\n        configuration\n      ).searchQueue(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update Queue\n     * @param {string} id\n     * @param {EngineUpdateQueueRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateQueue(\n      id: string,\n      body: EngineUpdateQueueRequest,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineQueue> {\n      const localVarAxiosArgs = QueueServiceApiAxiosParamCreator(\n        configuration\n      ).updateQueue(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * QueueServiceApi - factory interface\n * @export\n */\nexport const QueueServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create Queue\n     * @param {EngineCreateQueueRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createQueue(body: EngineCreateQueueRequest, options?: any) {\n      return QueueServiceApiFp(configuration).createQueue(body, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Remove Queue\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteQueue(id: string, domain_id?: string, options?: any) {\n      return QueueServiceApiFp(configuration).deleteQueue(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Patch Queue\n     * @param {string} id\n     * @param {EnginePatchQueueRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchQueue(id: string, body: EnginePatchQueueRequest, options?: any) {\n      return QueueServiceApiFp(configuration).patchQueue(id, body, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Queue item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readQueue(id: string, domain_id?: string, options?: any) {\n      return QueueServiceApiFp(configuration).readQueue(id, domain_id, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary List of Queue\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchQueue(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return QueueServiceApiFp(configuration).searchQueue(\n        page,\n        size,\n        q,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update Queue\n     * @param {string} id\n     * @param {EngineUpdateQueueRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateQueue(id: string, body: EngineUpdateQueueRequest, options?: any) {\n      return QueueServiceApiFp(configuration).updateQueue(id, body, options)(\n        axios,\n        basePath\n      )\n    },\n  }\n}\n\n/**\n * QueueServiceApi - object-oriented interface\n * @export\n * @class QueueServiceApi\n * @extends {BaseAPI}\n */\nexport class QueueServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create Queue\n   * @param {EngineCreateQueueRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueServiceApi\n   */\n  public createQueue(body: EngineCreateQueueRequest, options?: any) {\n    return QueueServiceApiFp(this.configuration).createQueue(body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Remove Queue\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueServiceApi\n   */\n  public deleteQueue(id: string, domain_id?: string, options?: any) {\n    return QueueServiceApiFp(this.configuration).deleteQueue(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Patch Queue\n   * @param {string} id\n   * @param {EnginePatchQueueRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueServiceApi\n   */\n  public patchQueue(id: string, body: EnginePatchQueueRequest, options?: any) {\n    return QueueServiceApiFp(this.configuration).patchQueue(id, body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Queue item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueServiceApi\n   */\n  public readQueue(id: string, domain_id?: string, options?: any) {\n    return QueueServiceApiFp(this.configuration).readQueue(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of Queue\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueServiceApi\n   */\n  public searchQueue(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return QueueServiceApiFp(this.configuration).searchQueue(\n      page,\n      size,\n      q,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update Queue\n   * @param {string} id\n   * @param {EngineUpdateQueueRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof QueueServiceApi\n   */\n  public updateQueue(\n    id: string,\n    body: EngineUpdateQueueRequest,\n    options?: any\n  ) {\n    return QueueServiceApiFp(this.configuration).updateQueue(id, body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n}\n\n/**\n * ResourceTeamServiceApi - axios parameter creator\n * @export\n */\nexport const ResourceTeamServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create ResourceTeamAgent\n     * @param {string} team_id\n     * @param {EngineCreateResourceTeamAgentRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceTeamAgent(\n      team_id: string,\n      body: EngineCreateResourceTeamAgentRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling createResourceTeamAgent.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createResourceTeamAgent.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/agents`.replace(\n        `{${'team_id'}}`,\n        encodeURIComponent(String(team_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateResourceTeamAgentRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary SKill Create ResourceTeamSkill\n     * @param {string} team_id\n     * @param {EngineCreateResourceTeamSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceTeamSkill(\n      team_id: string,\n      body: EngineCreateResourceTeamSkillRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling createResourceTeamSkill.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createResourceTeamSkill.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/skills`.replace(\n        `{${'team_id'}}`,\n        encodeURIComponent(String(team_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateResourceTeamSkillRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove ResourceTeamAgent\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceTeamAgent(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling deleteResourceTeamAgent.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteResourceTeamAgent.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/agents/{id}`\n        .replace(`{${'team_id'}}`, encodeURIComponent(String(team_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove ResourceTeamSkill\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceTeamSkill(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling deleteResourceTeamSkill.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteResourceTeamSkill.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/skills/{id}`\n        .replace(`{${'team_id'}}`, encodeURIComponent(String(team_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary ResourceTeamAgent item\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readResourceTeamAgent(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling readResourceTeamAgent.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readResourceTeamAgent.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/agents/{id}`\n        .replace(`{${'team_id'}}`, encodeURIComponent(String(team_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary ResourceTeamSkill item\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readResourceTeamSkill(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling readResourceTeamSkill.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readResourceTeamSkill.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/skills/{id}`\n        .replace(`{${'team_id'}}`, encodeURIComponent(String(team_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of ResourceTeamAgent\n     * @param {string} team_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchResourceTeamAgent(\n      team_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling searchResourceTeamAgent.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/agents`.replace(\n        `{${'team_id'}}`,\n        encodeURIComponent(String(team_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of ResourceTeamSkill\n     * @param {string} team_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchResourceTeamSkill(\n      team_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling searchResourceTeamSkill.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/skills`.replace(\n        `{${'team_id'}}`,\n        encodeURIComponent(String(team_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update ResourceTeamAgent\n     * @param {string} team_id\n     * @param {string} id\n     * @param {EngineUpdateResourceTeamAgentRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceTeamAgent(\n      team_id: string,\n      id: string,\n      body: EngineUpdateResourceTeamAgentRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling updateResourceTeamAgent.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateResourceTeamAgent.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateResourceTeamAgent.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/agents/{id}`\n        .replace(`{${'team_id'}}`, encodeURIComponent(String(team_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateResourceTeamAgentRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update ResourceTeamSkill\n     * @param {string} team_id\n     * @param {string} id\n     * @param {EngineUpdateResourceTeamSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceTeamSkill(\n      team_id: string,\n      id: string,\n      body: EngineUpdateResourceTeamSkillRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling updateResourceTeamSkill.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateResourceTeamSkill.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateResourceTeamSkill.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/skills/{id}`\n        .replace(`{${'team_id'}}`, encodeURIComponent(String(team_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateResourceTeamSkillRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * ResourceTeamServiceApi - functional programming interface\n * @export\n */\nexport const ResourceTeamServiceApiFp = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create ResourceTeamAgent\n     * @param {string} team_id\n     * @param {EngineCreateResourceTeamAgentRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceTeamAgent(\n      team_id: string,\n      body: EngineCreateResourceTeamAgentRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineResourceTeamAgent> {\n      const localVarAxiosArgs = ResourceTeamServiceApiAxiosParamCreator(\n        configuration\n      ).createResourceTeamAgent(team_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary SKill Create ResourceTeamSkill\n     * @param {string} team_id\n     * @param {EngineCreateResourceTeamSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceTeamSkill(\n      team_id: string,\n      body: EngineCreateResourceTeamSkillRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineResourceTeamSkill> {\n      const localVarAxiosArgs = ResourceTeamServiceApiAxiosParamCreator(\n        configuration\n      ).createResourceTeamSkill(team_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove ResourceTeamAgent\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceTeamAgent(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineResourceTeamAgent> {\n      const localVarAxiosArgs = ResourceTeamServiceApiAxiosParamCreator(\n        configuration\n      ).deleteResourceTeamAgent(team_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove ResourceTeamSkill\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceTeamSkill(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineResourceTeamSkill> {\n      const localVarAxiosArgs = ResourceTeamServiceApiAxiosParamCreator(\n        configuration\n      ).deleteResourceTeamSkill(team_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary ResourceTeamAgent item\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readResourceTeamAgent(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineResourceTeamAgent> {\n      const localVarAxiosArgs = ResourceTeamServiceApiAxiosParamCreator(\n        configuration\n      ).readResourceTeamAgent(team_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary ResourceTeamSkill item\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readResourceTeamSkill(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineResourceTeamSkill> {\n      const localVarAxiosArgs = ResourceTeamServiceApiAxiosParamCreator(\n        configuration\n      ).readResourceTeamSkill(team_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of ResourceTeamAgent\n     * @param {string} team_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchResourceTeamAgent(\n      team_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListResourceTeamAgent> {\n      const localVarAxiosArgs = ResourceTeamServiceApiAxiosParamCreator(\n        configuration\n      ).searchResourceTeamAgent(team_id, page, size, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of ResourceTeamSkill\n     * @param {string} team_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchResourceTeamSkill(\n      team_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListResourceTeamSkill> {\n      const localVarAxiosArgs = ResourceTeamServiceApiAxiosParamCreator(\n        configuration\n      ).searchResourceTeamSkill(team_id, page, size, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update ResourceTeamAgent\n     * @param {string} team_id\n     * @param {string} id\n     * @param {EngineUpdateResourceTeamAgentRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceTeamAgent(\n      team_id: string,\n      id: string,\n      body: EngineUpdateResourceTeamAgentRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineResourceTeamAgent> {\n      const localVarAxiosArgs = ResourceTeamServiceApiAxiosParamCreator(\n        configuration\n      ).updateResourceTeamAgent(team_id, id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update ResourceTeamSkill\n     * @param {string} team_id\n     * @param {string} id\n     * @param {EngineUpdateResourceTeamSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceTeamSkill(\n      team_id: string,\n      id: string,\n      body: EngineUpdateResourceTeamSkillRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineResourceTeamSkill> {\n      const localVarAxiosArgs = ResourceTeamServiceApiAxiosParamCreator(\n        configuration\n      ).updateResourceTeamSkill(team_id, id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * ResourceTeamServiceApi - factory interface\n * @export\n */\nexport const ResourceTeamServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create ResourceTeamAgent\n     * @param {string} team_id\n     * @param {EngineCreateResourceTeamAgentRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceTeamAgent(\n      team_id: string,\n      body: EngineCreateResourceTeamAgentRequest,\n      options?: any\n    ) {\n      return ResourceTeamServiceApiFp(configuration).createResourceTeamAgent(\n        team_id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary SKill Create ResourceTeamSkill\n     * @param {string} team_id\n     * @param {EngineCreateResourceTeamSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceTeamSkill(\n      team_id: string,\n      body: EngineCreateResourceTeamSkillRequest,\n      options?: any\n    ) {\n      return ResourceTeamServiceApiFp(configuration).createResourceTeamSkill(\n        team_id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove ResourceTeamAgent\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceTeamAgent(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return ResourceTeamServiceApiFp(configuration).deleteResourceTeamAgent(\n        team_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove ResourceTeamSkill\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceTeamSkill(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return ResourceTeamServiceApiFp(configuration).deleteResourceTeamSkill(\n        team_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary ResourceTeamAgent item\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readResourceTeamAgent(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return ResourceTeamServiceApiFp(configuration).readResourceTeamAgent(\n        team_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary ResourceTeamSkill item\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readResourceTeamSkill(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return ResourceTeamServiceApiFp(configuration).readResourceTeamSkill(\n        team_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of ResourceTeamAgent\n     * @param {string} team_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchResourceTeamAgent(\n      team_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ) {\n      return ResourceTeamServiceApiFp(configuration).searchResourceTeamAgent(\n        team_id,\n        page,\n        size,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of ResourceTeamSkill\n     * @param {string} team_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchResourceTeamSkill(\n      team_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ) {\n      return ResourceTeamServiceApiFp(configuration).searchResourceTeamSkill(\n        team_id,\n        page,\n        size,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update ResourceTeamAgent\n     * @param {string} team_id\n     * @param {string} id\n     * @param {EngineUpdateResourceTeamAgentRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceTeamAgent(\n      team_id: string,\n      id: string,\n      body: EngineUpdateResourceTeamAgentRequest,\n      options?: any\n    ) {\n      return ResourceTeamServiceApiFp(configuration).updateResourceTeamAgent(\n        team_id,\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update ResourceTeamSkill\n     * @param {string} team_id\n     * @param {string} id\n     * @param {EngineUpdateResourceTeamSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceTeamSkill(\n      team_id: string,\n      id: string,\n      body: EngineUpdateResourceTeamSkillRequest,\n      options?: any\n    ) {\n      return ResourceTeamServiceApiFp(configuration).updateResourceTeamSkill(\n        team_id,\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * ResourceTeamServiceApi - object-oriented interface\n * @export\n * @class ResourceTeamServiceApi\n * @extends {BaseAPI}\n */\nexport class ResourceTeamServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create ResourceTeamAgent\n   * @param {string} team_id\n   * @param {EngineCreateResourceTeamAgentRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceTeamServiceApi\n   */\n  public createResourceTeamAgent(\n    team_id: string,\n    body: EngineCreateResourceTeamAgentRequest,\n    options?: any\n  ) {\n    return ResourceTeamServiceApiFp(this.configuration).createResourceTeamAgent(\n      team_id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary SKill Create ResourceTeamSkill\n   * @param {string} team_id\n   * @param {EngineCreateResourceTeamSkillRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceTeamServiceApi\n   */\n  public createResourceTeamSkill(\n    team_id: string,\n    body: EngineCreateResourceTeamSkillRequest,\n    options?: any\n  ) {\n    return ResourceTeamServiceApiFp(this.configuration).createResourceTeamSkill(\n      team_id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove ResourceTeamAgent\n   * @param {string} team_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceTeamServiceApi\n   */\n  public deleteResourceTeamAgent(\n    team_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return ResourceTeamServiceApiFp(this.configuration).deleteResourceTeamAgent(\n      team_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove ResourceTeamSkill\n   * @param {string} team_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceTeamServiceApi\n   */\n  public deleteResourceTeamSkill(\n    team_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return ResourceTeamServiceApiFp(this.configuration).deleteResourceTeamSkill(\n      team_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary ResourceTeamAgent item\n   * @param {string} team_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceTeamServiceApi\n   */\n  public readResourceTeamAgent(\n    team_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return ResourceTeamServiceApiFp(this.configuration).readResourceTeamAgent(\n      team_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary ResourceTeamSkill item\n   * @param {string} team_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceTeamServiceApi\n   */\n  public readResourceTeamSkill(\n    team_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return ResourceTeamServiceApiFp(this.configuration).readResourceTeamSkill(\n      team_id,\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of ResourceTeamAgent\n   * @param {string} team_id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceTeamServiceApi\n   */\n  public searchResourceTeamAgent(\n    team_id: string,\n    page?: number,\n    size?: number,\n    domain_id?: string,\n    options?: any\n  ) {\n    return ResourceTeamServiceApiFp(this.configuration).searchResourceTeamAgent(\n      team_id,\n      page,\n      size,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of ResourceTeamSkill\n   * @param {string} team_id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceTeamServiceApi\n   */\n  public searchResourceTeamSkill(\n    team_id: string,\n    page?: number,\n    size?: number,\n    domain_id?: string,\n    options?: any\n  ) {\n    return ResourceTeamServiceApiFp(this.configuration).searchResourceTeamSkill(\n      team_id,\n      page,\n      size,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update ResourceTeamAgent\n   * @param {string} team_id\n   * @param {string} id\n   * @param {EngineUpdateResourceTeamAgentRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceTeamServiceApi\n   */\n  public updateResourceTeamAgent(\n    team_id: string,\n    id: string,\n    body: EngineUpdateResourceTeamAgentRequest,\n    options?: any\n  ) {\n    return ResourceTeamServiceApiFp(this.configuration).updateResourceTeamAgent(\n      team_id,\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update ResourceTeamSkill\n   * @param {string} team_id\n   * @param {string} id\n   * @param {EngineUpdateResourceTeamSkillRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceTeamServiceApi\n   */\n  public updateResourceTeamSkill(\n    team_id: string,\n    id: string,\n    body: EngineUpdateResourceTeamSkillRequest,\n    options?: any\n  ) {\n    return ResourceTeamServiceApiFp(this.configuration).updateResourceTeamSkill(\n      team_id,\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n}\n\n/**\n * RoutingOutboundCallServiceApi - axios parameter creator\n * @export\n */\nexport const RoutingOutboundCallServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create RoutingOutboundCall\n     * @param {EngineCreateRoutingOutboundCallRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createRoutingOutboundCall(\n      body: EngineCreateRoutingOutboundCallRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createRoutingOutboundCall.'\n        )\n      }\n      const localVarPath = `/routing/outbound/calls`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateRoutingOutboundCallRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove RoutingOutboundCall\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteRoutingOutboundCall(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteRoutingOutboundCall.'\n        )\n      }\n      const localVarPath = `/routing/outbound/calls/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Move RoutingOutboundCall\n     * @param {string} from_id\n     * @param {string} to_id\n     * @param {EngineMovePositionRoutingOutboundCallRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    movePositionRoutingOutboundCall(\n      from_id: string,\n      to_id: string,\n      body: EngineMovePositionRoutingOutboundCallRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'from_id' is not null or undefined\n      if (from_id === null || from_id === undefined) {\n        throw new RequiredError(\n          'from_id',\n          'Required parameter from_id was null or undefined when calling movePositionRoutingOutboundCall.'\n        )\n      }\n      // verify required parameter 'to_id' is not null or undefined\n      if (to_id === null || to_id === undefined) {\n        throw new RequiredError(\n          'to_id',\n          'Required parameter to_id was null or undefined when calling movePositionRoutingOutboundCall.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling movePositionRoutingOutboundCall.'\n        )\n      }\n      const localVarPath = `/routing/outbound/calls/{from_id}/to/{to_id}`\n        .replace(`{${'from_id'}}`, encodeURIComponent(String(from_id)))\n        .replace(`{${'to_id'}}`, encodeURIComponent(String(to_id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PATCH',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineMovePositionRoutingOutboundCallRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Patch RoutingOutboundCall\n     * @param {string} id\n     * @param {EnginePatchRoutingOutboundCallRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchRoutingOutboundCall(\n      id: string,\n      body: EnginePatchRoutingOutboundCallRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling patchRoutingOutboundCall.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling patchRoutingOutboundCall.'\n        )\n      }\n      const localVarPath = `/routing/outbound/calls/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PATCH',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EnginePatchRoutingOutboundCallRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary RoutingOutboundCall item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readRoutingOutboundCall(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readRoutingOutboundCall.'\n        )\n      }\n      const localVarPath = `/routing/outbound/calls/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of RoutingOutboundCall\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchRoutingOutboundCall(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/routing/outbound/calls`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update RoutingOutboundCall\n     * @param {string} id\n     * @param {EngineUpdateRoutingOutboundCallRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateRoutingOutboundCall(\n      id: string,\n      body: EngineUpdateRoutingOutboundCallRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateRoutingOutboundCall.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateRoutingOutboundCall.'\n        )\n      }\n      const localVarPath = `/routing/outbound/calls/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateRoutingOutboundCallRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * RoutingOutboundCallServiceApi - functional programming interface\n * @export\n */\nexport const RoutingOutboundCallServiceApiFp = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create RoutingOutboundCall\n     * @param {EngineCreateRoutingOutboundCallRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createRoutingOutboundCall(\n      body: EngineCreateRoutingOutboundCallRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingOutboundCall> {\n      const localVarAxiosArgs = RoutingOutboundCallServiceApiAxiosParamCreator(\n        configuration\n      ).createRoutingOutboundCall(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove RoutingOutboundCall\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteRoutingOutboundCall(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingOutboundCall> {\n      const localVarAxiosArgs = RoutingOutboundCallServiceApiAxiosParamCreator(\n        configuration\n      ).deleteRoutingOutboundCall(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Move RoutingOutboundCall\n     * @param {string} from_id\n     * @param {string} to_id\n     * @param {EngineMovePositionRoutingOutboundCallRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    movePositionRoutingOutboundCall(\n      from_id: string,\n      to_id: string,\n      body: EngineMovePositionRoutingOutboundCallRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineMovePositionRoutingOutboundCallResponse> {\n      const localVarAxiosArgs = RoutingOutboundCallServiceApiAxiosParamCreator(\n        configuration\n      ).movePositionRoutingOutboundCall(from_id, to_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Patch RoutingOutboundCall\n     * @param {string} id\n     * @param {EnginePatchRoutingOutboundCallRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchRoutingOutboundCall(\n      id: string,\n      body: EnginePatchRoutingOutboundCallRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingOutboundCall> {\n      const localVarAxiosArgs = RoutingOutboundCallServiceApiAxiosParamCreator(\n        configuration\n      ).patchRoutingOutboundCall(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary RoutingOutboundCall item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readRoutingOutboundCall(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingOutboundCall> {\n      const localVarAxiosArgs = RoutingOutboundCallServiceApiAxiosParamCreator(\n        configuration\n      ).readRoutingOutboundCall(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of RoutingOutboundCall\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchRoutingOutboundCall(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListRoutingOutboundCall> {\n      const localVarAxiosArgs = RoutingOutboundCallServiceApiAxiosParamCreator(\n        configuration\n      ).searchRoutingOutboundCall(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update RoutingOutboundCall\n     * @param {string} id\n     * @param {EngineUpdateRoutingOutboundCallRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateRoutingOutboundCall(\n      id: string,\n      body: EngineUpdateRoutingOutboundCallRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingOutboundCall> {\n      const localVarAxiosArgs = RoutingOutboundCallServiceApiAxiosParamCreator(\n        configuration\n      ).updateRoutingOutboundCall(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * RoutingOutboundCallServiceApi - factory interface\n * @export\n */\nexport const RoutingOutboundCallServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create RoutingOutboundCall\n     * @param {EngineCreateRoutingOutboundCallRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createRoutingOutboundCall(\n      body: EngineCreateRoutingOutboundCallRequest,\n      options?: any\n    ) {\n      return RoutingOutboundCallServiceApiFp(\n        configuration\n      ).createRoutingOutboundCall(body, options)(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove RoutingOutboundCall\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteRoutingOutboundCall(id: string, domain_id?: string, options?: any) {\n      return RoutingOutboundCallServiceApiFp(\n        configuration\n      ).deleteRoutingOutboundCall(id, domain_id, options)(axios, basePath)\n    },\n    /**\n     *\n     * @summary Move RoutingOutboundCall\n     * @param {string} from_id\n     * @param {string} to_id\n     * @param {EngineMovePositionRoutingOutboundCallRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    movePositionRoutingOutboundCall(\n      from_id: string,\n      to_id: string,\n      body: EngineMovePositionRoutingOutboundCallRequest,\n      options?: any\n    ) {\n      return RoutingOutboundCallServiceApiFp(\n        configuration\n      ).movePositionRoutingOutboundCall(from_id, to_id, body, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Patch RoutingOutboundCall\n     * @param {string} id\n     * @param {EnginePatchRoutingOutboundCallRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchRoutingOutboundCall(\n      id: string,\n      body: EnginePatchRoutingOutboundCallRequest,\n      options?: any\n    ) {\n      return RoutingOutboundCallServiceApiFp(\n        configuration\n      ).patchRoutingOutboundCall(id, body, options)(axios, basePath)\n    },\n    /**\n     *\n     * @summary RoutingOutboundCall item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readRoutingOutboundCall(id: string, domain_id?: string, options?: any) {\n      return RoutingOutboundCallServiceApiFp(\n        configuration\n      ).readRoutingOutboundCall(id, domain_id, options)(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of RoutingOutboundCall\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchRoutingOutboundCall(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return RoutingOutboundCallServiceApiFp(\n        configuration\n      ).searchRoutingOutboundCall(page, size, q, domain_id, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Update RoutingOutboundCall\n     * @param {string} id\n     * @param {EngineUpdateRoutingOutboundCallRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateRoutingOutboundCall(\n      id: string,\n      body: EngineUpdateRoutingOutboundCallRequest,\n      options?: any\n    ) {\n      return RoutingOutboundCallServiceApiFp(\n        configuration\n      ).updateRoutingOutboundCall(id, body, options)(axios, basePath)\n    },\n  }\n}\n\n/**\n * RoutingOutboundCallServiceApi - object-oriented interface\n * @export\n * @class RoutingOutboundCallServiceApi\n * @extends {BaseAPI}\n */\nexport class RoutingOutboundCallServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create RoutingOutboundCall\n   * @param {EngineCreateRoutingOutboundCallRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingOutboundCallServiceApi\n   */\n  public createRoutingOutboundCall(\n    body: EngineCreateRoutingOutboundCallRequest,\n    options?: any\n  ) {\n    return RoutingOutboundCallServiceApiFp(\n      this.configuration\n    ).createRoutingOutboundCall(body, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove RoutingOutboundCall\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingOutboundCallServiceApi\n   */\n  public deleteRoutingOutboundCall(\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return RoutingOutboundCallServiceApiFp(\n      this.configuration\n    ).deleteRoutingOutboundCall(id, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Move RoutingOutboundCall\n   * @param {string} from_id\n   * @param {string} to_id\n   * @param {EngineMovePositionRoutingOutboundCallRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingOutboundCallServiceApi\n   */\n  public movePositionRoutingOutboundCall(\n    from_id: string,\n    to_id: string,\n    body: EngineMovePositionRoutingOutboundCallRequest,\n    options?: any\n  ) {\n    return RoutingOutboundCallServiceApiFp(\n      this.configuration\n    ).movePositionRoutingOutboundCall(from_id, to_id, body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Patch RoutingOutboundCall\n   * @param {string} id\n   * @param {EnginePatchRoutingOutboundCallRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingOutboundCallServiceApi\n   */\n  public patchRoutingOutboundCall(\n    id: string,\n    body: EnginePatchRoutingOutboundCallRequest,\n    options?: any\n  ) {\n    return RoutingOutboundCallServiceApiFp(\n      this.configuration\n    ).patchRoutingOutboundCall(id, body, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary RoutingOutboundCall item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingOutboundCallServiceApi\n   */\n  public readRoutingOutboundCall(\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return RoutingOutboundCallServiceApiFp(\n      this.configuration\n    ).readRoutingOutboundCall(id, domain_id, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of RoutingOutboundCall\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingOutboundCallServiceApi\n   */\n  public searchRoutingOutboundCall(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return RoutingOutboundCallServiceApiFp(\n      this.configuration\n    ).searchRoutingOutboundCall(page, size, q, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Update RoutingOutboundCall\n   * @param {string} id\n   * @param {EngineUpdateRoutingOutboundCallRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingOutboundCallServiceApi\n   */\n  public updateRoutingOutboundCall(\n    id: string,\n    body: EngineUpdateRoutingOutboundCallRequest,\n    options?: any\n  ) {\n    return RoutingOutboundCallServiceApiFp(\n      this.configuration\n    ).updateRoutingOutboundCall(id, body, options)(this.axios, this.basePath)\n  }\n}\n\n/**\n * RoutingSchemaServiceApi - axios parameter creator\n * @export\n */\nexport const RoutingSchemaServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create RoutingSchema\n     * @param {EngineCreateRoutingSchemaRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createRoutingSchema(\n      body: EngineCreateRoutingSchemaRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createRoutingSchema.'\n        )\n      }\n      const localVarPath = `/routing/schema`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateRoutingSchemaRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove RoutingSchema\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteRoutingSchema(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteRoutingSchema.'\n        )\n      }\n      const localVarPath = `/routing/schema/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Patch RoutingSchema\n     * @param {string} id\n     * @param {EnginePatchRoutingSchemaRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchRoutingSchema(\n      id: string,\n      body: EnginePatchRoutingSchemaRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling patchRoutingSchema.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling patchRoutingSchema.'\n        )\n      }\n      const localVarPath = `/routing/schema/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PATCH',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EnginePatchRoutingSchemaRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary RoutingSchema item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readRoutingSchema(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readRoutingSchema.'\n        )\n      }\n      const localVarPath = `/routing/schema/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List RoutingSchema\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchRoutingSchema(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/routing/schema`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update RoutingSchema\n     * @param {string} id\n     * @param {EngineUpdateRoutingSchemaRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateRoutingSchema(\n      id: string,\n      body: EngineUpdateRoutingSchemaRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateRoutingSchema.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateRoutingSchema.'\n        )\n      }\n      const localVarPath = `/routing/schema/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateRoutingSchemaRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * RoutingSchemaServiceApi - functional programming interface\n * @export\n */\nexport const RoutingSchemaServiceApiFp = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create RoutingSchema\n     * @param {EngineCreateRoutingSchemaRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createRoutingSchema(\n      body: EngineCreateRoutingSchemaRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingSchema> {\n      const localVarAxiosArgs = RoutingSchemaServiceApiAxiosParamCreator(\n        configuration\n      ).createRoutingSchema(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove RoutingSchema\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteRoutingSchema(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingSchema> {\n      const localVarAxiosArgs = RoutingSchemaServiceApiAxiosParamCreator(\n        configuration\n      ).deleteRoutingSchema(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Patch RoutingSchema\n     * @param {string} id\n     * @param {EnginePatchRoutingSchemaRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchRoutingSchema(\n      id: string,\n      body: EnginePatchRoutingSchemaRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingSchema> {\n      const localVarAxiosArgs = RoutingSchemaServiceApiAxiosParamCreator(\n        configuration\n      ).patchRoutingSchema(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary RoutingSchema item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readRoutingSchema(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingSchema> {\n      const localVarAxiosArgs = RoutingSchemaServiceApiAxiosParamCreator(\n        configuration\n      ).readRoutingSchema(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List RoutingSchema\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchRoutingSchema(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListRoutingSchema> {\n      const localVarAxiosArgs = RoutingSchemaServiceApiAxiosParamCreator(\n        configuration\n      ).searchRoutingSchema(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update RoutingSchema\n     * @param {string} id\n     * @param {EngineUpdateRoutingSchemaRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateRoutingSchema(\n      id: string,\n      body: EngineUpdateRoutingSchemaRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingSchema> {\n      const localVarAxiosArgs = RoutingSchemaServiceApiAxiosParamCreator(\n        configuration\n      ).updateRoutingSchema(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * RoutingSchemaServiceApi - factory interface\n * @export\n */\nexport const RoutingSchemaServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create RoutingSchema\n     * @param {EngineCreateRoutingSchemaRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createRoutingSchema(body: EngineCreateRoutingSchemaRequest, options?: any) {\n      return RoutingSchemaServiceApiFp(configuration).createRoutingSchema(\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove RoutingSchema\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteRoutingSchema(id: string, domain_id?: string, options?: any) {\n      return RoutingSchemaServiceApiFp(configuration).deleteRoutingSchema(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Patch RoutingSchema\n     * @param {string} id\n     * @param {EnginePatchRoutingSchemaRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    patchRoutingSchema(\n      id: string,\n      body: EnginePatchRoutingSchemaRequest,\n      options?: any\n    ) {\n      return RoutingSchemaServiceApiFp(configuration).patchRoutingSchema(\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary RoutingSchema item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readRoutingSchema(id: string, domain_id?: string, options?: any) {\n      return RoutingSchemaServiceApiFp(configuration).readRoutingSchema(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List RoutingSchema\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchRoutingSchema(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return RoutingSchemaServiceApiFp(configuration).searchRoutingSchema(\n        page,\n        size,\n        q,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update RoutingSchema\n     * @param {string} id\n     * @param {EngineUpdateRoutingSchemaRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateRoutingSchema(\n      id: string,\n      body: EngineUpdateRoutingSchemaRequest,\n      options?: any\n    ) {\n      return RoutingSchemaServiceApiFp(configuration).updateRoutingSchema(\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * RoutingSchemaServiceApi - object-oriented interface\n * @export\n * @class RoutingSchemaServiceApi\n * @extends {BaseAPI}\n */\nexport class RoutingSchemaServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create RoutingSchema\n   * @param {EngineCreateRoutingSchemaRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingSchemaServiceApi\n   */\n  public createRoutingSchema(\n    body: EngineCreateRoutingSchemaRequest,\n    options?: any\n  ) {\n    return RoutingSchemaServiceApiFp(this.configuration).createRoutingSchema(\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove RoutingSchema\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingSchemaServiceApi\n   */\n  public deleteRoutingSchema(id: string, domain_id?: string, options?: any) {\n    return RoutingSchemaServiceApiFp(this.configuration).deleteRoutingSchema(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Patch RoutingSchema\n   * @param {string} id\n   * @param {EnginePatchRoutingSchemaRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingSchemaServiceApi\n   */\n  public patchRoutingSchema(\n    id: string,\n    body: EnginePatchRoutingSchemaRequest,\n    options?: any\n  ) {\n    return RoutingSchemaServiceApiFp(this.configuration).patchRoutingSchema(\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary RoutingSchema item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingSchemaServiceApi\n   */\n  public readRoutingSchema(id: string, domain_id?: string, options?: any) {\n    return RoutingSchemaServiceApiFp(this.configuration).readRoutingSchema(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List RoutingSchema\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingSchemaServiceApi\n   */\n  public searchRoutingSchema(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return RoutingSchemaServiceApiFp(this.configuration).searchRoutingSchema(\n      page,\n      size,\n      q,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update RoutingSchema\n   * @param {string} id\n   * @param {EngineUpdateRoutingSchemaRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingSchemaServiceApi\n   */\n  public updateRoutingSchema(\n    id: string,\n    body: EngineUpdateRoutingSchemaRequest,\n    options?: any\n  ) {\n    return RoutingSchemaServiceApiFp(this.configuration).updateRoutingSchema(\n      id,\n      body,\n      options\n    )(this.axios, this.basePath)\n  }\n}\n\n/**\n * RoutingVariableServiceApi - axios parameter creator\n * @export\n */\nexport const RoutingVariableServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create RoutingVariable\n     * @param {EngineCreateRoutingVariableRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createRoutingVariable(\n      body: EngineCreateRoutingVariableRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createRoutingVariable.'\n        )\n      }\n      const localVarPath = `/routing/variables`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateRoutingVariableRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove RoutingVariable\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteRoutingVariable(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteRoutingVariable.'\n        )\n      }\n      const localVarPath = `/routing/variables/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary RoutingVariable item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readRoutingVariable(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readRoutingVariable.'\n        )\n      }\n      const localVarPath = `/routing/variables/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of RoutingVariable\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchRoutingVariable(\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/routing/variables`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update RoutingVariable\n     * @param {string} id\n     * @param {EngineUpdateRoutingVariableRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateRoutingVariable(\n      id: string,\n      body: EngineUpdateRoutingVariableRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateRoutingVariable.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateRoutingVariable.'\n        )\n      }\n      const localVarPath = `/routing/variables/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateRoutingVariableRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * RoutingVariableServiceApi - functional programming interface\n * @export\n */\nexport const RoutingVariableServiceApiFp = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create RoutingVariable\n     * @param {EngineCreateRoutingVariableRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createRoutingVariable(\n      body: EngineCreateRoutingVariableRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingVariable> {\n      const localVarAxiosArgs = RoutingVariableServiceApiAxiosParamCreator(\n        configuration\n      ).createRoutingVariable(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove RoutingVariable\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteRoutingVariable(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingVariable> {\n      const localVarAxiosArgs = RoutingVariableServiceApiAxiosParamCreator(\n        configuration\n      ).deleteRoutingVariable(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary RoutingVariable item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readRoutingVariable(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingVariable> {\n      const localVarAxiosArgs = RoutingVariableServiceApiAxiosParamCreator(\n        configuration\n      ).readRoutingVariable(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of RoutingVariable\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchRoutingVariable(\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListRoutingVariable> {\n      const localVarAxiosArgs = RoutingVariableServiceApiAxiosParamCreator(\n        configuration\n      ).searchRoutingVariable(page, size, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update RoutingVariable\n     * @param {string} id\n     * @param {EngineUpdateRoutingVariableRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateRoutingVariable(\n      id: string,\n      body: EngineUpdateRoutingVariableRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineRoutingVariable> {\n      const localVarAxiosArgs = RoutingVariableServiceApiAxiosParamCreator(\n        configuration\n      ).updateRoutingVariable(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * RoutingVariableServiceApi - factory interface\n * @export\n */\nexport const RoutingVariableServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create RoutingVariable\n     * @param {EngineCreateRoutingVariableRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createRoutingVariable(\n      body: EngineCreateRoutingVariableRequest,\n      options?: any\n    ) {\n      return RoutingVariableServiceApiFp(configuration).createRoutingVariable(\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove RoutingVariable\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteRoutingVariable(id: string, domain_id?: string, options?: any) {\n      return RoutingVariableServiceApiFp(configuration).deleteRoutingVariable(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary RoutingVariable item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readRoutingVariable(id: string, domain_id?: string, options?: any) {\n      return RoutingVariableServiceApiFp(configuration).readRoutingVariable(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of RoutingVariable\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchRoutingVariable(\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ) {\n      return RoutingVariableServiceApiFp(configuration).searchRoutingVariable(\n        page,\n        size,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update RoutingVariable\n     * @param {string} id\n     * @param {EngineUpdateRoutingVariableRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateRoutingVariable(\n      id: string,\n      body: EngineUpdateRoutingVariableRequest,\n      options?: any\n    ) {\n      return RoutingVariableServiceApiFp(configuration).updateRoutingVariable(\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * RoutingVariableServiceApi - object-oriented interface\n * @export\n * @class RoutingVariableServiceApi\n * @extends {BaseAPI}\n */\nexport class RoutingVariableServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create RoutingVariable\n   * @param {EngineCreateRoutingVariableRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingVariableServiceApi\n   */\n  public createRoutingVariable(\n    body: EngineCreateRoutingVariableRequest,\n    options?: any\n  ) {\n    return RoutingVariableServiceApiFp(\n      this.configuration\n    ).createRoutingVariable(body, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove RoutingVariable\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingVariableServiceApi\n   */\n  public deleteRoutingVariable(id: string, domain_id?: string, options?: any) {\n    return RoutingVariableServiceApiFp(\n      this.configuration\n    ).deleteRoutingVariable(id, domain_id, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary RoutingVariable item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingVariableServiceApi\n   */\n  public readRoutingVariable(id: string, domain_id?: string, options?: any) {\n    return RoutingVariableServiceApiFp(this.configuration).readRoutingVariable(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of RoutingVariable\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingVariableServiceApi\n   */\n  public searchRoutingVariable(\n    page?: number,\n    size?: number,\n    domain_id?: string,\n    options?: any\n  ) {\n    return RoutingVariableServiceApiFp(\n      this.configuration\n    ).searchRoutingVariable(page, size, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Update RoutingVariable\n   * @param {string} id\n   * @param {EngineUpdateRoutingVariableRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoutingVariableServiceApi\n   */\n  public updateRoutingVariable(\n    id: string,\n    body: EngineUpdateRoutingVariableRequest,\n    options?: any\n  ) {\n    return RoutingVariableServiceApiFp(\n      this.configuration\n    ).updateRoutingVariable(id, body, options)(this.axios, this.basePath)\n  }\n}\n\n/**\n * SkillServiceApi - axios parameter creator\n * @export\n */\nexport const SkillServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create Skill\n     * @param {EngineCreateSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createSkill(\n      body: EngineCreateSkillRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createSkill.'\n        )\n      }\n      const localVarPath = `/call_center/skills`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateSkillRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove Skill\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteSkill(\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteSkill.'\n        )\n      }\n      const localVarPath = `/call_center/skills/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Skill item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readSkill(id: string, domain_id?: string, options: any = {}): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readSkill.'\n        )\n      }\n      const localVarPath = `/call_center/skills/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of Skill\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchSkill(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      const localVarPath = `/call_center/skills`\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (q !== undefined) {\n        localVarQueryParameter['q'] = q\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update Skill\n     * @param {string} id\n     * @param {EngineUpdateSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateSkill(\n      id: string,\n      body: EngineUpdateSkillRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateSkill.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateSkill.'\n        )\n      }\n      const localVarPath = `/call_center/skills/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateSkillRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * SkillServiceApi - functional programming interface\n * @export\n */\nexport const SkillServiceApiFp = function(configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Create Skill\n     * @param {EngineCreateSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createSkill(\n      body: EngineCreateSkillRequest,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineSkill> {\n      const localVarAxiosArgs = SkillServiceApiAxiosParamCreator(\n        configuration\n      ).createSkill(body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove Skill\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteSkill(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineSkill> {\n      const localVarAxiosArgs = SkillServiceApiAxiosParamCreator(\n        configuration\n      ).deleteSkill(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Skill item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readSkill(\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineSkill> {\n      const localVarAxiosArgs = SkillServiceApiAxiosParamCreator(\n        configuration\n      ).readSkill(id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of Skill\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchSkill(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListSkill> {\n      const localVarAxiosArgs = SkillServiceApiAxiosParamCreator(\n        configuration\n      ).searchSkill(page, size, q, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update Skill\n     * @param {string} id\n     * @param {EngineUpdateSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateSkill(\n      id: string,\n      body: EngineUpdateSkillRequest,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EngineSkill> {\n      const localVarAxiosArgs = SkillServiceApiAxiosParamCreator(\n        configuration\n      ).updateSkill(id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * SkillServiceApi - factory interface\n * @export\n */\nexport const SkillServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create Skill\n     * @param {EngineCreateSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createSkill(body: EngineCreateSkillRequest, options?: any) {\n      return SkillServiceApiFp(configuration).createSkill(body, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary Remove Skill\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteSkill(id: string, domain_id?: string, options?: any) {\n      return SkillServiceApiFp(configuration).deleteSkill(\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Skill item\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readSkill(id: string, domain_id?: string, options?: any) {\n      return SkillServiceApiFp(configuration).readSkill(id, domain_id, options)(\n        axios,\n        basePath\n      )\n    },\n    /**\n     *\n     * @summary List of Skill\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [q]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchSkill(\n      page?: number,\n      size?: number,\n      q?: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return SkillServiceApiFp(configuration).searchSkill(\n        page,\n        size,\n        q,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update Skill\n     * @param {string} id\n     * @param {EngineUpdateSkillRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateSkill(id: string, body: EngineUpdateSkillRequest, options?: any) {\n      return SkillServiceApiFp(configuration).updateSkill(id, body, options)(\n        axios,\n        basePath\n      )\n    },\n  }\n}\n\n/**\n * SkillServiceApi - object-oriented interface\n * @export\n * @class SkillServiceApi\n * @extends {BaseAPI}\n */\nexport class SkillServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create Skill\n   * @param {EngineCreateSkillRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SkillServiceApi\n   */\n  public createSkill(body: EngineCreateSkillRequest, options?: any) {\n    return SkillServiceApiFp(this.configuration).createSkill(body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Remove Skill\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SkillServiceApi\n   */\n  public deleteSkill(id: string, domain_id?: string, options?: any) {\n    return SkillServiceApiFp(this.configuration).deleteSkill(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Skill item\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SkillServiceApi\n   */\n  public readSkill(id: string, domain_id?: string, options?: any) {\n    return SkillServiceApiFp(this.configuration).readSkill(\n      id,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary List of Skill\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [q]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SkillServiceApi\n   */\n  public searchSkill(\n    page?: number,\n    size?: number,\n    q?: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return SkillServiceApiFp(this.configuration).searchSkill(\n      page,\n      size,\n      q,\n      domain_id,\n      options\n    )(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Update Skill\n   * @param {string} id\n   * @param {EngineUpdateSkillRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SkillServiceApi\n   */\n  public updateSkill(\n    id: string,\n    body: EngineUpdateSkillRequest,\n    options?: any\n  ) {\n    return SkillServiceApiFp(this.configuration).updateSkill(id, body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n}\n\n/**\n * SupervisorInTeamServiceApi - axios parameter creator\n * @export\n */\nexport const SupervisorInTeamServiceApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create SupervisorInTeam\n     * @param {string} team_id\n     * @param {EngineCreateSupervisorInTeamRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createSupervisorInTeam(\n      team_id: string,\n      body: EngineCreateSupervisorInTeamRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling createSupervisorInTeam.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling createSupervisorInTeam.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/supervisors`.replace(\n        `{${'team_id'}}`,\n        encodeURIComponent(String(team_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineCreateSupervisorInTeamRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Remove SupervisorInTeam\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteSupervisorInTeam(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling deleteSupervisorInTeam.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling deleteSupervisorInTeam.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/supervisors/{id}`\n        .replace(`{${'team_id'}}`, encodeURIComponent(String(team_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'DELETE',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary SupervisorInTeam item\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readSupervisorInTeam(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling readSupervisorInTeam.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling readSupervisorInTeam.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/supervisors/{id}`\n        .replace(`{${'team_id'}}`, encodeURIComponent(String(team_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary List of SupervisorInTeam\n     * @param {string} team_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchSupervisorInTeam(\n      team_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling searchSupervisorInTeam.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/supervisors`.replace(\n        `{${'team_id'}}`,\n        encodeURIComponent(String(team_id))\n      )\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page\n      }\n\n      if (size !== undefined) {\n        localVarQueryParameter['size'] = size\n      }\n\n      if (domain_id !== undefined) {\n        localVarQueryParameter['domain_id'] = domain_id\n      }\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n    /**\n     *\n     * @summary Update SupervisorInTeam\n     * @param {string} team_id\n     * @param {string} id\n     * @param {EngineUpdateSupervisorInTeamRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateSupervisorInTeam(\n      team_id: string,\n      id: string,\n      body: EngineUpdateSupervisorInTeamRequest,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'team_id' is not null or undefined\n      if (team_id === null || team_id === undefined) {\n        throw new RequiredError(\n          'team_id',\n          'Required parameter team_id was null or undefined when calling updateSupervisorInTeam.'\n        )\n      }\n      // verify required parameter 'id' is not null or undefined\n      if (id === null || id === undefined) {\n        throw new RequiredError(\n          'id',\n          'Required parameter id was null or undefined when calling updateSupervisorInTeam.'\n        )\n      }\n      // verify required parameter 'body' is not null or undefined\n      if (body === null || body === undefined) {\n        throw new RequiredError(\n          'body',\n          'Required parameter body was null or undefined when calling updateSupervisorInTeam.'\n        )\n      }\n      const localVarPath = `/call_center/teams/{team_id}/supervisors/{id}`\n        .replace(`{${'team_id'}}`, encodeURIComponent(String(team_id)))\n        .replace(`{${'id'}}`, encodeURIComponent(String(id)))\n      const localVarUrlObj = globalImportUrl.parse(localVarPath, true)\n      let baseOptions\n      if (configuration) {\n        baseOptions = configuration.baseOptions\n      }\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options,\n      }\n      const localVarHeaderParameter = {} as any\n      const localVarQueryParameter = {} as any\n\n      // authentication AccessToken required\n      if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue =\n          typeof configuration.apiKey === 'function'\n            ? configuration.apiKey('X-Webitel-Access')\n            : configuration.apiKey\n        localVarHeaderParameter['X-Webitel-Access'] = localVarApiKeyValue\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json'\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      }\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      }\n      const needsSerialization =\n        <any>'EngineUpdateSupervisorInTeamRequest' !== 'string' ||\n        localVarRequestOptions.headers['Content-Type'] === 'application/json'\n      localVarRequestOptions.data = needsSerialization\n        ? JSON.stringify(body !== undefined ? body : {})\n        : body || ''\n\n      return {\n        url: globalImportUrl.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      }\n    },\n  }\n}\n\n/**\n * SupervisorInTeamServiceApi - functional programming interface\n * @export\n */\nexport const SupervisorInTeamServiceApiFp = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Create SupervisorInTeam\n     * @param {string} team_id\n     * @param {EngineCreateSupervisorInTeamRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createSupervisorInTeam(\n      team_id: string,\n      body: EngineCreateSupervisorInTeamRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineSupervisorInTeam> {\n      const localVarAxiosArgs = SupervisorInTeamServiceApiAxiosParamCreator(\n        configuration\n      ).createSupervisorInTeam(team_id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Remove SupervisorInTeam\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteSupervisorInTeam(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineSupervisorInTeam> {\n      const localVarAxiosArgs = SupervisorInTeamServiceApiAxiosParamCreator(\n        configuration\n      ).deleteSupervisorInTeam(team_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary SupervisorInTeam item\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readSupervisorInTeam(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineSupervisorInTeam> {\n      const localVarAxiosArgs = SupervisorInTeamServiceApiAxiosParamCreator(\n        configuration\n      ).readSupervisorInTeam(team_id, id, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary List of SupervisorInTeam\n     * @param {string} team_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchSupervisorInTeam(\n      team_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineListSupervisorInTeam> {\n      const localVarAxiosArgs = SupervisorInTeamServiceApiAxiosParamCreator(\n        configuration\n      ).searchSupervisorInTeam(team_id, page, size, domain_id, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n    /**\n     *\n     * @summary Update SupervisorInTeam\n     * @param {string} team_id\n     * @param {string} id\n     * @param {EngineUpdateSupervisorInTeamRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateSupervisorInTeam(\n      team_id: string,\n      id: string,\n      body: EngineUpdateSupervisorInTeamRequest,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<EngineSupervisorInTeam> {\n      const localVarAxiosArgs = SupervisorInTeamServiceApiAxiosParamCreator(\n        configuration\n      ).updateSupervisorInTeam(team_id, id, body, options)\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        }\n        return axios.request(axiosRequestArgs)\n      }\n    },\n  }\n}\n\n/**\n * SupervisorInTeamServiceApi - factory interface\n * @export\n */\nexport const SupervisorInTeamServiceApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Create SupervisorInTeam\n     * @param {string} team_id\n     * @param {EngineCreateSupervisorInTeamRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createSupervisorInTeam(\n      team_id: string,\n      body: EngineCreateSupervisorInTeamRequest,\n      options?: any\n    ) {\n      return SupervisorInTeamServiceApiFp(configuration).createSupervisorInTeam(\n        team_id,\n        body,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Remove SupervisorInTeam\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteSupervisorInTeam(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return SupervisorInTeamServiceApiFp(configuration).deleteSupervisorInTeam(\n        team_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary SupervisorInTeam item\n     * @param {string} team_id\n     * @param {string} id\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    readSupervisorInTeam(\n      team_id: string,\n      id: string,\n      domain_id?: string,\n      options?: any\n    ) {\n      return SupervisorInTeamServiceApiFp(configuration).readSupervisorInTeam(\n        team_id,\n        id,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary List of SupervisorInTeam\n     * @param {string} team_id\n     * @param {number} [page]\n     * @param {number} [size]\n     * @param {string} [domain_id]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchSupervisorInTeam(\n      team_id: string,\n      page?: number,\n      size?: number,\n      domain_id?: string,\n      options?: any\n    ) {\n      return SupervisorInTeamServiceApiFp(configuration).searchSupervisorInTeam(\n        team_id,\n        page,\n        size,\n        domain_id,\n        options\n      )(axios, basePath)\n    },\n    /**\n     *\n     * @summary Update SupervisorInTeam\n     * @param {string} team_id\n     * @param {string} id\n     * @param {EngineUpdateSupervisorInTeamRequest} body\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateSupervisorInTeam(\n      team_id: string,\n      id: string,\n      body: EngineUpdateSupervisorInTeamRequest,\n      options?: any\n    ) {\n      return SupervisorInTeamServiceApiFp(configuration).updateSupervisorInTeam(\n        team_id,\n        id,\n        body,\n        options\n      )(axios, basePath)\n    },\n  }\n}\n\n/**\n * SupervisorInTeamServiceApi - object-oriented interface\n * @export\n * @class SupervisorInTeamServiceApi\n * @extends {BaseAPI}\n */\nexport class SupervisorInTeamServiceApi extends BaseAPI {\n  /**\n   *\n   * @summary Create SupervisorInTeam\n   * @param {string} team_id\n   * @param {EngineCreateSupervisorInTeamRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SupervisorInTeamServiceApi\n   */\n  public createSupervisorInTeam(\n    team_id: string,\n    body: EngineCreateSupervisorInTeamRequest,\n    options?: any\n  ) {\n    return SupervisorInTeamServiceApiFp(\n      this.configuration\n    ).createSupervisorInTeam(team_id, body, options)(this.axios, this.basePath)\n  }\n\n  /**\n   *\n   * @summary Remove SupervisorInTeam\n   * @param {string} team_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SupervisorInTeamServiceApi\n   */\n  public deleteSupervisorInTeam(\n    team_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return SupervisorInTeamServiceApiFp(\n      this.configuration\n    ).deleteSupervisorInTeam(team_id, id, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary SupervisorInTeam item\n   * @param {string} team_id\n   * @param {string} id\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SupervisorInTeamServiceApi\n   */\n  public readSupervisorInTeam(\n    team_id: string,\n    id: string,\n    domain_id?: string,\n    options?: any\n  ) {\n    return SupervisorInTeamServiceApiFp(\n      this.configuration\n    ).readSupervisorInTeam(team_id, id, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary List of SupervisorInTeam\n   * @param {string} team_id\n   * @param {number} [page]\n   * @param {number} [size]\n   * @param {string} [domain_id]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SupervisorInTeamServiceApi\n   */\n  public searchSupervisorInTeam(\n    team_id: string,\n    page?: number,\n    size?: number,\n    domain_id?: string,\n    options?: any\n  ) {\n    return SupervisorInTeamServiceApiFp(\n      this.configuration\n    ).searchSupervisorInTeam(team_id, page, size, domain_id, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n\n  /**\n   *\n   * @summary Update SupervisorInTeam\n   * @param {string} team_id\n   * @param {string} id\n   * @param {EngineUpdateSupervisorInTeamRequest} body\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SupervisorInTeamServiceApi\n   */\n  public updateSupervisorInTeam(\n    team_id: string,\n    id: string,\n    body: EngineUpdateSupervisorInTeamRequest,\n    options?: any\n  ) {\n    return SupervisorInTeamServiceApiFp(\n      this.configuration\n    ).updateSupervisorInTeam(team_id, id, body, options)(\n      this.axios,\n      this.basePath\n    )\n  }\n}\n","// tslint:disable\n/**\n * Webitel engine API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2019.0.0\n * Contact: support@webitel.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport interface ConfigurationParameters {\n  apiKey?: string | ((name: string) => string)\n  username?: string\n  password?: string\n  accessToken?: string | ((name?: string, scopes?: string[]) => string)\n  basePath?: string\n  baseOptions?: any\n}\n\nexport class Configuration {\n  /**\n   * parameter for apiKey security\n   * @param name security name\n   * @memberof Configuration\n   */\n  apiKey?: string | ((name: string) => string)\n  /**\n   * parameter for basic security\n   *\n   * @type {string}\n   * @memberof Configuration\n   */\n  username?: string\n  /**\n   * parameter for basic security\n   *\n   * @type {string}\n   * @memberof Configuration\n   */\n  password?: string\n  /**\n   * parameter for oauth2 security\n   * @param name security name\n   * @param scopes oauth2 scope\n   * @memberof Configuration\n   */\n  accessToken?: string | ((name?: string, scopes?: string[]) => string)\n  /**\n   * override base path\n   *\n   * @type {string}\n   * @memberof Configuration\n   */\n  basePath?: string\n  /**\n   * base options for axios calls\n   *\n   * @type {any}\n   * @memberof Configuration\n   */\n  baseOptions?: any\n\n  constructor(param: ConfigurationParameters = {}) {\n    this.apiKey = param.apiKey\n    this.username = param.username\n    this.password = param.password\n    this.accessToken = param.accessToken\n    this.basePath = param.basePath\n    this.baseOptions = param.baseOptions\n  }\n}\n","// tslint:disable\n/**\n * Webitel engine API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2019.0.0\n * Contact: support@webitel.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport * from './api'\nexport * from './configuration'\n","import { Client, UserCallRequest } from './client'\n\nexport enum CallActions {\n  Ringing = 'ringing',\n  Active = 'active',\n  Bridge = 'bridge',\n  Hold = 'hold',\n  DTMF = 'dtmf',\n  Voice = 'voice',\n  Silence = 'silence',\n  Execute = 'execute',\n  Update = 'update',\n  Hangup = 'hangup',\n  PeerStream = 'peerStream',\n}\n\nexport enum CallDirection {\n  Inbound = 'inbound',\n  Outbound = 'outbound',\n  Internal = 'internal',\n}\n\nexport interface AnswerRequest {\n  useVideo?: boolean\n  useAudio?: boolean\n  useScreen?: boolean\n}\n\nexport interface CallEventData {\n  id: string\n  node_name: string\n  action: string\n}\n\nexport interface CallEventExecute extends CallEventData {\n  application: string\n}\n\nexport interface CallEventDTMF extends CallEventData {\n  digit: string\n}\n\nexport interface CallInfo extends CallEventData {\n  parent_id: string\n  owner_id: string\n  direction: string\n  destination: string\n\n  from_number: string\n  from_name: string\n\n  to_number: string\n  to_name: string\n\n  payload: Map<string, string>\n  gateway_id: string\n  video_request: string\n  video_flow: string\n  screen_request: string\n}\n\nexport interface CallHangup extends CallEventData {\n  cause: string\n}\n\nexport class Call {\n  id: string\n  nodeName: string\n  state!: string\n\n  direction!: string\n  destination!: string\n\n  fromNumber!: string\n  fromName!: string\n\n  toNumber!: string\n  toName!: string\n  payload!: Map<string, string>\n\n  videoRequest!: boolean\n  screenRequest!: boolean\n  videoFlow!: string | null\n  peerStreams!: MediaStream[] | null\n  screen!: string | null\n\n  createdAt: number\n  answeredAt: number\n  hangupAt: number\n\n  hangupCause!: string\n\n  parentCallId!: string\n  ownerCallId!: string\n\n  _muted!: boolean\n  _gatewayId!: string | null\n\n  digits!: string[]\n  applications!: string[]\n  voice: boolean\n\n  constructor(\n    protected client: Client,\n    e: CallInfo,\n    peerStreams: MediaStream[] | null\n  ) {\n    this.voice = true\n    this.createdAt = Date.now()\n\n    this.answeredAt = 0\n    this.hangupAt = 0\n    this.peerStreams = peerStreams\n\n    this.id = e.id\n    this.digits = []\n    this.applications = []\n    this.nodeName = e.node_name\n    this.setState(e)\n    this.setInfo(e)\n  }\n\n  setActive(e: CallEventData) {\n    if (!this.answeredAt) {\n      this.answeredAt = Date.now()\n    }\n    this.setState(e)\n  }\n\n  get display() {\n    return `${this.displayNumber} (${this.displayName})`\n  }\n\n  get muted() {\n    return this._muted\n  }\n\n  get allowInboundVideo(): boolean {\n    if (this.videoFlow) {\n      return this.videoFlow.indexOf('send') > -1\n    }\n\n    return false\n  }\n\n  get allowOutboundVideo(): boolean {\n    if (this.videoFlow) {\n      return this.videoFlow.indexOf('recv') > -1\n    }\n\n    return false\n  }\n\n  setInfo(s: CallInfo) {\n    this.ownerCallId = s.owner_id\n    this.parentCallId = s.parent_id\n    this.destination = s.destination\n    this.direction = s.direction\n    this.fromNumber = s.from_number\n    this.fromName = s.from_name\n    this.toName = s.to_name\n    this.toNumber = s.to_number\n    this.payload = s.payload\n\n    if (s.gateway_id) {\n      this._gatewayId = s.gateway_id\n    } else {\n      this._gatewayId = null // ?\n    }\n\n    if (s.video_flow) {\n      this.videoFlow = s.video_flow\n    } else {\n      this.videoFlow = null\n    }\n\n    this.screenRequest = s.screen_request === 'true'\n    this.videoRequest = s.video_request === 'true' //\n\n    this.setState(s)\n  }\n\n  get gatewayId() {\n    return this._gatewayId\n  }\n\n  setState(s: CallEventData) {\n    this.state = s.action\n  }\n\n  get active(): boolean {\n    return this.hangupAt === 0\n  }\n\n  setPeerStreams(streams: MediaStream[] | null) {\n    this.peerStreams = streams\n  }\n\n  setHangup(s: CallHangup) {\n    this.hangupAt = Date.now()\n    this.hangupCause = s.cause\n    this.voice = false\n    this.peerStreams = null\n    this.setState(s)\n  }\n\n  setVoice(s: CallEventData) {\n    this.voice = true\n  }\n\n  setSilence(s: CallEventData) {\n    this.voice = false\n  }\n\n  setExecute(s: CallEventExecute) {\n    this.applications.push(s.application)\n  }\n\n  addDigit(s: CallEventDTMF) {\n    this.digits.push(s.digit)\n  }\n\n  get displayNumber() {\n    if (this.direction === 'inbound') {\n      return this.fromNumber\n    } else {\n      return this.toNumber\n    }\n  }\n\n  get displayName() {\n    if (this.direction === 'inbound') {\n      return this.fromName\n    } else {\n      return this.toName\n    }\n  }\n\n  /* Call control */\n  answer(req: AnswerRequest): boolean {\n    let sessionId = null\n    if (this.client.phone.hasSession(this.id)) {\n      sessionId = this.id\n    } else if (this.client.phone.hasSession(this.parentCallId)) {\n      sessionId = this.parentCallId\n    }\n\n    if (sessionId) {\n      return this.client.phone.answer(sessionId, req)\n    }\n\n    return false\n  }\n\n  async hangup(cause?: string) {\n    let _cause = cause\n    if (this.answeredAt === 0 && !cause) {\n      _cause =\n        this.direction === CallDirection.Inbound\n          ? 'USER_BUSY'\n          : 'ORIGINATOR_CANCEL'\n    }\n\n    return this.client.request('call_hangup', {\n      id: this.id,\n      node_id: this.nodeName,\n      cause: _cause,\n    })\n  }\n\n  async toggleHold() {\n    if (this.state === CallActions.Hold) {\n      return this.unHold()\n    } else {\n      return this.hold()\n    }\n  }\n\n  async hold() {\n    if (this.state === CallActions.Hold) {\n      throw new Error('Call is hold')\n    }\n\n    return this.client.request('call_hold', {\n      id: this.id,\n      node_id: this.nodeName,\n    })\n  }\n\n  async unHold() {\n    if (this.state !== CallActions.Hold) {\n      throw new Error('Call is active')\n    }\n\n    return this.client.request('call_unhold', {\n      id: this.id,\n      node_id: this.nodeName,\n    })\n  }\n\n  async sendDTMF(dtmf: string) {\n    return this.client.request('call_dtmf', {\n      id: this.id,\n      node_id: this.nodeName,\n      dtmf,\n    })\n  }\n\n  async blindTransfer(destination: string) {\n    if (!this.parentCallId) {\n      throw new Error('Not allow one leg')\n    }\n\n    return this.client.request('call_blind_transfer', {\n      id: this.parentCallId,\n      node_id: this.nodeName,\n      destination,\n    })\n  }\n\n  async mute(mute = false) {\n    const res = await this.client.request('call_mute', {\n      id: this.id,\n      node_id: this.nodeName,\n      mute,\n    })\n    this._muted = mute\n\n    return res\n  }\n\n  async bridgeTo(call: Call) {\n    return this.client.request('call_bridge', {\n      id: this.id,\n      node_id: this.nodeName,\n      parent_id: call.id,\n      parent_node_id: call.nodeName,\n    })\n  }\n\n  async callToUser(req: UserCallRequest) {\n    req.nodeId = this.nodeName\n    req.parentCallId = this.id || null\n    req.sendToCallId = this.parentCallId || null\n\n    return this.client.inviteToUser(req)\n  }\n}\n","export interface Log {\n  debug(primaryMessage: string, ...supportingData: any[]): void\n  warn(primaryMessage: string, ...supportingData: any[]): void\n  error(primaryMessage: string, ...supportingData: any[]): void\n  info(primaryMessage: string, ...supportingData: any[]): void\n}\n\nexport class Log implements Log {\n  debug(msg: string, ...supportingDetails: any[]): void {\n    this.emitLogMessage('debug', msg, supportingDetails)\n  }\n  info(msg: string, ...supportingDetails: any[]): void {\n    this.emitLogMessage('info', msg, supportingDetails)\n  }\n  warn(msg: string, ...supportingDetails: any[]): void {\n    this.emitLogMessage('warn', msg, supportingDetails)\n  }\n  error(msg: string, ...supportingDetails: any[]): void {\n    this.emitLogMessage('error', msg, supportingDetails)\n  }\n\n  private emitLogMessage(\n    msgType: 'debug' | 'info' | 'warn' | 'error',\n    msg: string,\n    supportingDetails: any[]\n  ) {\n    if (supportingDetails.length > 0) {\n      console[msgType](msg, ...supportingDetails)\n    } else {\n      console[msgType](msg)\n    }\n  }\n}\n","import { EventEmitter } from 'ee-ts'\nimport * as SipClient from 'jssip'\nimport { AnswerRequest } from './call'\nimport { Log } from './log'\n\nexport interface SipConfiguration {\n  server: string\n  extension: string\n  realm: string\n  uri: string\n  authorization_user: string\n  ha1?: string\n}\n\ninterface RTCSession {\n  session: SipSession\n  peerconnection: SipSession\n  request: RTCRequest\n}\n\ninterface RTCRequest {\n  getHeader(name: string): string\n}\n\ninterface SipSession {\n  id: string\n  direction: string\n  stream: object\n  connection: RTCPeerConnection\n  answer(s: object): void\n  on(name: string, arg?: object): void\n}\n\nexport interface CallSession {\n  sip: SipSession\n  incoming: boolean\n  instance_id: string\n}\n\ninterface PeerConnectionEvent {\n  peerconnection: RTCPeerConnection\n}\n\ninterface SipHoneEvent {\n  unregistered(): void\n  error(err: Error): void\n  peerStreams(id: string, e: MediaStream[] | null): void\n  newSession(id: string, session: CallSession): void\n}\n\nexport class SipPhone extends EventEmitter<SipHoneEvent> {\n  static readonly userAgent = 'Webitel-Phone/0.0.1'\n  private ua!: SipClient.UA\n  private sessionCache = new Map<string, CallSession>()\n  private log: Log\n\n  constructor(private instanceId: string) {\n    super()\n    SipClient.debug.enable('*')\n    this.log = new Log()\n\n    this.on('unregistered', () => {\n      this.ua.removeAllListeners()\n      delete this.ua\n      this.sessionCache.clear()\n    })\n  }\n\n  getMediaConstraints(req: AnswerRequest): object {\n    if (req.useScreen) {\n      return {\n        video: false,\n        audio: false,\n        screen: true,\n      }\n    }\n\n    return {\n      video: req.useVideo || false,\n      audio: req.useAudio || true,\n    }\n  }\n\n  callOption(req: AnswerRequest): object {\n    return {\n      sessionTimersExpires: 120,\n      pcConfig: {\n        iceServers: [{ urls: ['stun:stun.l.google.com:19302'] }],\n      },\n      rtcOfferConstraints: {\n        offerToReceiveAudio: req.useAudio || true,\n        offerToReceiveVideo: req.useVideo,\n      },\n      mediaConstraints: this.getMediaConstraints(req),\n    }\n  }\n\n  getSession(id: string): CallSession | null {\n    if (this.sessionCache.has(id)) {\n      return this.sessionCache.get(id) as CallSession\n    }\n\n    return null\n  }\n\n  hasSession(id: string | null): boolean {\n    return this.sessionCache.has(id!)\n  }\n\n  getPeerStream(id: string): MediaStream[] | null {\n    const session = this.getSession(id)\n    if (session && session.sip.connection) {\n      // @ts-ignore\n      const streams = session.sip.connection.getRemoteStreams() as MediaStream[]\n      if (streams && streams.length) {\n        return streams\n      }\n    }\n\n    return null\n  }\n\n  answer(id: string, req: AnswerRequest): boolean {\n    if (this.sessionCache.has(id)) {\n      const session = this.sessionCache.get(id)\n      session!.sip.answer(this.callOption(req))\n\n      return true\n    }\n\n    return false\n  }\n\n  async register(sipConf: SipConfiguration) {\n    const socket = new SipClient.WebSocketInterface(sipConf.server)\n\n    const configuration = {\n      realm: sipConf.realm,\n      uri: sipConf.uri,\n      authorization_user: sipConf.authorization_user,\n      ha1: sipConf.ha1,\n      user_agent: SipPhone.userAgent,\n      sockets: [socket],\n      session_timers: true,\n      // use_preloaded_route: true,\n      register_expires: 300,\n      connection_recovery_min_interval: 5,\n      connection_recovery_max_interval: 60,\n      // instance_id: '8f1fa16a-1165-4a96-8341-785b1ef24f13',\n    }\n\n    const ua = (this.ua = new SipClient.UA(configuration))\n\n    ua.on('connected', (e: object) => {\n      this.log.error('connected', e)\n    })\n\n    ua.on('newRTCSession', (e: RTCSession) => {\n      const session = e.session\n      const id = e.request.getHeader('X-Webitel-Uuid') || session.id\n\n      const callSession = {\n        sip: session,\n        incoming: session.direction === 'incoming',\n        instance_id: e.request.getHeader('X-Webitel-Sock-Id'),\n      }\n\n      this.storeSession(id, callSession)\n\n      session.on('peerconnection', (peer: PeerConnectionEvent) => {\n        peer.peerconnection.addEventListener(\n          'addstream',\n          async (evt: Event) => {\n            // set remote audio stream\n            this.emit(\n              'peerStreams',\n              id,\n              new Array((evt as MediaStreamEvent).stream as MediaStream)\n            )\n          }\n        )\n      })\n\n      session.on('ended', () => {\n        // this handler will be called for incoming calls too\n        this.removeSession(id)\n      })\n\n      session.on('failed', () => {\n        // this handler will be called for incoming calls too\n        this.removeSession(id)\n      })\n\n      session.on('accepted', () => {\n        // the call has answered\n        if (!this.isOutboundCall(id)) {\n          this.emit('peerStreams', id, this.getPeerStream(id))\n        }\n      })\n\n      session.on('confirmed', () => {\n        // this handler will be called for incoming calls too\n      })\n\n      this.emit('newSession', id, callSession)\n    })\n\n    ua.on('disconnected', (e: object) => {\n      this.log.error('disconnected', e)\n      this.emit('unregistered')\n    })\n\n    ua.on('registered', (e: object) => {\n      this.log.error('registered', e)\n    })\n\n    ua.on('unregistered', (e: object) => {\n      this.log.error('unregistered', e)\n      this.emit('unregistered')\n    })\n\n    ua.on('registrationFailed', (e: object) => {\n      this.log.error('registrationFailed', e)\n    })\n\n    ua.on('error', (e: Error) => {\n      this.emit('error', e)\n      this.log.error('error', e)\n    })\n\n    ua.start()\n  }\n\n  isOutboundCall(id: string): boolean {\n    const session = this.getSession(id)\n    if (session) {\n      return session.incoming && session.instance_id === this.instanceId\n    }\n\n    return false\n  }\n\n  async unregister() {\n    if (this.ua) {\n      this.ua.unregister()\n    }\n  }\n\n  get allSession(): CallSession[] {\n    return Array.from(this.sessionCache.values())\n  }\n\n  protected removeSession(id: string): boolean {\n    if (this.sessionCache.has(id)) {\n      this.sessionCache.delete(id)\n\n      return true\n    }\n\n    return false\n  }\n\n  protected storeSession(id: string, session: CallSession) {\n    if (this.sessionCache.has(id)) {\n      throw new Error('Session already store')\n    }\n\n    this.sessionCache.set(id, session)\n  }\n}\n","export function formatWebSocketUri(host: string): string {\n  return host.replace(/^http/, 'ws')\n}\n","import { EventEmitter } from 'ee-ts'\nimport { formatWebSocketUri } from './utils'\n\nconst SOCKET_URL_SUFFIX = 'websocket'\n\nexport interface Message {\n  event?: string\n  status?: string\n  seq?: number\n  seq_reply?: number\n  data: any\n  error?: Map<string, Error>\n}\n\nexport interface Request {\n  seq: number\n  action: string\n  data?: object\n}\n\nexport interface SocketEvents {\n  message(msg: Message): void\n  close(code: number): void\n  open(): void\n}\n\nexport class Socket extends EventEmitter<SocketEvents> {\n  private socket!: WebSocket\n\n  constructor(private host: string) {\n    super()\n  }\n\n  connect(token: string) {\n    this.socket = new WebSocket(\n      `${formatWebSocketUri(\n        this.host\n      )}/${SOCKET_URL_SUFFIX}?access_token=${token}`\n    )\n\n    this.socket.onclose = (e) => this.onClose(e.code)\n\n    this.socket.onmessage = (e) => this.onMessage(e.data)\n    this.socket.onopen = () => this.onOpen()\n  }\n\n  send(request: Request): never | null {\n    this.socket.send(JSON.stringify(request))\n\n    return null\n  }\n\n  close(code?: number) {\n    this.socket.close(code)\n    delete this.socket\n  }\n\n  private onOpen() {\n    this.emit('open')\n  }\n\n  private onClose(code: number) {\n    this.emit('close', code)\n  }\n\n  private onMessage(data: string) {\n    const message = JSON.parse(data) as Message\n    this.emit('message', message)\n  }\n}\n","import { EventEmitter } from 'ee-ts'\nimport {\n  AnswerRequest,\n  Call,\n  CallActions,\n  CallEventData,\n  CallEventDTMF,\n  CallEventExecute,\n  CallHangup,\n  CallInfo,\n} from './call'\nimport { Log } from './log'\nimport { CallSession, SipConfiguration, SipPhone } from './sip'\nimport { Message, Socket } from './socket'\n\nexport interface Config {\n  endpoint: string\n  token?: string\n  logLvl?: 'debug' | 'info' | 'warn' | 'error'\n  registerWebDevice?: boolean\n  phone?: number\n}\n\ninterface PromiseCallback {\n  resolve: (res: object) => void\n  reject: (err: object) => void\n}\n\nexport interface OutboundCallRequest {\n  parentCallId?: string\n  toNumber: string\n  toName?: string\n  useVideo?: boolean\n  useScreen?: boolean\n  useAudio?: boolean\n  variables?: Map<string, string>\n}\n\nexport interface UserCallRequest {\n  nodeId?: string | null\n  parentCallId?: string | null\n  sendToCallId?: string | null\n  toUserId: string\n  useVideo?: boolean\n  useScreen?: boolean\n  useAudio?: boolean\n  variables?: Map<string, string>\n}\n\nconst WEBSOCKET_AUTHENTICATION_CHALLENGE = 'authentication_challenge'\nconst WEBSOCKET_DEFAULT_DEVICE_CONFIG = 'user_default_device'\n\nconst WEBSOCKET_MAKE_OUTBOUND_CALL = 'call_invite'\nconst WEBSOCKET_MAKE_USER_CALL = 'call_user'\nconst WEBSOCKET_EVENT_HELLO = 'hello'\nconst WEBSOCKET_EVENT_CALL = 'call'\nconst WEBSOCKET_EVENT_SIP = 'sip'\n\nexport enum Response {\n  STATUS_FAIL = 'FAIL',\n  STATUS_OK = 'OK',\n}\n\nexport interface Session {\n  id: string\n  expire: number\n  user_id: number\n  role_ids: number[]\n}\n\nexport interface ConnectionInfo {\n  sock_id: string\n  server_build_commit: string\n  server_node_id: string\n  server_version: string\n  server_time: number\n  session: Session\n}\n\nexport type CallEventHandler = (action: CallActions, call: Call) => void\n\ninterface EventHandler {\n  [WEBSOCKET_EVENT_CALL](action: CallActions, call: Call): void\n  [WEBSOCKET_EVENT_SIP](data: object): void\n}\n\nexport class Client {\n  phone!: SipPhone\n  private socket!: Socket\n  private connectionInfo!: ConnectionInfo\n\n  private reqSeq = 0\n  private queueRequest: Map<number, PromiseCallback> = new Map<\n    number,\n    PromiseCallback\n  >()\n  private log: Log\n  private eventHandler: EventEmitter<EventHandler>\n  private callStore: Map<string, Call>\n\n  constructor(protected readonly _config: Config) {\n    this.log = new Log()\n    this.eventHandler = new EventEmitter()\n    this.callStore = new Map<string, Call>()\n  }\n\n  async connect() {\n    await this.connectToSocket()\n  }\n\n  async disconnect() {\n    this.socket.close()\n  }\n\n  async subscribeCall(\n    handler: CallEventHandler,\n    data?: object\n  ): Promise<null | Error> {\n    const res = await this.request(`subscribe_call`, data)\n    this.eventHandler.on(WEBSOCKET_EVENT_CALL, handler)\n\n    return res\n  }\n\n  async unSubscribe(\n    action: string,\n    handler: CallEventHandler,\n    data?: object\n  ): Promise<null | Error> {\n    const res = await this.request(`un_subscribe_${action}`, data)\n\n    // this.eventHandler.listeners(action)\n    // this.eventHandler.removeListener(action, handler)\n    // this.eventHandler.off(action, handler)\n\n    return res\n  }\n\n  allCall(): Call[] {\n    return Array.from(this.callStore.values())\n  }\n\n  callById(id: string): Call | undefined {\n    if (this.callStore.has(id)) {\n      return this.callStore.get(id)\n    }\n\n    return undefined\n  }\n\n  async auth() {\n    return this.request(WEBSOCKET_AUTHENTICATION_CHALLENGE, {\n      token: this._config.token,\n    })\n  }\n\n  sessionInfo(): Session {\n    return this.connectionInfo.session\n  }\n\n  get version(): string {\n    return this.connectionInfo.server_version\n  }\n\n  get instanceId(): string {\n    return this.connectionInfo.sock_id\n  }\n\n  invite(req: OutboundCallRequest) {\n    return this.request(WEBSOCKET_MAKE_OUTBOUND_CALL, req)\n  }\n\n  inviteToUser(req: UserCallRequest) {\n    return this.request(WEBSOCKET_MAKE_USER_CALL, req)\n  }\n\n  answer(id: string, req: AnswerRequest): boolean {\n    return this.phone.answer(id, req)\n  }\n\n  request(action: string, data?: object): Promise<Error> {\n    return new Promise<Error>((resolve: () => void, reject: () => void) => {\n      this.queueRequest.set(++this.reqSeq, { resolve, reject })\n      this.socket.send({\n        seq: this.reqSeq,\n        action,\n        data,\n      })\n    })\n  }\n\n  useWebPhone(): boolean {\n    return this._config.registerWebDevice || false\n  }\n\n  private async deviceConfig(): Promise<SipConfiguration | Error> {\n    return this.request(WEBSOCKET_DEFAULT_DEVICE_CONFIG, {})\n  }\n\n  private async onMessage(message: Message) {\n    this.log.debug('receive message: ', message)\n    if (message.seq_reply! > 0) {\n      if (this.queueRequest.has(message.seq_reply!)) {\n        const promise = this.queueRequest.get(message.seq_reply!)\n        this.queueRequest.delete(message.seq_reply!)\n        if (message.status === Response.STATUS_OK) {\n          promise!.resolve(message.data)\n        } else {\n          promise!.reject(message.error!)\n        }\n      }\n    } else {\n      switch (message.event) {\n        case WEBSOCKET_EVENT_HELLO:\n          await this.connected(message.data as ConnectionInfo)\n          this.log.debug(\n            `opened session ${this.connectionInfo.sock_id} for userId=${\n              this.connectionInfo.session.user_id\n            }`\n          )\n          break\n        case WEBSOCKET_EVENT_CALL:\n          this.handleCallEvents(message.data.call as CallEventData)\n          break\n\n        case WEBSOCKET_EVENT_SIP:\n          this.eventHandler.emit(WEBSOCKET_EVENT_SIP, message.data)\n          break\n        default:\n          this.log.error(`event ${message.event} not handler`)\n      }\n    }\n  }\n\n  private async connected(info: ConnectionInfo) {\n    this.connectionInfo = info\n\n    this.phone = new SipPhone(this.instanceId)\n\n    this.phone.on(\n      'peerStreams',\n      (id: string, streams: MediaStream[] | null) => {\n        const call = this.callById(id)\n        if (call && call.peerStreams === null) {\n          call.setPeerStreams(streams)\n          this.eventHandler.emit(\n            WEBSOCKET_EVENT_CALL,\n            CallActions.PeerStream,\n            call\n          )\n        }\n      }\n    )\n\n    this.phone.on('newSession', this.onNewCallSession.bind(this))\n\n    if (this.useWebPhone()) {\n      try {\n        const conf = await this.deviceConfig()\n        await this.phone.register(conf as SipConfiguration)\n      } catch (e) {\n        // FIXME add handle error\n        this.log.error(e)\n      }\n    }\n  }\n\n  private onNewCallSession(id: string, session: CallSession) {\n    this.checkAutoAnswer(id)\n  }\n\n  private checkAutoAnswer(id: string) {\n    const call = this.callById(id)\n    if (call && this.phone.isOutboundCall(id)) {\n      call.answer({\n        useVideo: call.videoRequest,\n        useScreen: call.screenRequest,\n      })\n    }\n  }\n\n  private connectToSocket(): Promise<Error | null> {\n    return new Promise<Error | null>((resolve, reject) => {\n      try {\n        this.socket = new Socket(this._config.endpoint)\n        this.socket.connect(this._config.token!)\n      } catch (e) {\n        reject(e)\n\n        return\n      }\n\n      this.socket.on('message', this.onMessage.bind(this))\n      this.socket.on('close', (code: number) => {\n        this.log.error('socket close code: ', code)\n        reject(new Error(`close socket code: ${code}`))\n      })\n      this.socket.on('open', () => {\n        resolve(null)\n      })\n    })\n  }\n\n  private handleCallEvents(event: CallEventData) {\n    let call: Call | undefined\n\n    switch (event.action) {\n      case CallActions.Ringing:\n        call = new Call(\n          this,\n          event as CallInfo,\n          this.phone.getPeerStream(event.id)\n        )\n\n        this.callStore.set(call.id, call)\n\n        this.checkAutoAnswer(event.id)\n        break\n\n      case CallActions.Active:\n        call = this.callById(event.id)\n        if (call) {\n          call.setActive(event)\n        }\n        break\n\n      case CallActions.Bridge:\n        call = this.callById(event.id)\n        if (call) {\n          // const session = this.phone.getSession(event.id);\n          // if (session) {\n          //   debugger\n          // }\n          call.setInfo(event as CallInfo)\n        }\n        break\n\n      case CallActions.Execute:\n        call = this.callById(event.id)\n        if (call) {\n          call.setExecute(event as CallEventExecute)\n        }\n        break\n\n      case CallActions.DTMF:\n        call = this.callById(event.id)\n        if (call) {\n          call.addDigit(event as CallEventDTMF)\n        }\n        break\n\n      case CallActions.Voice:\n        call = this.callById(event.id)\n        if (call) {\n          call.setVoice(event)\n        }\n        break\n\n      case CallActions.Silence:\n        call = this.callById(event.id)\n        if (call) {\n          call.setSilence(event)\n        }\n        break\n\n      case CallActions.Hold:\n        call = this.callById(event.id)\n        if (call) {\n          call.setState(event)\n        }\n        break\n\n      case CallActions.Hangup:\n        call = this.callById(event.id)\n        if (call) {\n          call.setHangup(event as CallHangup)\n          this.callStore.delete(call.id)\n        }\n        break\n\n      default:\n        throw new Error('Unhandled action')\n    }\n\n    if (call) {\n      this.eventHandler.emit(WEBSOCKET_EVENT_CALL, event.action, call)\n    }\n  }\n}\n"],"names":["__extends","ProtobufNullValue","globalImportUrl.parse","globalImportUrl.format","CallActions","CallDirection","SipClient.debug","SipClient.WebSocketInterface","SipClient.UA","EventEmitter","Response"],"mappings":"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"}