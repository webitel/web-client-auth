import { EventEmitter } from 'ee-ts';
export interface Message {
    event?: string;
    status?: string;
    seq?: number;
    seq_reply?: number;
    data: any;
    error?: Map<string, Error>;
}
export interface Request {
    seq: number;
    action: string;
    data?: object;
}
export interface SocketEvents {
    message(msg: Message): void;
    close(code: number): void;
    open(): void;
}
export declare class Socket extends EventEmitter<SocketEvents> {
    private host;
    private socket;
    constructor(host: string);
    connect(token: string): void;
    send(request: Request): never | null;
    close(code?: number): void;
    private onOpen;
    private onClose;
    private onMessage;
}
//# sourceMappingURL=socket.d.ts.map