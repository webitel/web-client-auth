import { __extends } from "tslib";
import { EventEmitter } from 'ee-ts';
import { formatWebSocketUri } from './utils';
var SOCKET_URL_SUFFIX = 'websocket';
var Socket = /** @class */ (function (_super) {
    __extends(Socket, _super);
    function Socket(host) {
        var _this = _super.call(this) || this;
        _this.host = host;
        return _this;
    }
    Socket.prototype.connect = function (token) {
        var _this = this;
        this.socket = new WebSocket(formatWebSocketUri(this.host) + "/" + SOCKET_URL_SUFFIX + "?access_token=" + token);
        this.socket.onclose = function (e) { return _this.onClose(e.code); };
        this.socket.onmessage = function (e) { return _this.onMessage(e.data); };
        this.socket.onopen = function () { return _this.onOpen(); };
    };
    Socket.prototype.send = function (request) {
        this.socket.send(JSON.stringify(request));
        return null;
    };
    Socket.prototype.close = function (code) {
        this.socket.close(code);
        delete this.socket;
    };
    Socket.prototype.onOpen = function () {
        this.emit('open');
    };
    Socket.prototype.onClose = function (code) {
        this.emit('close', code);
    };
    Socket.prototype.onMessage = function (data) {
        var message = JSON.parse(data);
        this.emit('message', message);
    };
    return Socket;
}(EventEmitter));
export { Socket };
//# sourceMappingURL=socket.js.map