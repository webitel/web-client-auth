# redirect all traffic to https
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 301 https://$host$request_uri;
}

# WebSocket
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

map $request_method     $api_backend {
     default "httpapi";
     POST    "storage:10023";
}

map $request_method     $api_url_backend {
     default /storage/media$1;
     POST    /api/v2/media$1;
}

# main server block
server {
	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server;

	server_name _;

	# enable subfolder method reverse proxy confs
	include /config/nginx/proxy-confs/*.subfolder.conf;

	# all ssl related config moved to ssl.conf
	include /config/nginx/ssl.conf;

	# enable for ldap auth
	#include /config/nginx/ldap.conf;

    client_max_body_size 0;
    proxy_connect_timeout       600s;
    proxy_send_timeout          600s;
    proxy_read_timeout          600s;
    send_timeout                600s;

    location / {
        root /www;
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "public";
        expires 1d;
    }

    location ~ ^/api/storage/(media|recordings)/.*/(stream|download).* {
        limit_except GET OPTIONS {
            deny all;
        }
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_send_timeout 3600s;
        proxy_read_timeout 3600s;
        rewrite ^/api/storage/(.*) /api/v2/$1 break;
        proxy_pass http://storage:10023;
   }

    location ~ ^/api/storage/media(.*) {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_send_timeout 3600s;
        proxy_read_timeout 3600s;
        rewrite ^/api/storage/media(.*) $api_url_backend break;
        proxy_pass http://$api_backend;
   }

    location ~ ^/api(/?)(.*) {
        rewrite ^/api(/?)(.*) /$2 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://httpapi;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
   }

    location ~ ^/ws(/?)(.*) {
        rewrite ^/ws(/?)(.*) /$2 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://engine;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_send_timeout 3600s;
        proxy_read_timeout 3600s;
   }

    location ~ ^/sip(/?) {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://opensips:5080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_send_timeout 3600s;
        proxy_read_timeout 3600s;
   }

}

# enable subdomain method reverse proxy confs
include /config/nginx/proxy-confs/*.subdomain.conf;
# enable proxy cache for auth
proxy_cache_path cache/ keys_zone=auth_cache:10m;
